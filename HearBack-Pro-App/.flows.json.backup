[
    {
        "id": "3674dfd11f96851f",
        "type": "tab",
        "label": "Device Network",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8b15064d8a9c0e4d",
        "type": "tab",
        "label": "Hub",
        "disabled": false,
        "info": "Flow that holds the information for Pro Hubs\n\nThis information is directed from the \"Packet Cartographer\". Any packets that have a message type matching \"FF\".",
        "env": []
    },
    {
        "id": "182d4fca46673a29",
        "type": "tab",
        "label": "Testing Grounds",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "259aabf780b92836",
        "type": "tab",
        "label": "Mixer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "07aa37bd8d4cfc0b",
        "type": "tab",
        "label": "UI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2f5fe808f0a354e8",
        "type": "subflow",
        "name": "Hub",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 280,
                "wires": [
                    {
                        "id": "e60d67f2b89dee1f"
                    },
                    {
                        "id": "084e4c1e5eacad08"
                    },
                    {
                        "id": "5a16a5241dd07516"
                    },
                    {
                        "id": "722b58a930a958ef"
                    },
                    {
                        "id": "72b64ddd4c4a7c2b"
                    },
                    {
                        "id": "17c8cc45ed3a217b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 260,
                "wires": [
                    {
                        "id": "494bf680ead3bcec",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "channel1",
                "type": "str",
                "value": "Channel 1",
                "ui": {
                    "icon": "font-awesome/fa-wheelchair-alt",
                    "label": {
                        "en-US": "Input 1"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "channel2",
                "type": "str",
                "value": "Channel 2",
                "ui": {
                    "icon": "font-awesome/fa-wheelchair-alt",
                    "label": {
                        "en-US": "Input 2"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "channel3",
                "type": "str",
                "value": "Channel 3",
                "ui": {
                    "icon": "font-awesome/fa-wheelchair-alt",
                    "label": {
                        "en-US": "Input 3"
                    }
                }
            },
            {
                "name": "channel4",
                "type": "str",
                "value": "Channel 4",
                "ui": {
                    "icon": "font-awesome/fa-wheelchair-alt",
                    "label": {
                        "en-US": "Input 4"
                    }
                }
            },
            {
                "name": "channel5",
                "type": "str",
                "value": "Channel 5",
                "ui": {
                    "icon": "font-awesome/fa-wheelchair-alt",
                    "label": {
                        "en-US": "Input 5"
                    }
                }
            },
            {
                "name": "channel6",
                "type": "str",
                "value": "Channel 6",
                "ui": {
                    "icon": "font-awesome/fa-wheelchair-alt",
                    "label": {
                        "en-US": "Input 6"
                    }
                }
            }
        ],
        "meta": {
            "module": "Hub"
        },
        "color": "#DDAA99"
    },
    {
        "id": "e0533ca531e9d6c6",
        "type": "subflow",
        "name": "Hub Meters A",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 64,
                "y": 418,
                "wires": [
                    {
                        "id": "7c9e4a948fc9e5d0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1384,
                "y": 418,
                "wires": [
                    {
                        "id": "4f5e75a14f036a75",
                        "port": 0
                    },
                    {
                        "id": "9560f1e6747dde6f",
                        "port": 0
                    },
                    {
                        "id": "894f4ea682b182ec",
                        "port": 0
                    },
                    {
                        "id": "7378ad79a2c39583",
                        "port": 0
                    },
                    {
                        "id": "670a6d2e6406be50",
                        "port": 0
                    },
                    {
                        "id": "81ba446bf8fc4c17",
                        "port": 0
                    },
                    {
                        "id": "78f9221575d5f761",
                        "port": 0
                    },
                    {
                        "id": "a9218560211c0eb7",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "38c62560e07b9ce0",
        "type": "subflow",
        "name": "Stereo Links",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 174,
                "y": 638,
                "wires": [
                    {
                        "id": "8e7d18ce384023bd"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1010,
                "y": 352,
                "wires": [
                    {
                        "id": "efd67162ccfd8406",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 396,
                "wires": [
                    {
                        "id": "8cd5a69c59395735",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 440,
                "wires": [
                    {
                        "id": "dbe0548c7beb41f0",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 484,
                "wires": [
                    {
                        "id": "63cb96ba96c24b54",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 528,
                "wires": [
                    {
                        "id": "734f20b3efa57bfa",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 572,
                "wires": [
                    {
                        "id": "86b2d4dc0a450f27",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 616,
                "wires": [
                    {
                        "id": "69eaae79830b2568",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 660,
                "wires": [
                    {
                        "id": "53e51b153bf34998",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 704,
                "wires": [
                    {
                        "id": "fad76bbba047c572",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 748,
                "wires": [
                    {
                        "id": "5a8c9714c679ac20",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 792,
                "wires": [
                    {
                        "id": "92cdaa8efcc20421",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 836,
                "wires": [
                    {
                        "id": "4134e7a8803c5aa5",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 880,
                "wires": [
                    {
                        "id": "04b35d9ab64e6110",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 924,
                "wires": [
                    {
                        "id": "078bb602dc4eec87",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 968,
                "wires": [
                    {
                        "id": "4651c9c05de852b6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1010,
                "y": 1012,
                "wires": [
                    {
                        "id": "1ff2194f6d5b5e88",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b6c9ef1861969ee4",
        "type": "subflow",
        "name": "Hub Meters B",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 64,
                "y": 418,
                "wires": [
                    {
                        "id": "2f08e36173444153"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1428,
                "y": 418,
                "wires": [
                    {
                        "id": "9405b6bb1f1ac52f",
                        "port": 0
                    },
                    {
                        "id": "9bfda4542a1d95e2",
                        "port": 0
                    },
                    {
                        "id": "72c626fbdf23993f",
                        "port": 0
                    },
                    {
                        "id": "81de80e9cb32e0db",
                        "port": 0
                    },
                    {
                        "id": "56efe74121e3b85a",
                        "port": 0
                    },
                    {
                        "id": "57deca29b98aba29",
                        "port": 0
                    },
                    {
                        "id": "66cd6baa79cd85af",
                        "port": 0
                    },
                    {
                        "id": "d7a7478c12fda776",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "39a4598626b2fe32",
        "type": "subflow",
        "name": "Query Names",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 130,
                "y": 418,
                "wires": [
                    {
                        "id": "ed0ec431ccd3faeb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1428,
                "y": 418,
                "wires": [
                    {
                        "id": "637f89fa7f899cc9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "82ff8e0cb1c21fc3",
        "type": "subflow",
        "name": "Start Fast",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 174,
                "y": 154,
                "wires": [
                    {
                        "id": "384c852042ef2077"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1406,
                "y": 154,
                "wires": [
                    {
                        "id": "04d95dbb381f32d7",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "92e5f9896b2243a0",
        "type": "ui_tab",
        "name": "Hubs and Sources",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "07dbb68345dacb0a",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Hub Theme",
                "default": "#4B7930",
                "baseColor": "#212121",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#212121",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#212121",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#232323",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#474747",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#929292",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#212121",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#424242",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 70,
                "sy": 75,
                "gx": 2,
                "gy": 2,
                "cx": 2,
                "cy": 2,
                "px": 2,
                "py": 2
            }
        }
    },
    {
        "id": "bfc283435227b1a2",
        "type": "ui_group",
        "name": "Hub 3",
        "tab": "b5c65cf5.9d8fe",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b5c65cf5.9d8fe",
        "type": "ui_tab",
        "name": "Testing",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6cbfdb66874abd57",
        "type": "ui_spacer",
        "z": "3674dfd11f96851f",
        "name": "spacer",
        "group": "53f1b4559257781d",
        "order": 1,
        "width": 6,
        "height": 1
    },
    {
        "id": "2b81390c7419b4bf",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "a0f3de3d1a87401c",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "f516c05d7894d36f",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "26f778c7a81894eb",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "c727b8a20922bd43",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "0a066538bc21ccf9",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "1b080f945dc5e66a",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "fc3ae9c1b9e1683b",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "38befe937451ded2",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "850e1828f11242af",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "6160eb650d4f00ab",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "ce1c4df823d52d69",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "3c1a668735dda7e2",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "8ea21259c8d58a78",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "c7283bfaf2d3ba3f",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "78d1caad04062a8e",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 17,
        "width": 2,
        "height": 1
    },
    {
        "id": "157e8ff5b9fbb84e",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "1a83bba0fa2a1172",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 19,
        "width": 2,
        "height": 1
    },
    {
        "id": "051df42342c75acf",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 20,
        "width": 2,
        "height": 1
    },
    {
        "id": "3e37083cbc69df00",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 21,
        "width": 2,
        "height": 1
    },
    {
        "id": "6fe8a7b1a1067adf",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 22,
        "width": 2,
        "height": 1
    },
    {
        "id": "69a2badd1e4ecd79",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 23,
        "width": 2,
        "height": 1
    },
    {
        "id": "9852ea1da6160ef5",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 24,
        "width": 2,
        "height": 1
    },
    {
        "id": "89fe72b9eabcfd01",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 25,
        "width": 2,
        "height": 1
    },
    {
        "id": "d318c938c5f3cf85",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 26,
        "width": 2,
        "height": 1
    },
    {
        "id": "c628580cd9cd6d99",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 27,
        "width": 2,
        "height": 1
    },
    {
        "id": "9af46cf569e6a43d",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 28,
        "width": 2,
        "height": 1
    },
    {
        "id": "3d3b4767681b03c1",
        "type": "ui_spacer",
        "z": "8b15064d8a9c0e4d",
        "name": "spacer",
        "group": "7dc73a101baf0327",
        "order": 29,
        "width": 2,
        "height": 1
    },
    {
        "id": "334def06aa2d0d6c",
        "type": "ui_group",
        "name": "Hub Metrics B",
        "tab": "92e5f9896b2243a0",
        "order": 2,
        "disp": false,
        "width": 29,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fd4dc9f7a2926ec7",
        "type": "ui_group",
        "name": "Hub Metrics A",
        "tab": "92e5f9896b2243a0",
        "order": 1,
        "disp": false,
        "width": 29,
        "collapse": false,
        "className": ""
    },
    {
        "id": "64704468.613964",
        "type": "ui_group",
        "name": "Default Group",
        "tab": "ef22f042.de6a1",
        "order": 1,
        "disp": true,
        "width": "16"
    },
    {
        "id": "ef22f042.de6a1",
        "type": "ui_tab",
        "name": "Home Tab",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "de4f741556ab359f",
        "type": "ui_group",
        "z": "38c62560e07b9ce0",
        "name": "Hub 2",
        "tab": "b5c65cf5.9d8fe",
        "order": 2,
        "disp": true,
        "width": 4,
        "collapse": true,
        "className": ""
    },
    {
        "id": "82de9b2101eec3b3",
        "type": "ui_group",
        "z": "38c62560e07b9ce0",
        "name": "Hub 4",
        "tab": "b5c65cf5.9d8fe",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "eb099e4f9f97ec9e",
        "type": "ui_group",
        "name": "Hub Channel Change",
        "tab": "92e5f9896b2243a0",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f19e5eaad87a5cac",
        "type": "ui_tab",
        "name": "Mixer Overview",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a073de8d1f2ab01a",
        "type": "ui_group",
        "name": "Mixers",
        "tab": "f19e5eaad87a5cac",
        "order": 1,
        "disp": false,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f7466263f752ca4a",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 1,
        "width": 8,
        "height": 1
    },
    {
        "id": "de7cf52ff95dd324",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "0ad454c85eb514a3",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "e5defd92896e2bf0",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "c32749db72862f85",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "933a0612ef5c861c",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "dd871a78fea032b4",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "287c5001200a9d6f",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "473b51a6dd5f9b2c",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "472a449416b43e2c",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "21137c3c83d4daa8",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "1f1a41424f158e3c",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "5bdcb95ae4f08905",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "05e8d56146840236",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "eb890df61fe0b9ee",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "fb93221dacb4a0de",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "fc9bc7fc83866934",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "135543b75945ad38",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "dad1e7ae934eb234",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "7f89f07f162378d1",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 32,
        "width": 1,
        "height": 1
    },
    {
        "id": "2c60946957c27b7d",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "fbf9fc06ec8bbdd4",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "f21637718952ea6b",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "cbc74763fb8c8d9e",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 40,
        "width": 1,
        "height": 1
    },
    {
        "id": "4b1f6b428ffeba8f",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 41,
        "width": 1,
        "height": 1
    },
    {
        "id": "320526dbbd40c44f",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 42,
        "width": 1,
        "height": 1
    },
    {
        "id": "6d457c21b80f3ea5",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 45,
        "width": 1,
        "height": 1
    },
    {
        "id": "9b1e89fdca1257da",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 46,
        "width": 1,
        "height": 1
    },
    {
        "id": "345522258add0504",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 49,
        "width": 1,
        "height": 1
    },
    {
        "id": "26cd158151bc5477",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 50,
        "width": 1,
        "height": 1
    },
    {
        "id": "c16b7f7b962d06fd",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 51,
        "width": 1,
        "height": 1
    },
    {
        "id": "8784eddb218198bf",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 52,
        "width": 1,
        "height": 1
    },
    {
        "id": "4f58de3eca5972a6",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 55,
        "width": 1,
        "height": 1
    },
    {
        "id": "7b070cdd2a83c598",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 56,
        "width": 1,
        "height": 1
    },
    {
        "id": "371a42cae8119b55",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 59,
        "width": 1,
        "height": 1
    },
    {
        "id": "a3a7c4f9d530145f",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 60,
        "width": 1,
        "height": 1
    },
    {
        "id": "138feea12151fdeb",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 61,
        "width": 1,
        "height": 1
    },
    {
        "id": "cc0f3d00d1a4af51",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 62,
        "width": 1,
        "height": 1
    },
    {
        "id": "cf8a92b75b86ce67",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 65,
        "width": 1,
        "height": 1
    },
    {
        "id": "12717d3e7f5cb2de",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 66,
        "width": 1,
        "height": 1
    },
    {
        "id": "8d2657a3a1427864",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 69,
        "width": 1,
        "height": 1
    },
    {
        "id": "4a8ebea2684ed99e",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 70,
        "width": 1,
        "height": 1
    },
    {
        "id": "44b2df6434866d8d",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 71,
        "width": 1,
        "height": 1
    },
    {
        "id": "7617c1d640a31c5c",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 72,
        "width": 1,
        "height": 1
    },
    {
        "id": "5a14b0d3649ed50e",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 75,
        "width": 1,
        "height": 1
    },
    {
        "id": "593052cb2d037754",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 76,
        "width": 1,
        "height": 1
    },
    {
        "id": "c91c4b34abe4bd30",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 79,
        "width": 1,
        "height": 1
    },
    {
        "id": "23c7935e2d329458",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 80,
        "width": 1,
        "height": 1
    },
    {
        "id": "5386d9719abed296",
        "type": "ui_spacer",
        "z": "259aabf780b92836",
        "name": "spacer",
        "group": "a073de8d1f2ab01a",
        "order": 81,
        "width": 1,
        "height": 1
    },
    {
        "id": "d6d2255edec9ee63",
        "type": "soundfile-directory",
        "directory": "/Users/bangzmanangz/.node-red/projects/HearBack-Pro-App/data/soundfiles"
    },
    {
        "id": "af24e0450cd81a85",
        "type": "inject",
        "z": "2f5fe808f0a354e8",
        "name": "Channel Name Message",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "FFFF63",
        "payloadType": "str",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "494bf680ead3bcec"
            ]
        ]
    },
    {
        "id": "494bf680ead3bcec",
        "type": "join",
        "z": "2f5fe808f0a354e8",
        "name": "Name Packet",
        "mode": "auto",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\"0x00\"",
        "joinerType": "bin",
        "accumulate": false,
        "timeout": "",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 680,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e60d67f2b89dee1f",
        "type": "change",
        "z": "2f5fe808f0a354e8",
        "name": "Channel 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channel1",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 180,
        "wires": [
            [
                "e1f5067d4081a9e8"
            ]
        ]
    },
    {
        "id": "084e4c1e5eacad08",
        "type": "change",
        "z": "2f5fe808f0a354e8",
        "name": "Channel 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channel2",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 220,
        "wires": [
            [
                "6889de0d721a75af"
            ]
        ]
    },
    {
        "id": "5a16a5241dd07516",
        "type": "change",
        "z": "2f5fe808f0a354e8",
        "name": "Channel 3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channel3",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 260,
        "wires": [
            [
                "20ea116330104865"
            ]
        ]
    },
    {
        "id": "722b58a930a958ef",
        "type": "change",
        "z": "2f5fe808f0a354e8",
        "name": "Channel 4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channel4",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 300,
        "wires": [
            [
                "4e9980f40aa5a575"
            ]
        ]
    },
    {
        "id": "72b64ddd4c4a7c2b",
        "type": "change",
        "z": "2f5fe808f0a354e8",
        "name": "Channel 5",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channel5",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "3e12784be989d3d2"
            ]
        ]
    },
    {
        "id": "17c8cc45ed3a217b",
        "type": "change",
        "z": "2f5fe808f0a354e8",
        "name": "Channel 6",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "channel6",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 380,
        "wires": [
            [
                "7a12e8fe995c66e9"
            ]
        ]
    },
    {
        "id": "e1f5067d4081a9e8",
        "type": "function",
        "z": "2f5fe808f0a354e8",
        "name": "",
        "func": "\nmsg.payload.padEnd(9)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 180,
        "wires": [
            [
                "494bf680ead3bcec"
            ]
        ]
    },
    {
        "id": "6889de0d721a75af",
        "type": "function",
        "z": "2f5fe808f0a354e8",
        "name": "",
        "func": "\nmsg.payload.padEnd(9)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 220,
        "wires": [
            [
                "494bf680ead3bcec"
            ]
        ]
    },
    {
        "id": "20ea116330104865",
        "type": "function",
        "z": "2f5fe808f0a354e8",
        "name": "",
        "func": "\nmsg.payload.padEnd(9)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "494bf680ead3bcec"
            ]
        ]
    },
    {
        "id": "4e9980f40aa5a575",
        "type": "function",
        "z": "2f5fe808f0a354e8",
        "name": "",
        "func": "\nmsg.payload.padEnd(9)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 300,
        "wires": [
            [
                "494bf680ead3bcec"
            ]
        ]
    },
    {
        "id": "3e12784be989d3d2",
        "type": "function",
        "z": "2f5fe808f0a354e8",
        "name": "",
        "func": "\nmsg.payload.padEnd(9)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 340,
        "wires": [
            [
                "494bf680ead3bcec"
            ]
        ]
    },
    {
        "id": "7a12e8fe995c66e9",
        "type": "function",
        "z": "2f5fe808f0a354e8",
        "name": "",
        "func": "\nmsg.payload.padEnd(9)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 380,
        "wires": [
            [
                "494bf680ead3bcec"
            ]
        ]
    },
    {
        "id": "90fb241e743a97be",
        "type": "inject",
        "z": "2f5fe808f0a354e8",
        "name": "Channel Packet Complete",
        "props": [
            {
                "p": "complete",
                "v": "FF",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 260,
        "y": 440,
        "wires": [
            [
                "494bf680ead3bcec"
            ]
        ]
    },
    {
        "id": "dc65b77f8c6ed5da",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel1\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 132,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "8086e40e1f28637f",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel2\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 176,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "1ac10aba576d8860",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel3\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 220,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "9ff3658ffcf13887",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel4\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 264,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "82068a9e562cd544",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel5\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 308,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "bda5d38ca6d587b8",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel6\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 352,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "ab05a5db49154efe",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel7\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 396,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "f308ef8200e120ee",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel8\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 440,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "dcd1428166fdfc17",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel9\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 484,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "6d192dd57ebdc203",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel10\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 528,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "3d6b9b0d45b6e406",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel11\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 572,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "7a9cd53825cf37ae",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel12\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 616,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "77834f2d7bd91015",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel13\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 660,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "2531f673d0c7e962",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel14\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 704,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "1d86c7a48c6c0843",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel15\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 748,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "2145b69628f533e2",
        "type": "function",
        "z": "e0533ca531e9d6c6",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel16\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 728,
        "y": 792,
        "wires": [
            [
                "ebdf0c62f1516675"
            ]
        ]
    },
    {
        "id": "b38231cc2975ec59",
        "type": "switch",
        "z": "e0533ca531e9d6c6",
        "name": "Audio I/O Routing",
        "property": "parts.index",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "9",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "10",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "11",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "12",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "13",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "14",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "15",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "16",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "17",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "18",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "19",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "20",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "21",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 16,
        "x": 442,
        "y": 418,
        "wires": [
            [
                "dc65b77f8c6ed5da"
            ],
            [
                "8086e40e1f28637f"
            ],
            [
                "1ac10aba576d8860"
            ],
            [
                "9ff3658ffcf13887"
            ],
            [
                "82068a9e562cd544"
            ],
            [
                "bda5d38ca6d587b8"
            ],
            [
                "ab05a5db49154efe"
            ],
            [
                "f308ef8200e120ee"
            ],
            [
                "dcd1428166fdfc17"
            ],
            [
                "6d192dd57ebdc203"
            ],
            [
                "3d6b9b0d45b6e406"
            ],
            [
                "7a9cd53825cf37ae"
            ],
            [
                "77834f2d7bd91015"
            ],
            [
                "2531f673d0c7e962"
            ],
            [
                "1d86c7a48c6c0843"
            ],
            [
                "2145b69628f533e2"
            ]
        ],
        "inputLabels": [
            "Input Signal Meters"
        ],
        "outputLabels": [
            "Channel 1",
            "Channel 2",
            "Channel 3",
            "Channel 4",
            "Channel 5",
            "Channel 6",
            "Channel 7",
            "Channel 8",
            "Channel 9",
            "Channel 10",
            "Channel 11",
            "Channel 12",
            "Channel 13",
            "Channel 14",
            "Channel 15",
            "Channel 16"
        ]
    },
    {
        "id": "ebdf0c62f1516675",
        "type": "ui_template",
        "z": "e0533ca531e9d6c6",
        "group": "334def06aa2d0d6c",
        "name": "Hub Meter Functionality",
        "order": 34,
        "width": 28,
        "height": 1,
        "format": "<!--\n<script src=\"/scripts/highcharts/highch8arts.js\"></script>\n<script src=\"/scripts/highcharts/modules/exporting.js\"></script>\n<script src=\"/scripts/highcharts/modules/no-data-to-display.js\"></script>\n<script src=\"/scripts/site/chart.js\"></script>\n\n<script src=\"https://code.highcharts.com/modules/exporting.src.js\"></script>\n<script src=\"https://code.highcharts.com/modules/no-data-to-display.src.js\"></script>\n-->\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src = \"https://code.highcharts.com/highcharts-more.js\"></script>\n<script src=\"https://code.highcharts.com/highcharts.src.js\"></script>\n\n<script>\n\n(function(scope){\n    var timer = setInterval(function(){\n        if (!window.Highcharts) return;\n        //debugger;\n        clearInterval(timer);\n\n        function getChartOptions(renderToElement) {\n        \treturn {\n        \t\tchart: {\n        \t\t    type: \"gauge\",\n        \t\t    plotBackgroundColor: null,\n        \t\t    backgroundColor: null,\n        \t\t\trenderTo: renderToElement,\n        \t\t\tplotBackgroundImage: \"https://i.ibb.co/M9fcPjN/vu.png\",\n                    animation: {\n                        duration: 300,\n                        defer: 0\n                    }\n        \t\t},\n        \t\ttitle: {\n        \t\t    text: undefined\n        \t\t},\n        \t\tcredits: {\n        \t\t    enabled: false\n        \t\t},\n        \t\tpane:[\n                    {\n                    startAngle: -60,\n                    endAngle: 60,\n                    background: null,\n                    center: ['50%', '80%'],\n                    size: 250\n                    }\n                ],\n                yAxis: {\n                    visible: false,\n                    min: -20,\n                    max: 6\n                },\n                plotOptions: {\n                    gauge: {\n                        dataLabels: {\n                            enabled: false,\n                            wrap: false\n                        },\n                        dial: {\n                            radius: '62%',\n                            baseWidth: 2,\n                            baseLength: '100%',\n                            rearLength: 0\n                        },\n                        series: {\n                            pointStart: -20,\n                            animation: {\n                                defer: 0,\n                                duration: 25\n                            }\n                        },\n                        pivot: {\n                            radius: 0\n                        }\n                    }\n                },\n        \t\tseries: [{\n        \t\t    //data: [0],\n        \t\t    yAxis: 0,\n        \t\t\t//name: 'Forward',\n        \t\t\t//lineWidth: 1,\n        \t\t\ttype: \"gauge\"\n        \t\t\t//dashStyle: 'longdash',\n        \t\t\t//connectEnds: false,\n                    //connectNulls: true,\n\t\t            //threshold: 0\n        \t\t}]\n        \t};\n        };\n    \n        var ch1 = new Highcharts.chart(getChartOptions('meter1'));\n        var pForward1 = ch1.series[0];\n        \n        var ch2 = new Highcharts.chart(getChartOptions('meter2'));\n        var pForward2 = ch2.series[0];\n        \n        var ch3 = new Highcharts.chart(getChartOptions('meter3'));\n        var pForward3 = ch3.series[0];\n        \n        var ch4 = new Highcharts.chart(getChartOptions('meter4'));\n        var pForward4 = ch4.series[0];\n        \n        var ch5 = new Highcharts.chart(getChartOptions('meter5'));\n        var pForward5 = ch5.series[0];\n        \n        var ch6 = new Highcharts.chart(getChartOptions('meter6'));\n        var pForward6 = ch6.series[0];\n        \n        var ch7 = new Highcharts.chart(getChartOptions('meter7'));\n        var pForward7 = ch7.series[0];\n        \n        var ch8 = new Highcharts.chart(getChartOptions('meter8'));\n        var pForward8 = ch8.series[0];\n        \n        var ch9 = new Highcharts.chart(getChartOptions('meter9'));\n        var pForward9 = ch9.series[0];\n        \n        var ch10 = new Highcharts.chart(getChartOptions('meter10'));\n        var pForward10 = ch10.series[0];\n        \n        var ch11 = new Highcharts.chart(getChartOptions('meter11'));\n        var pForward11 = ch11.series[0];\n        \n        var ch12 = new Highcharts.chart(getChartOptions('meter12'));\n        var pForward12 = ch12.series[0];\n        \n        var ch13 = new Highcharts.chart(getChartOptions('meter13'));\n        var pForward13 = ch13.series[0];\n        \n        var ch14 = new Highcharts.chart(getChartOptions('meter14'));\n        var pForward14 = ch14.series[0];\n        \n        var ch15 = new Highcharts.chart(getChartOptions('meter15'));\n        var pForward15 = ch15.series[0];\n        \n        var ch16 = new Highcharts.chart(getChartOptions('meter16'));\n        var pForward16 = ch16.series[0];\n\n        scope.$watch('msg', function(msg) {\n            switch (msg.topic){\n                case 'channel1':\n                    pForward1.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel2':\n                    pForward2.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel3':\n                    pForward3.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel4':\n                    pForward4.setData(msg.payload.data, true, false, true);\n                    break;                \n                case 'channel5':\n                    pForward5.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel6':\n                    pForward6.setData(msg.payload.data, true, false, true);\n                    break;                \n                case 'channel7':\n                    pForward7.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel8':\n                    pForward8.setData(msg.payload.data, true, false, true);\n                    break;                \n                case 'channel9':\n                    pForward9.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel10':\n                    pForward10.setData(msg.payload.data, true, false, true);\n                    break;               \n                case 'channel11':\n                    pForward11.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel12':\n                    pForward12.setData(msg.payload.data, true, false, true);\n                    break;                \n                case 'channel13':\n                    pForward13.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel14':\n                    pForward14.setData(msg.payload.data, true, false, true);\n                    break;                \n                case 'channel15':\n                    pForward15.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel16':\n                    pForward16.setData(msg.payload.data, true, false, true);\n                    break;                \n                default:\n                    break;\n            }\n        });\n\n    }, 50);\n})(scope);\n\n\n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1012,
        "y": 418,
        "wires": [
            [
                "4f5e75a14f036a75",
                "9560f1e6747dde6f",
                "894f4ea682b182ec",
                "7378ad79a2c39583",
                "670a6d2e6406be50",
                "81ba446bf8fc4c17",
                "78f9221575d5f761",
                "a9218560211c0eb7"
            ]
        ]
    },
    {
        "id": "4f5e75a14f036a75",
        "type": "ui_template",
        "z": "e0533ca531e9d6c6",
        "group": "334def06aa2d0d6c",
        "name": "Hub Set 1",
        "order": 1,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter1\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter2\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n    section {\n        width: 100%;\n        height: 100%;\n    }\n    \n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1248,
        "y": 264,
        "wires": [
            []
        ]
    },
    {
        "id": "9560f1e6747dde6f",
        "type": "ui_template",
        "z": "e0533ca531e9d6c6",
        "group": "334def06aa2d0d6c",
        "name": "Hub Set 2",
        "order": 2,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter3\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter4\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n    \n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1248,
        "y": 308,
        "wires": [
            []
        ]
    },
    {
        "id": "81ba446bf8fc4c17",
        "type": "ui_template",
        "z": "e0533ca531e9d6c6",
        "group": "334def06aa2d0d6c",
        "name": "Hub Set 6",
        "order": 19,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter11\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter12\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n\n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1248,
        "y": 484,
        "wires": [
            []
        ]
    },
    {
        "id": "894f4ea682b182ec",
        "type": "ui_template",
        "z": "e0533ca531e9d6c6",
        "group": "334def06aa2d0d6c",
        "name": "Hub Set 3",
        "order": 3,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter5\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter6\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n\n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1248,
        "y": 352,
        "wires": [
            []
        ]
    },
    {
        "id": "7378ad79a2c39583",
        "type": "ui_template",
        "z": "e0533ca531e9d6c6",
        "group": "334def06aa2d0d6c",
        "name": "Hub Set 4",
        "order": 4,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter7\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter8\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n\n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1248,
        "y": 396,
        "wires": [
            []
        ]
    },
    {
        "id": "78f9221575d5f761",
        "type": "ui_template",
        "z": "e0533ca531e9d6c6",
        "group": "334def06aa2d0d6c",
        "name": "Hub Set 7",
        "order": 20,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter13\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter14\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n\n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1248,
        "y": 528,
        "wires": [
            []
        ]
    },
    {
        "id": "a9218560211c0eb7",
        "type": "ui_template",
        "z": "e0533ca531e9d6c6",
        "group": "334def06aa2d0d6c",
        "name": "Hub Set 8",
        "order": 21,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter15\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter16\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n\n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1248,
        "y": 572,
        "wires": [
            []
        ]
    },
    {
        "id": "670a6d2e6406be50",
        "type": "ui_template",
        "z": "e0533ca531e9d6c6",
        "group": "334def06aa2d0d6c",
        "name": "Hub Set 5",
        "order": 18,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter9\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter10\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n\n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1248,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "7c9e4a948fc9e5d0",
        "type": "split",
        "z": "e0533ca531e9d6c6",
        "name": "Packet Splitter",
        "splt": "1",
        "spltType": "len",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 212,
        "y": 418,
        "wires": [
            [
                "b38231cc2975ec59"
            ]
        ]
    },
    {
        "id": "efd67162ccfd8406",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 352,
        "wires": [
            []
        ]
    },
    {
        "id": "dbe0548c7beb41f0",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "63cb96ba96c24b54",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 484,
        "wires": [
            []
        ]
    },
    {
        "id": "734f20b3efa57bfa",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 528,
        "wires": [
            []
        ]
    },
    {
        "id": "86b2d4dc0a450f27",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 572,
        "wires": [
            []
        ]
    },
    {
        "id": "69eaae79830b2568",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 616,
        "wires": [
            []
        ]
    },
    {
        "id": "53e51b153bf34998",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "fad76bbba047c572",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 704,
        "wires": [
            []
        ]
    },
    {
        "id": "5a8c9714c679ac20",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 748,
        "wires": [
            []
        ]
    },
    {
        "id": "92cdaa8efcc20421",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 792,
        "wires": [
            []
        ]
    },
    {
        "id": "4134e7a8803c5aa5",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 836,
        "wires": [
            []
        ]
    },
    {
        "id": "04b35d9ab64e6110",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "078bb602dc4eec87",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 924,
        "wires": [
            []
        ]
    },
    {
        "id": "4651c9c05de852b6",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 968,
        "wires": [
            []
        ]
    },
    {
        "id": "1ff2194f6d5b5e88",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 1012,
        "wires": [
            []
        ]
    },
    {
        "id": "8cd5a69c59395735",
        "type": "trigger",
        "z": "38c62560e07b9ce0",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "trigger",
        "outputs": 1,
        "x": 852,
        "y": 396,
        "wires": [
            []
        ]
    },
    {
        "id": "2015f3f5fe972ec4",
        "type": "function",
        "z": "38c62560e07b9ce0",
        "name": "Binary Splitter",
        "func": "\nvar stereoString = msg.payload\n\nlet messages = new Array(16)\n\nlet stereoLinks = Array.from(stereoString)\n\nfor (let i = 0; i < messages.length; i++) {\n        messages[i] = {\"payload\" : stereoLinks[i],\n            \"topic\": \"trigger\"\n        }\n}\n\nreturn messages;",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 586,
        "y": 638,
        "wires": [
            [
                "efd67162ccfd8406"
            ],
            [
                "8cd5a69c59395735"
            ],
            [
                "dbe0548c7beb41f0"
            ],
            [
                "63cb96ba96c24b54"
            ],
            [
                "734f20b3efa57bfa"
            ],
            [
                "86b2d4dc0a450f27"
            ],
            [
                "69eaae79830b2568"
            ],
            [
                "53e51b153bf34998"
            ],
            [
                "fad76bbba047c572"
            ],
            [
                "5a8c9714c679ac20"
            ],
            [
                "92cdaa8efcc20421"
            ],
            [
                "4134e7a8803c5aa5"
            ],
            [
                "04b35d9ab64e6110"
            ],
            [
                "078bb602dc4eec87"
            ],
            [
                "4651c9c05de852b6"
            ],
            [
                "1ff2194f6d5b5e88"
            ]
        ]
    },
    {
        "id": "8e7d18ce384023bd",
        "type": "function",
        "z": "38c62560e07b9ce0",
        "name": "Hex => Binary + Reverse",
        "func": "var msgStereo1 = msg.payload[27].toString(2)\n\nvar msgStereo2 = msg.payload[28].toString(2)\n\nvar reversedMessage1 = msgStereo1.split(\"\").reverse().join(\"\")\n\nvar reversedMessage2 = msgStereo2.split(\"\").reverse().join(\"\")\n\nvar pad = \"0\"\n\nvar count, padding, count2, padding2, finMsg1, finMsg2\n        \n        count = 8 - reversedMessage1.length\n        \n        padding = pad.repeat(count)\n        \n        finMsg1 = reversedMessage1 + padding\n        \n        count2 = 8 - reversedMessage2.length\n        \n        padding2 = pad.repeat(count2)\n        \n        finMsg2 = reversedMessage2 + padding2\n    \nvar stereoObject = finMsg1 + finMsg2\n\nvar newMsg = {\"payload\": stereoObject}\n\nnewMsg.topic = msg.topic\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 352,
        "y": 638,
        "wires": [
            [
                "2015f3f5fe972ec4"
            ]
        ]
    },
    {
        "id": "9405b6bb1f1ac52f",
        "type": "ui_template",
        "z": "b6c9ef1861969ee4",
        "group": "fd4dc9f7a2926ec7",
        "name": "Hub Set 9",
        "order": 2,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter17\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter18\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n    section {\n        width: 100%;\n        height: 100%;\n    }\n    \n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1270,
        "y": 286,
        "wires": [
            []
        ]
    },
    {
        "id": "9bfda4542a1d95e2",
        "type": "ui_template",
        "z": "b6c9ef1861969ee4",
        "group": "fd4dc9f7a2926ec7",
        "name": "Hub Set 10",
        "order": 3,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter19\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter20\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n\n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 330,
        "wires": [
            []
        ]
    },
    {
        "id": "72c626fbdf23993f",
        "type": "ui_template",
        "z": "b6c9ef1861969ee4",
        "group": "fd4dc9f7a2926ec7",
        "name": "Hub Set 11",
        "order": 4,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter21\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter22\" style=\"width: 95%; height: 150px; margin: auto></div>\n    </div>\n</section>\n</section>\n<style>\n    section {\n        width: 100%;\n    }\n    \n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 374,
        "wires": [
            []
        ]
    },
    {
        "id": "81de80e9cb32e0db",
        "type": "ui_template",
        "z": "b6c9ef1861969ee4",
        "group": "fd4dc9f7a2926ec7",
        "name": "Hub Set 12",
        "order": 5,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter23\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter24\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n    section {\n        width: 100%;\n    }\n    \n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 418,
        "wires": [
            []
        ]
    },
    {
        "id": "56efe74121e3b85a",
        "type": "ui_template",
        "z": "b6c9ef1861969ee4",
        "group": "fd4dc9f7a2926ec7",
        "name": "Hub Set 13",
        "order": 18,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter25\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter26\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n    section {\n        width: 100%;\n    }\n    \n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 462,
        "wires": [
            []
        ]
    },
    {
        "id": "57deca29b98aba29",
        "type": "ui_template",
        "z": "b6c9ef1861969ee4",
        "group": "fd4dc9f7a2926ec7",
        "name": "Hub Set 14",
        "order": 19,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter27\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter28\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n    section {\n        width: 100%;\n    }\n    \n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 506,
        "wires": [
            []
        ]
    },
    {
        "id": "66cd6baa79cd85af",
        "type": "ui_template",
        "z": "b6c9ef1861969ee4",
        "group": "fd4dc9f7a2926ec7",
        "name": "Hub Set 15",
        "order": 20,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter29\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter30\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n    section {\n        width: 100%;\n    }\n    \n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 550,
        "wires": [
            []
        ]
    },
    {
        "id": "d7a7478c12fda776",
        "type": "ui_template",
        "z": "b6c9ef1861969ee4",
        "group": "fd4dc9f7a2926ec7",
        "name": "Hub Set 16",
        "order": 21,
        "width": 7,
        "height": 2,
        "format": "<section>\n<section class=\"container\">\n    <div class=\"left-half\">\n        <div id=\"meter31\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n\n    <div class=\"right-half\">\n        <div id=\"meter32\" style=\"width: 95%; height: 150px; margin: auto\"></div>\n    </div>\n</section>\n</section>\n<style>\n    section {\n        width: 100%;\n    }\n    \n    .container {\n        border-width: 2px;\n        border-radius: 5px;\n        background-image: url(\"https://wallpaperaccess.com/full/3435289.jpg\");\n    }\n    \n    .left-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n    \n    .right-half {\n        text-align: center;\n        float: left;\n        width: 50%;\n        height: 100%;\n    }\n</style>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 594,
        "wires": [
            []
        ]
    },
    {
        "id": "0db84496bac6d048",
        "type": "ui_template",
        "z": "b6c9ef1861969ee4",
        "group": "fd4dc9f7a2926ec7",
        "name": "Hub Meter Functionality",
        "order": 34,
        "width": 28,
        "height": 1,
        "format": "<!--\n<script src=\"/scripts/highcharts/highch8arts.js\"></script>\n<script src=\"/scripts/highcharts/modules/exporting.js\"></script>\n<script src=\"/scripts/highcharts/modules/no-data-to-display.js\"></script>\n<script src=\"/scripts/site/chart.js\"></script>\n\n<script src=\"https://code.highcharts.com/modules/exporting.src.js\"></script>\n<script src=\"https://code.highcharts.com/modules/no-data-to-display.src.js\"></script>\n-->\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src = \"https://code.highcharts.com/highcharts-more.js\"></script>\n<script src=\"https://code.highcharts.com/highcharts.src.js\"></script>\n\n<script>\n\n(function(scope){\n    var timer = setInterval(function(){\n        if (!window.Highcharts) return;\n        //debugger;\n        clearInterval(timer);\n\n        function getChartOptions(renderToElement) {\n        \treturn {\n        \t\tchart: {\n        \t\t    type: \"gauge\",\n        \t\t    plotBackgroundColor: null,\n        \t\t    backgroundColor: null,\n        \t\t\trenderTo: renderToElement,\n        \t\t\tplotBackgroundImage: \"https://i.ibb.co/M9fcPjN/vu.png\",\n                    animation: {\n                        duration: 300,\n                        defer: 0\n                    }\n        \t\t},\n        \t\ttitle: {\n        \t\t    text: undefined\n        \t\t},\n        \t\tcredits: {\n        \t\t    enabled: false\n        \t\t},\n        \t\tpane:[\n                    {\n                    startAngle: -60,\n                    endAngle: 60,\n                    background: null,\n                    center: ['50%', '80%'],\n                    size: 250\n                    }\n                ],\n                yAxis: {\n                    visible: false,\n                    min: -20,\n                    max: 6\n                },\n                plotOptions: {\n                    gauge: {\n                        dataLabels: {\n                            enabled: false,\n                            wrap: false\n                        },\n                        dial: {\n                            radius: '62%',\n                            baseWidth: 2,\n                            baseLength: '100%',\n                            rearLength: 0\n                        },\n                        series: {\n                            pointStart: -20,\n                            animation: {\n                                defer: 0,\n                                duration: 25\n                            }\n                        },\n                        pivot: {\n                            radius: 0\n                        }\n                    }\n                },\n        \t\tseries: [{\n        \t\t    //data: [0],\n        \t\t    yAxis: 0,\n        \t\t\t//name: 'Forward',\n        \t\t\t//lineWidth: 1,\n        \t\t\ttype: \"gauge\"\n        \t\t\t//dashStyle: 'longdash',\n        \t\t\t//connectEnds: false,\n                    //connectNulls: true,\n\t\t            //threshold: 0\n        \t\t}]\n        \t};\n        };\n    \n        var ch1 = new Highcharts.chart(getChartOptions('meter17'));\n        var pForward1 = ch1.series[0];\n        \n        var ch2 = new Highcharts.chart(getChartOptions('meter18'));\n        var pForward2 = ch2.series[0];\n        \n        var ch3 = new Highcharts.chart(getChartOptions('meter19'));\n        var pForward3 = ch3.series[0];\n        \n        var ch4 = new Highcharts.chart(getChartOptions('meter20'));\n        var pForward4 = ch4.series[0];\n        \n        var ch5 = new Highcharts.chart(getChartOptions('meter21'));\n        var pForward5 = ch5.series[0];\n        \n        var ch6 = new Highcharts.chart(getChartOptions('meter22'));\n        var pForward6 = ch6.series[0];\n        \n        var ch7 = new Highcharts.chart(getChartOptions('meter23'));\n        var pForward7 = ch7.series[0];\n        \n        var ch8 = new Highcharts.chart(getChartOptions('meter24'));\n        var pForward8 = ch8.series[0];\n        \n        var ch9 = new Highcharts.chart(getChartOptions('meter25'));\n        var pForward9 = ch9.series[0];\n        \n        var ch10 = new Highcharts.chart(getChartOptions('meter26'));\n        var pForward10 = ch10.series[0];\n        \n        var ch11 = new Highcharts.chart(getChartOptions('meter27'));\n        var pForward11 = ch11.series[0];\n        \n        var ch12 = new Highcharts.chart(getChartOptions('meter28'));\n        var pForward12 = ch12.series[0];\n        \n        var ch13 = new Highcharts.chart(getChartOptions('meter29'));\n        var pForward13 = ch13.series[0];\n        \n        var ch14 = new Highcharts.chart(getChartOptions('meter30'));\n        var pForward14 = ch14.series[0];\n        \n        var ch15 = new Highcharts.chart(getChartOptions('meter31'));\n        var pForward15 = ch15.series[0];\n        \n        var ch16 = new Highcharts.chart(getChartOptions('meter32'));\n        var pForward16 = ch16.series[0];\n\n        scope.$watch('msg', function(msg) {\n            switch (msg.topic){\n                case 'channel1':\n                    pForward1.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel2':\n                    pForward2.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel3':\n                    pForward3.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel4':\n                    pForward4.setData(msg.payload.data, true, false, true);\n                    break;                \n                case 'channel5':\n                    pForward5.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel6':\n                    pForward6.setData(msg.payload.data, true, false, true);\n                    break;                \n                case 'channel7':\n                    pForward7.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel8':\n                    pForward8.setData(msg.payload.data, true, false, true);\n                    break;                \n                case 'channel9':\n                    pForward9.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel10':\n                    pForward10.setData(msg.payload.data, true, false, true);\n                    break;               \n                case 'channel11':\n                    pForward11.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel12':\n                    pForward12.setData(msg.payload.data, true, false, true);\n                    break;                \n                case 'channel13':\n                    pForward13.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel14':\n                    pForward14.setData(msg.payload.data, true, false, true);\n                    break;                \n                case 'channel15':\n                    pForward15.setData(msg.payload.data, true, false, true);\n                    break;\n                case 'channel16':\n                    pForward16.setData(msg.payload.data, true, false, true);\n                    break;                \n                default:\n                    break;\n            }\n        });\n\n    }, 50);\n})(scope);\n\n\n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1034,
        "y": 418,
        "wires": [
            [
                "9405b6bb1f1ac52f",
                "9bfda4542a1d95e2",
                "72c626fbdf23993f",
                "81de80e9cb32e0db",
                "56efe74121e3b85a",
                "57deca29b98aba29",
                "66cd6baa79cd85af",
                "d7a7478c12fda776"
            ]
        ]
    },
    {
        "id": "0ad4b15146ca8b75",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel1\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 132,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "8c9edcac4ce985cc",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel2\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 176,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "3361e88cf5c83c7f",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel3\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 220,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "5fc057af5206dfbf",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel4\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 264,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "d41cc828aab965c8",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel5\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 308,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "171fa0a15e5b9dfa",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel6\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 352,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "1a830d5ebdd45831",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel7\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 396,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "703b52300d126acd",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel8\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 440,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "49293756fe240f43",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel9\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 484,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "0261dc27c85acf1c",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel10\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 528,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "a464b81df6172cda",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel11\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 572,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "f15198b0ca8e444e",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel12\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 616,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "fb56386f5bfcd71d",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel13\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 660,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "58b47bf8549b7432",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel14\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 704,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "9307b9405b8abb94",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel15\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 748,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "8c4e27ddf632967b",
        "type": "function",
        "z": "b6c9ef1861969ee4",
        "name": "Audio Conversion",
        "func": "\nlet finalValue\n\nlet outputValue = msg.payload[0] \n\nlet newMsg = {}\n\nif (outputValue == 0x00) {\n    finalValue = [-20]\n}\nif (outputValue == 0x01) {\n    finalValue = [-12]\n}\nif (outputValue == 0x02) {\n    finalValue = [-5]\n}\nif (outputValue == 0x03) {\n    finalValue = [0]\n}\nif (outputValue == 0x04) {\n    finalValue = [6]\n}\n\nnewMsg.topic = \"channel16\"\nnewMsg.payload = { data: finalValue}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 792,
        "wires": [
            [
                "0db84496bac6d048"
            ]
        ]
    },
    {
        "id": "0f3673bfcc3ca487",
        "type": "switch",
        "z": "b6c9ef1861969ee4",
        "name": "Audio I/O Routing",
        "property": "parts.index",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "8",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "9",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "10",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "11",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "12",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "13",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "14",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "15",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "16",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "17",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "18",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "19",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "20",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "21",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 16,
        "x": 464,
        "y": 418,
        "wires": [
            [
                "0ad4b15146ca8b75"
            ],
            [
                "8c9edcac4ce985cc"
            ],
            [
                "3361e88cf5c83c7f"
            ],
            [
                "5fc057af5206dfbf"
            ],
            [
                "d41cc828aab965c8"
            ],
            [
                "171fa0a15e5b9dfa"
            ],
            [
                "1a830d5ebdd45831"
            ],
            [
                "703b52300d126acd"
            ],
            [
                "49293756fe240f43"
            ],
            [
                "0261dc27c85acf1c"
            ],
            [
                "a464b81df6172cda"
            ],
            [
                "f15198b0ca8e444e"
            ],
            [
                "fb56386f5bfcd71d"
            ],
            [
                "58b47bf8549b7432"
            ],
            [
                "9307b9405b8abb94"
            ],
            [
                "8c4e27ddf632967b"
            ]
        ],
        "inputLabels": [
            "Input Signal Meters"
        ],
        "outputLabels": [
            "Channel 1",
            "Channel 2",
            "Channel 3",
            "Channel 4",
            "Channel 5",
            "Channel 6",
            "Channel 7",
            "Channel 8",
            "Channel 9",
            "Channel 10",
            "Channel 11",
            "Channel 12",
            "Channel 13",
            "Channel 14",
            "Channel 15",
            "Channel 16"
        ]
    },
    {
        "id": "2f08e36173444153",
        "type": "split",
        "z": "b6c9ef1861969ee4",
        "name": "Packet Splitter",
        "splt": "1",
        "spltType": "len",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 234,
        "y": 418,
        "wires": [
            [
                "0f3673bfcc3ca487"
            ]
        ]
    },
    {
        "id": "637f89fa7f899cc9",
        "type": "function",
        "z": "39a4598626b2fe32",
        "name": "Poll Hub",
        "func": "\n    let padByte = \"00\"\n\n    let hubPad = padByte.repeat(34)\n\n    msg.payload[\"packetData\"] = hubPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1292,
        "y": 418,
        "wires": [
            []
        ]
    },
    {
        "id": "447ef8fd46ed2346",
        "type": "function",
        "z": "39a4598626b2fe32",
        "name": "Channel Names Packet Command",
        "func": "\nmsg.payload[\"packetCommand\"] = \"FF\"\n\nreturn msg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1042,
        "y": 418,
        "wires": [
            [
                "637f89fa7f899cc9"
            ]
        ]
    },
    {
        "id": "ce59905d56bb0740",
        "type": "trigger",
        "z": "39a4598626b2fe32",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 566,
        "y": 418,
        "wires": [
            [
                "84ac92541051f123"
            ]
        ]
    },
    {
        "id": "84ac92541051f123",
        "type": "delay-gate",
        "z": "39a4598626b2fe32",
        "name": "",
        "triggerPayload": "",
        "triggerPayloadType": "str",
        "delayDuration": "1",
        "delayUnits": "s",
        "openDuration": 5,
        "openUnits": "s",
        "closeGate": false,
        "x": 774,
        "y": 418,
        "wires": [
            [
                "447ef8fd46ed2346"
            ]
        ]
    },
    {
        "id": "ed0ec431ccd3faeb",
        "type": "function",
        "z": "39a4598626b2fe32",
        "name": "Query Channel Names",
        "func": "\nvar newMsg\n\nif (msg.uibuilderCtrl == \"ready for content\") {\n    //if (msg.name == \"Mixer Overview\") {\n        newMsg = {\n            \"payload\": {\"messageType\" : \"6F\"}\n        }\n    }\n\n//}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 418,
        "wires": [
            [
                "ce59905d56bb0740"
            ]
        ]
    },
    {
        "id": "3beac04f6adc0b52",
        "type": "delay-gate",
        "z": "82ff8e0cb1c21fc3",
        "name": "",
        "triggerPayload": "",
        "triggerPayloadType": "str",
        "delayDuration": "1",
        "delayUnits": "s",
        "openDuration": 5,
        "openUnits": "hr",
        "closeGate": false,
        "x": 774,
        "y": 154,
        "wires": [
            [
                "785092e05ac9102f"
            ]
        ]
    },
    {
        "id": "9601f62f5fff84a1",
        "type": "trigger",
        "z": "82ff8e0cb1c21fc3",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-20",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 574,
        "y": 154,
        "wires": [
            [
                "3beac04f6adc0b52"
            ]
        ]
    },
    {
        "id": "04d95dbb381f32d7",
        "type": "function",
        "z": "82ff8e0cb1c21fc3",
        "name": "Poll Hub",
        "func": "\n    let padByte = \"00\"\n\n    let hubPad = padByte.repeat(34)\n\n    msg.payload[\"packetData\"] = hubPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 154,
        "wires": [
            []
        ]
    },
    {
        "id": "785092e05ac9102f",
        "type": "function",
        "z": "82ff8e0cb1c21fc3",
        "name": "Fast Status Packet Command",
        "func": "\nmsg.payload[\"packetCommand\"] = \"FE\"\n\nreturn msg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1032,
        "y": 154,
        "wires": [
            [
                "04d95dbb381f32d7"
            ]
        ]
    },
    {
        "id": "384c852042ef2077",
        "type": "function",
        "z": "82ff8e0cb1c21fc3",
        "name": "Start Fast Messages",
        "func": "\nvar newMsg\n\nif (msg.uibuilderCtrl == \"ready for content\") {\n    //if (msg.name == \"Mixer Overview\") {\n        newMsg = {\n            \"payload\": {\"messageType\" : \"6F\"}\n        }\n    }\n    else {\n    newMsg = {\"reset\": \"true\"}\n    }\n//}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 342,
        "y": 154,
        "wires": [
            [
                "9601f62f5fff84a1"
            ]
        ]
    },
    {
        "id": "a2c47b7e47580604",
        "type": "udp in",
        "z": "3674dfd11f96851f",
        "name": "Packet Cartographer",
        "iface": "",
        "port": "6970",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "buffer",
        "x": 112,
        "y": 176,
        "wires": [
            [
                "ecf16fe29ec714fb",
                "d3eeadc185b37ca5"
            ]
        ]
    },
    {
        "id": "2e2880e7bc5caa53",
        "type": "udp out",
        "z": "3674dfd11f96851f",
        "name": "App Out",
        "addr": "255.255.255.255",
        "iface": "",
        "port": "6970",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "multi",
        "x": 874,
        "y": 440,
        "wires": []
    },
    {
        "id": "ce993791c4585f9e",
        "type": "inject",
        "z": "3674dfd11f96851f",
        "name": "Poll Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "Pad Poll",
        "payload": "{\"messageType\":\"70\",\"packetSize\":\"01\",\"levelRequest\":\"00\",\"assignments\":\"00\"}",
        "payloadType": "json",
        "x": 124,
        "y": 440,
        "wires": [
            [
                "412fbd1a89d94642"
            ]
        ]
    },
    {
        "id": "412fbd1a89d94642",
        "type": "function",
        "z": "3674dfd11f96851f",
        "name": "Poll Mixers",
        "func": "\nif (msg.topic === \"Pad Poll\") {\n    \n    let padByte = \"00\"\n\n    let pollPad = padByte.repeat(42)\n\n    msg.payload[\"packetData\"] = pollPad\n\n    return msg; \n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 312,
        "y": 440,
        "wires": [
            [
                "5e229349f06a4a95"
            ]
        ]
    },
    {
        "id": "5e229349f06a4a95",
        "type": "template",
        "z": "3674dfd11f96851f",
        "name": "Poll Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"FFFF{{payload.messageType}}{{payload.packetSize}}{{payload.packetData}}{{payload.levelRequest}}{{payload.assignments}}\"",
        "output": "json",
        "x": 488,
        "y": 440,
        "wires": [
            [
                "81e3d8c8c1711509"
            ]
        ]
    },
    {
        "id": "81e3d8c8c1711509",
        "type": "function",
        "z": "3674dfd11f96851f",
        "name": "Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 674,
        "y": 440,
        "wires": [
            [
                "2e2880e7bc5caa53",
                "7938bf0e7ab4645b"
            ]
        ]
    },
    {
        "id": "ecf16fe29ec714fb",
        "type": "function",
        "z": "3674dfd11f96851f",
        "name": "",
        "func": "\nlet messages = new Array(node.outputCount)\n\nlet typeByte = msg.payload[2]\n\nif (typeByte === 0xff) {\n    messages[0] = msg;\n} \nif (typeByte === 0x70) {\n    messages[1] = msg;\n}\nif (typeByte === 0x63) {\n    messages[2] = msg;\n}\nif (typeByte === 0x75) {\n    messages[3] = msg;\n}\nif (typeByte === 0x73) {\n    messages[4] = msg;\n}\nif (typeByte === 0x72) {\n    messages[5] = msg;\n}\n\nreturn messages;",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 302,
        "y": 176,
        "wires": [
            [
                "8dfdf275d3673dfb"
            ],
            [
                "a42719b3c331fb5c"
            ],
            [
                "4ba6d66fe10c644e"
            ],
            [
                "76c228fef22f2107",
                "5691045980bb5334"
            ],
            [
                "11f569ed135185e2"
            ],
            [
                "74b40131f0e5c70a",
                "366c4dab87fd7a5c"
            ]
        ]
    },
    {
        "id": "a42719b3c331fb5c",
        "type": "debug",
        "z": "3674dfd11f96851f",
        "name": "Outgoing App Messages",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 506,
        "y": 110,
        "wires": []
    },
    {
        "id": "8dfdf275d3673dfb",
        "type": "link out",
        "z": "3674dfd11f96851f",
        "name": "Hub Messages Out",
        "mode": "link",
        "links": [
            "476e7dc99dab3188"
        ],
        "x": 486,
        "y": 66,
        "wires": [],
        "l": true
    },
    {
        "id": "7938bf0e7ab4645b",
        "type": "debug",
        "z": "3674dfd11f96851f",
        "name": "Poll Packet Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 618,
        "y": 396,
        "wires": []
    },
    {
        "id": "f121e424842c9095",
        "type": "link in",
        "z": "3674dfd11f96851f",
        "name": "Hub Message In",
        "links": [
            "a767d2aa085708ea",
            "c48561a195dd5d76",
            "f0fdad5d0845c8eb",
            "9b60e8613e4cf30c",
            "aa4d889fe5a6a865",
            "434e39dea5ed435e",
            "7e1233441162c258",
            "0ba7aecd60637906",
            "fd2a4c565b3432ea",
            "264903361b62fd19",
            "5484408abeab449b",
            "7ead91921d999da4",
            "e3bbfb702cd57fe5"
        ],
        "x": 763,
        "y": 396,
        "wires": [
            [
                "2e2880e7bc5caa53"
            ]
        ]
    },
    {
        "id": "4ba6d66fe10c644e",
        "type": "link out",
        "z": "3674dfd11f96851f",
        "name": "Incoming Channel Names Out",
        "mode": "link",
        "links": [
            "bfea17cd79fbbc6f"
        ],
        "x": 526,
        "y": 154,
        "wires": [],
        "l": true
    },
    {
        "id": "76c228fef22f2107",
        "type": "link out",
        "z": "3674dfd11f96851f",
        "name": "Mixer Channel Messages Out",
        "mode": "link",
        "links": [
            "0b444929c4f722f6"
        ],
        "x": 526,
        "y": 198,
        "wires": [],
        "l": true
    },
    {
        "id": "11f569ed135185e2",
        "type": "link out",
        "z": "3674dfd11f96851f",
        "name": "Mixer Level Messages Out",
        "mode": "link",
        "links": [
            "d6c6653c6a3ff13a"
        ],
        "x": 516,
        "y": 242,
        "wires": [],
        "l": true
    },
    {
        "id": "21d1fbb1ecd3121d",
        "type": "link in",
        "z": "3674dfd11f96851f",
        "name": "Mixer Poll In",
        "links": [
            "834aefad664216cd",
            "fbb8e398f8162089"
        ],
        "x": 763,
        "y": 484,
        "wires": [
            [
                "2e2880e7bc5caa53"
            ]
        ]
    },
    {
        "id": "6a6ecf3586193565",
        "type": "link in",
        "z": "3674dfd11f96851f",
        "name": "Mixer Parameter Messages In",
        "links": [
            "37a51b0eb0830286",
            "a2828d04ec3a5c88",
            "849a899decb99027",
            "d366e5f6a6e8e64c"
        ],
        "x": 763,
        "y": 528,
        "wires": [
            [
                "2e2880e7bc5caa53"
            ]
        ]
    },
    {
        "id": "74b40131f0e5c70a",
        "type": "link out",
        "z": "3674dfd11f96851f",
        "name": "Mixer Extended Data Out",
        "mode": "link",
        "links": [
            "045b9fd9116a5dbe"
        ],
        "x": 506,
        "y": 286,
        "wires": [],
        "l": true
    },
    {
        "id": "366c4dab87fd7a5c",
        "type": "debug",
        "z": "3674dfd11f96851f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 444,
        "y": 330,
        "wires": []
    },
    {
        "id": "5691045980bb5334",
        "type": "debug",
        "z": "3674dfd11f96851f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 242,
        "wires": []
    },
    {
        "id": "d3eeadc185b37ca5",
        "type": "debug",
        "z": "3674dfd11f96851f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 218,
        "y": 374,
        "wires": []
    },
    {
        "id": "476e7dc99dab3188",
        "type": "link in",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Messages In",
        "links": [
            "8dfdf275d3673dfb"
        ],
        "x": 125,
        "y": 704,
        "wires": [
            [
                "e7bb91be9e2668d7",
                "0bc41d9472e96c9c"
            ]
        ]
    },
    {
        "id": "e7bb91be9e2668d7",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "Packet Cooler",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 256,
        "y": 704,
        "wires": [
            [
                "555ae9da6d48473e"
            ]
        ]
    },
    {
        "id": "555ae9da6d48473e",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub ID to Topic",
        "func": "var msgID = msg.payload[0].toString(16) + \n    msg.payload[1].toString(16)\n\nvar newMsg = {\"payload\": msg.payload}\n\nnewMsg.topic = msgID\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 454,
        "y": 704,
        "wires": [
            [
                "9520f2d18b2f8a5d",
                "1c0d2e4b4b63a095"
            ]
        ]
    },
    {
        "id": "acfa31fd6e7839df",
        "type": "subflow:38c62560e07b9ce0",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "x": 1170,
        "y": 704,
        "wires": [
            [
                "31f7d29bb22b9524",
                "aee5e45fe21fa7d3"
            ],
            [
                "681ddc64ba201687"
            ],
            [
                "be25353d65b3ba96"
            ],
            [
                "a49756ab27f1d643"
            ],
            [
                "3599adb0e1817bc7"
            ],
            [
                "adeab17a89996440"
            ],
            [
                "7ebbd45232e42f07"
            ],
            [
                "4459a1ad1674a14a"
            ],
            [
                "9ba929babc6c1770",
                "792fa7825c3193bf"
            ],
            [
                "4a3d7403c86005c4"
            ],
            [
                "0cb903784796398f"
            ],
            [
                "dbbac9f0988a9602"
            ],
            [
                "1f5a2d48ae093ff7"
            ],
            [
                "f00f5d396ebfe937"
            ],
            [
                "cc99ad47d6dded74"
            ],
            [
                "2558719e029e8c44"
            ]
        ]
    },
    {
        "id": "9520f2d18b2f8a5d",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Numberer",
        "func": "var msgID = msg.payload[3].toString(16)\n\nmsg.topic = msgID\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 696,
        "y": 704,
        "wires": [
            [
                "79ac5b41d25d30f1"
            ]
        ]
    },
    {
        "id": "79ac5b41d25d30f1",
        "type": "switch",
        "z": "8b15064d8a9c0e4d",
        "name": "Final Hub Sorter",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 916,
        "y": 704,
        "wires": [
            [
                "acfa31fd6e7839df",
                "7ae105866e6d0e97",
                "8184c6bba2c08d3d"
            ]
        ],
        "outputLabels": [
            "Hub 1"
        ]
    },
    {
        "id": "a767d2aa085708ea",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 3073,
        "y": 748,
        "wires": []
    },
    {
        "id": "6070fb0ef40543c4",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Poll Hub",
        "func": "\n    let padByte = \"00\"\n\n    let hubPad = padByte.repeat(34)\n\n    msg.payload[\"packetData\"] = hubPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2788,
        "y": 704,
        "wires": [
            [
                "b80eb4c1ddaebfd9"
            ]
        ]
    },
    {
        "id": "b80eb4c1ddaebfd9",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}00{{global.stereoLink1}}{{global.stereoLink2}}000000000000{{flow.meterChannels}}{{payload.packetCommand}}{{payload.packetData}}\"",
        "output": "json",
        "x": 2798,
        "y": 748,
        "wires": [
            [
                "61d26bb1ce11db38"
            ]
        ]
    },
    {
        "id": "61d26bb1ce11db38",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2878,
        "y": 792,
        "wires": [
            [
                "a767d2aa085708ea",
                "87a921322d8970bd"
            ]
        ]
    },
    {
        "id": "970180e4cfa69a08",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Fast Status Packet Command",
        "func": "\nmsg.payload[\"packetCommand\"] = \"FE\"\n\nreturn msg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2858,
        "y": 660,
        "wires": [
            [
                "6070fb0ef40543c4"
            ]
        ]
    },
    {
        "id": "fcaea359253f106c",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"6F\"}\n\nvar newMsg = {\"payload\": messageType}\n\nreturn newMsg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2808,
        "y": 572,
        "wires": [
            [
                "d6fe44b6d400e7cb"
            ]
        ]
    },
    {
        "id": "d6fe44b6d400e7cb",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Meter Channels",
        "func": "\nvar meterChannels = flow.get(\"meterChannels\")\n\nflow.set(\"meterChannels\", \"00\")\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2808,
        "y": 616,
        "wires": [
            [
                "970180e4cfa69a08"
            ]
        ]
    },
    {
        "id": "1c0d2e4b4b63a095",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub ID to Flow Variable",
        "func": "var idArray = flow.get('idArray') || []\n\nif (idArray.indexOf(msg.topic) === -1 && msg.payload[2] == 0xff) {\n    idArray.push(msg.topic)\n}\nflow.set(\"idArray\", idArray)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 462,
        "y": 748,
        "wires": [
            [
                "b5997ef6f7452ea7"
            ]
        ]
    },
    {
        "id": "3071ed59df50b27e",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Binary Reverse => Hex",
        "func": "var stereoMessage = msg.payload\n\nif (stereoMessage.length == 8) {\nvar reverseMessage = stereoMessage.split(\"\").reverse().join(\"\")\n\nvar hexValue = parseInt(reverseMessage, 2).toString(16)\n\nswitch (hexValue) {\n    case \"0\": \n        hexValue = \"00\";\n        break;\n    case \"1\":\n        hexValue = \"01\";\n        break;\n    case \"2\":\n        hexValue = \"02\";\n        break;\n    case \"3\": \n        hexValue = \"03\";\n        break;\n    case \"4\":\n        hexValue = \"04\";\n        break;\n    case \"5\":\n        hexValue = \"05\";\n        break;\n    case \"6\": \n        hexValue = \"06\";\n        break;\n    case \"7\":\n        hexValue = \"07\";\n        break;\n    case \"8\":\n        hexValue = \"08\";\n        break;\n    case \"9\": \n        hexValue = \"09\";\n        break;\n    default:\n        hexValue = hexValue;\n}\n\nmsg.payload = {\"link1\" : hexValue}\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2508,
        "y": 528,
        "wires": [
            [
                "b5c322c0bd9a88ef"
            ]
        ]
    },
    {
        "id": "a226b4696b48bfc5",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Binary Reverse => Hex",
        "func": "var stereoMessage = msg.payload\n\nif (stereoMessage.length == 8) {\nvar reverseMessage = stereoMessage.split(\"\").reverse().join(\"\")\n\nvar hexValue = parseInt(reverseMessage, 2).toString(16)\n\nswitch (hexValue) {\n    case \"0\": \n        hexValue = \"00\";\n        break;\n    case \"1\":\n        hexValue = \"01\";\n        break;\n    case \"2\":\n        hexValue = \"02\";\n        break;\n    case \"3\": \n        hexValue = \"03\";\n        break;\n    case \"4\":\n        hexValue = \"04\";\n        break;\n    case \"5\":\n        hexValue = \"05\";\n        break;\n    case \"6\": \n        hexValue = \"06\";\n        break;\n    case \"7\":\n        hexValue = \"07\";\n        break;\n    case \"8\":\n        hexValue = \"08\";\n        break;\n    case \"9\": \n        hexValue = \"09\";\n        break;\n    default:\n        hexValue = hexValue;\n}\n\nmsg.payload = {\"link2\" : hexValue}\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2332,
        "y": 660,
        "wires": [
            [
                "92fd1cb2f4fa859f"
            ]
        ]
    },
    {
        "id": "e324d6d9041191de",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo String A",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{global.stereo1}}{{global.stereo2}}{{global.stereo3}}{{global.stereo4}}{{global.stereo5}}{{global.stereo6}}{{global.stereo7}}{{global.stereo8}}",
        "output": "str",
        "x": 1840,
        "y": 528,
        "wires": [
            [
                "dba0073f759a181d"
            ]
        ]
    },
    {
        "id": "9fe64b496a286fab",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo String B",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{global.stereo9}}{{global.stereo10}}{{global.stereo11}}{{global.stereo12}}{{global.stereo13}}{{global.stereo14}}{{global.stereo15}}{{global.stereo16}}",
        "output": "str",
        "x": 1840,
        "y": 858,
        "wires": [
            [
                "e29109cc65a5c605"
            ]
        ]
    },
    {
        "id": "dba0073f759a181d",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "Wade Garrett",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2292,
        "y": 528,
        "wires": [
            [
                "3071ed59df50b27e",
                "798826a4251d608f"
            ]
        ]
    },
    {
        "id": "798826a4251d608f",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo String B",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{global.stereo9}}{{global.stereo10}}{{global.stereo11}}{{global.stereo12}}{{global.stereo13}}{{global.stereo14}}{{global.stereo15}}{{global.stereo16}}",
        "output": "str",
        "x": 2302,
        "y": 572,
        "wires": [
            [
                "dfda1662e124065a"
            ]
        ]
    },
    {
        "id": "dfda1662e124065a",
        "type": "trigger",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2302,
        "y": 616,
        "wires": [
            [
                "a226b4696b48bfc5"
            ]
        ]
    },
    {
        "id": "92fd1cb2f4fa859f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo B Links to Flow Variable",
        "func": "stereoLink2 = global.get(\"stereoLink2\")\n\nglobal.set(\"stereoLink2\", msg.payload.link2)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2352,
        "y": 704,
        "wires": [
            []
        ]
    },
    {
        "id": "b5c322c0bd9a88ef",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo A Links to Flow Variable",
        "func": "stereoLink1 = global.get(\"stereoLink1\")\n\n\nglobal.set(\"stereoLink1\", msg.payload.link1)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2792,
        "y": 528,
        "wires": [
            [
                "fcaea359253f106c"
            ]
        ]
    },
    {
        "id": "035feceef3bd7a78",
        "type": "complete",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "scope": [
            "a767d2aa085708ea"
        ],
        "uncaught": false,
        "x": 246,
        "y": 902,
        "wires": [
            [
                "e0fe1e4b6b4eb167"
            ]
        ]
    },
    {
        "id": "c48561a195dd5d76",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 719,
        "y": 1078,
        "wires": []
    },
    {
        "id": "b792403671fbac35",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Poll Hub",
        "func": "\n    let padByte = \"00\"\n\n    let hubPad = padByte.repeat(34)\n\n    msg.payload[\"packetData\"] = hubPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 434,
        "y": 990,
        "wires": [
            [
                "ccd6dccf3af77201"
            ]
        ]
    },
    {
        "id": "ccd6dccf3af77201",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}00{{global.stereoLink1}}{{global.stereoLink2}}000000000000{{payload.meterChannels}}{{payload.packetCommand}}{{payload.packetData}}\"",
        "output": "json",
        "x": 444,
        "y": 1034,
        "wires": [
            [
                "930144fb5ec04ca8"
            ]
        ]
    },
    {
        "id": "930144fb5ec04ca8",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 524,
        "y": 1078,
        "wires": [
            [
                "c48561a195dd5d76"
            ]
        ]
    },
    {
        "id": "2405020551a496d8",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Names Packet Command",
        "func": "\nmsg.payload[\"packetCommand\"] = \"FF\"\n\nreturn msg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 514,
        "y": 946,
        "wires": [
            [
                "b792403671fbac35"
            ]
        ]
    },
    {
        "id": "e0fe1e4b6b4eb167",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"6F\"}\n\nvar newMsg = {\"payload\": messageType}\n\nreturn newMsg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 454,
        "y": 902,
        "wires": [
            [
                "2405020551a496d8"
            ]
        ]
    },
    {
        "id": "bfea17cd79fbbc6f",
        "type": "link in",
        "z": "8b15064d8a9c0e4d",
        "name": "Incoming Channel Names In",
        "links": [
            "4ba6d66fe10c644e"
        ],
        "x": 367,
        "y": 2552,
        "wires": [
            [
                "88773feece2ae703",
                "49892459864b9f40"
            ]
        ]
    },
    {
        "id": "88773feece2ae703",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 512,
        "y": 2530,
        "wires": [
            [
                "48f161d646da1df1"
            ]
        ]
    },
    {
        "id": "48f161d646da1df1",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Sorter",
        "func": "\nlet messages = new Array(node.outputCount)\n\nlet hubNumber = msg.payload[64]\n\nif (hubNumber == 0x0) {\n    messages[0] = msg;\n} \n\nreturn messages;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 708,
        "y": 2552,
        "wires": [
            [
                "447596d4cc41bb54"
            ]
        ],
        "outputLabels": [
            "Hub 1"
        ]
    },
    {
        "id": "447596d4cc41bb54",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Group Sorter",
        "func": "\nlet messages = new Array(node.outputCount)\n\nlet offsetByte = msg.payload[3]\n\nif (offsetByte == 0) {\n    messages[0] = msg;\n} \nif (offsetByte == 6) {\n    messages[1] = msg;\n}\nif (offsetByte === 12) {\n    messages[2] = msg;\n}\nif (offsetByte == 18) {\n    messages[3] = msg;\n}\nif (offsetByte == 24) {\n    messages[4] = msg;\n}\nif (offsetByte == 30) {\n    messages[5] = msg;\n}\n\nreturn messages;",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 958,
        "y": 2552,
        "wires": [
            [
                "0f7f2569a0c0fb6a"
            ],
            [
                "f2d2c3d02b8afae1"
            ],
            [
                "c3d097dc4525c7a8"
            ],
            [
                "75f37f8f66984269"
            ],
            [
                "8ae72333955d0a20"
            ],
            [
                "c32141b23d1eb028"
            ]
        ]
    },
    {
        "id": "0f7f2569a0c0fb6a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Names 0-6",
        "func": "let messages = new Array(node.outputCount)\n\nlet [name1, name2, name3, name4, name5, name6] = [[],[],[],[],[],[]]\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    if (i > 3 && i <= 12) {\n        name1.push(msg.payload[i].toString(16))\n    } \n    if (i > 13 && i <= 22) {\n        name2.push(msg.payload[i].toString(16))\n    }\n    if (i > 23 && i <= 32) {\n        name3.push(msg.payload[i].toString(16))\n    }\n    if (i > 33 && i <= 42) {\n        name4.push(msg.payload[i].toString(16))\n    }\n    if (i > 43 && i <= 52) {\n        name5.push(msg.payload[i].toString(16))\n    }\n    if (i > 53 && i <= 62) {\n        name6.push(msg.payload[i].toString(16))\n    }\n\n}\n\nmessages[0] = {\"payload\": name1.join('')}\nmessages[1] = {\"payload\": name2.join('')}\nmessages[2] = {\"payload\": name3.join('')}\nmessages[3] = {\"payload\": name4.join('')}\nmessages[4] = {\"payload\": name5.join('')}\nmessages[5] = {\"payload\": name6.join('')}\n\nreturn messages;",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1222,
        "y": 1496,
        "wires": [
            [
                "ac7494d57189db42"
            ],
            [
                "81ab8d8b7453a87d"
            ],
            [
                "204223e1345c8b86"
            ],
            [
                "e24c1eae010678bd"
            ],
            [
                "11c5fd60e3233d08"
            ],
            [
                "b1cbe36a17af6f1b"
            ]
        ]
    },
    {
        "id": "f2d2c3d02b8afae1",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Names 7-12",
        "func": "let messages = new Array(node.outputCount)\n\nlet [name1, name2, name3, name4, name5, name6] = [[],[],[],[],[],[]]\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    if (i > 3 && i <= 12) {\n        name1.push(msg.payload[i].toString(16))\n    } \n    if (i > 13 && i <= 22) {\n        name2.push(msg.payload[i].toString(16))\n    }\n    if (i > 23 && i <= 32) {\n        name3.push(msg.payload[i].toString(16))\n    }\n    if (i > 33 && i <= 42) {\n        name4.push(msg.payload[i].toString(16))\n    }\n    if (i > 43 && i <= 52) {\n        name5.push(msg.payload[i].toString(16))\n    }\n    if (i > 53 && i <= 62) {\n        name6.push(msg.payload[i].toString(16))\n    }\n\n}\n\nmessages[0] = {\"payload\": name1.join('')}\nmessages[1] = {\"payload\": name2.join('')}\nmessages[2] = {\"payload\": name3.join('')}\nmessages[3] = {\"payload\": name4.join('')}\nmessages[4] = {\"payload\": name5.join('')}\nmessages[5] = {\"payload\": name6.join('')}\n\nreturn messages;\n\n",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1222,
        "y": 2024,
        "wires": [
            [
                "393cdeaefd4db8dc"
            ],
            [
                "7599dcfa8c30f7da"
            ],
            [
                "c38510ccaa098fc6"
            ],
            [
                "621db59eadf13c67"
            ],
            [
                "735d9b265e432509"
            ],
            [
                "f9c5099a108ad425"
            ]
        ]
    },
    {
        "id": "c3d097dc4525c7a8",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Names 13-18",
        "func": "let messages = new Array(node.outputCount)\n\nlet [name1, name2, name3, name4, name5, name6] = [[],[],[],[],[],[]]\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    if (i > 3 && i <= 12) {\n        name1.push(msg.payload[i].toString(16))\n    } \n    if (i > 13 && i <= 22) {\n        name2.push(msg.payload[i].toString(16))\n    }\n    if (i > 23 && i <= 32) {\n        name3.push(msg.payload[i].toString(16))\n    }\n    if (i > 33 && i <= 42) {\n        name4.push(msg.payload[i].toString(16))\n    }\n    if (i > 43 && i <= 52) {\n        name5.push(msg.payload[i].toString(16))\n    }\n    if (i > 53 && i <= 62) {\n        name6.push(msg.payload[i].toString(16))\n    }\n\n}\n\nmessages[0] = {\"payload\": name1.join('')}\nmessages[1] = {\"payload\": name2.join('')}\nmessages[2] = {\"payload\": name3.join('')}\nmessages[3] = {\"payload\": name4.join('')}\nmessages[4] = {\"payload\": name5.join('')}\nmessages[5] = {\"payload\": name6.join('')}\n\nreturn messages;",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1222,
        "y": 2552,
        "wires": [
            [
                "1daa6a2bf226a514"
            ],
            [
                "3bd6e89118cc5732"
            ],
            [
                "fd9ab9309a10dc5c"
            ],
            [
                "fb1ceaea1e03496b"
            ],
            [
                "de61d164ad88af17"
            ],
            [
                "128a63727fbffe03"
            ]
        ]
    },
    {
        "id": "75f37f8f66984269",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Names 19-24",
        "func": "let messages = new Array(node.outputCount)\n\nlet [name1, name2, name3, name4, name5, name6] = [[],[],[],[],[],[]]\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    if (i > 3 && i <= 12) {\n        name1.push(msg.payload[i].toString(16))\n    } \n    if (i > 13 && i <= 22) {\n        name2.push(msg.payload[i].toString(16))\n    }\n    if (i > 23 && i <= 32) {\n        name3.push(msg.payload[i].toString(16))\n    }\n    if (i > 33 && i <= 42) {\n        name4.push(msg.payload[i].toString(16))\n    }\n    if (i > 43 && i <= 52) {\n        name5.push(msg.payload[i].toString(16))\n    }\n    if (i > 53 && i <= 62) {\n        name6.push(msg.payload[i].toString(16))\n    }\n\n}\n\nmessages[0] = {\"payload\": name1.join('')}\nmessages[1] = {\"payload\": name2.join('')}\nmessages[2] = {\"payload\": name3.join('')}\nmessages[3] = {\"payload\": name4.join('')}\nmessages[4] = {\"payload\": name5.join('')}\nmessages[5] = {\"payload\": name6.join('')}\n\nreturn messages;",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1222,
        "y": 3080,
        "wires": [
            [
                "adaafe4e79d8f8d4"
            ],
            [
                "b686df8780cdca36"
            ],
            [
                "82b1a53e08731d3a"
            ],
            [
                "3433793354d8622d"
            ],
            [
                "f6c91d5eafb6dfc9"
            ],
            [
                "c8c067615239e328"
            ]
        ]
    },
    {
        "id": "8ae72333955d0a20",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Names 25-30",
        "func": "let messages = new Array(node.outputCount)\n\nlet [name1, name2, name3, name4, name5, name6] = [[],[],[],[],[],[]]\n\nfor (var i = 0; i < msg.payload.length; i++) {\n\n    if (i > 3 && i <= 12) {\n        name1.push(msg.payload[i].toString(16))\n    } \n    if (i > 13 && i <= 22) {\n        name2.push(msg.payload[i].toString(16))\n    }\n    if (i > 23 && i <= 32) {\n        name3.push(msg.payload[i].toString(16))\n    }\n    if (i > 33 && i <= 42) {\n        name4.push(msg.payload[i].toString(16))\n    }\n    if (i > 43 && i <= 52) {\n        name5.push(msg.payload[i].toString(16))\n    }\n    if (i > 53 && i <= 62) {\n        name6.push(msg.payload[i].toString(16))\n    }\n\n}\n\nmessages[0] = {\"payload\": name1.join('')}\nmessages[1] = {\"payload\": name2.join('')}\nmessages[2] = {\"payload\": name3.join('')}\nmessages[3] = {\"payload\": name4.join('')}\nmessages[4] = {\"payload\": name5.join('')}\nmessages[5] = {\"payload\": name6.join('')}\n\nreturn messages;",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1222,
        "y": 3608,
        "wires": [
            [
                "906d4e3383ed299e"
            ],
            [
                "0cc1732fbf0287dc"
            ],
            [
                "6eeb640798856539"
            ],
            [
                "731c2b5d9dc2b628"
            ],
            [
                "e470e3649ba498e0"
            ],
            [
                "6e7ab8011da68110"
            ]
        ]
    },
    {
        "id": "c32141b23d1eb028",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Names 31/32",
        "func": "let messages = new Array(node.outputCount)\n\nlet [name1, name2] = [[],[]]\n\nfor (var i = 0; i < 23; i++) {\n\n    if (i > 3 && i <= 12) {\n        name1.push(msg.payload[i].toString(16))\n    } \n    if (i > 13 && i <= 22) {\n        name2.push(msg.payload[i].toString(16))\n    }\n\n}\n\nmessages[0] = {\"payload\": name1.join('')}\nmessages[1] = {\"payload\": name2.join('')}\n\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1244,
        "y": 3960,
        "wires": [
            [
                "0785c864c4e05fd6"
            ],
            [
                "8ab20f0cbfd10603"
            ]
        ]
    },
    {
        "id": "3934ce09327544b8",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 1 Name Input",
        "order": 6,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 1</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name1\" placeholder=\"INPUT 1\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<style>\n\n@import url('https://fonts.googleapis.com/css2?family=Pathway+Gothic+One&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Nanum+Pen+Script&display=swap');\n\n.channelNames {\n    color: white\n    font-family: 'Pathway Gothic One';\n    transform: translateY(7px);\n}\n\n.imageA {\n    height: 10px;\n    width: 40px;\n}\n\ninput[type=text] {\n    margin-left: 15%;\n    margin-top: 12%;\n    height: 30px;\n    width: 110px;\n    position: absolute;\n    font-family: 'Nanum Pen Script';\n    background-color: transparent!important;\n    border-color: transparent!important;\n    outline: transparent!important;\n    font-size: 30px;\n    display: flex;\n    text-align: center;\n}\n\n.scribbleImage {\n    position: absolute;\n    display: flex;\n    margin-top: 7%;\n    margin-left: 14%;\n    transform: translateX(-8px);\n}\n\n</style>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text,\n                        topic: \"sendName\"\n            })\n        }\n                \n    })(scope)\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2102,
        "y": 1276,
        "wires": [
            [
                "5d704c27d28df5bd",
                "e7e6b12e53c750ed"
            ]
        ]
    },
    {
        "id": "319e8e1fca5381c2",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 2 Name Input",
        "order": 8,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 2</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name2\" placeholder=\"INPUT 2\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text,\n                        topic: \"sendName\"\n            })\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2102,
        "y": 1364,
        "wires": [
            [
                "91f9f9319becf1fa",
                "19a119ac1b601282"
            ]
        ]
    },
    {
        "id": "bcddf51a377f1ed1",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 3 Name Input",
        "order": 9,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 3</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name3\" placeholder=\"INPUT 3\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2102,
        "y": 1452,
        "wires": [
            [
                "09201bd26db369e2",
                "6f99083f63fd2f40"
            ]
        ]
    },
    {
        "id": "467575b6afda63c1",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 4 Name Input",
        "order": 11,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 4</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name4\" placeholder=\"INPUT 4\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2102,
        "y": 1540,
        "wires": [
            [
                "f0bbc5c6450e5a6d",
                "6de08894abd87282"
            ]
        ]
    },
    {
        "id": "ab271f05bb668d0b",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 5 Name Input",
        "order": 12,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 5</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name5\" placeholder=\"INPUT 5\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2102,
        "y": 1628,
        "wires": [
            [
                "b63df3e57534733a",
                "49204046bb9d7ac1"
            ]
        ]
    },
    {
        "id": "c8e7d975c540b3ec",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 6 Name Input",
        "order": 14,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 6</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name6\" placeholder=\"INPUT 6\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2102,
        "y": 1716,
        "wires": [
            [
                "7607a238536e3f32",
                "f93c05cdc9d5ac71"
            ]
        ]
    },
    {
        "id": "66ce2fed7d6b8be4",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 7 Name Input",
        "order": 15,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 7</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name7\" placeholder=\"INPUT 7\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2102,
        "y": 1804,
        "wires": [
            [
                "673a7c12468aa81a",
                "5fece0a0b9f8338c"
            ]
        ]
    },
    {
        "id": "e6965e196260d494",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 8 Name Input",
        "order": 17,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 8</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name8\" placeholder=\"INPUT 8\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2102,
        "y": 1892,
        "wires": [
            [
                "2361ae89dbadca22",
                "9e6b5c5d209e5bb7"
            ]
        ]
    },
    {
        "id": "683f21158f00ec3d",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 9 Name Input",
        "order": 22,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 9</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name9\" placeholder=\"INPUT 9\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2102,
        "y": 1980,
        "wires": [
            [
                "247d7fef243ee0df",
                "4e5320fbf76394f2"
            ]
        ]
    },
    {
        "id": "2977d6744620e4ba",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 10 Name Input",
        "order": 24,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 10</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name10\" placeholder=\"INPUT 10\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2068,
        "wires": [
            [
                "fd63dea8706096fa",
                "f8426db3702897c7"
            ]
        ]
    },
    {
        "id": "a02ca8862bc996b8",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 11 Name Input",
        "order": 25,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 11</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name11\" placeholder=\"INPUT 11\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2156,
        "wires": [
            [
                "c9c3fa8926be8aac",
                "0f594a2760e9a3f2"
            ]
        ]
    },
    {
        "id": "71bbaeffbf91c758",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 12 Name Input",
        "order": 27,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 12</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name12\" placeholder=\"INPUT 12\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2244,
        "wires": [
            [
                "a00ca2ac227ab15b",
                "4693a7460ab1594a"
            ]
        ]
    },
    {
        "id": "f71485b4e5e58667",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 13 Name Input",
        "order": 28,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 13</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name13\" placeholder=\"INPUT 13\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2332,
        "wires": [
            [
                "216359bdb0a60d34",
                "1919aa1f8792daf8"
            ]
        ]
    },
    {
        "id": "6b3df9aa793ed009",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 14 Name Input",
        "order": 30,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 14</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name14\" placeholder=\"INPUT 14\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2420,
        "wires": [
            [
                "494a6d4c73c8b9a7",
                "5580f1852d6daffa"
            ]
        ]
    },
    {
        "id": "3a76610616806416",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 15 Name Input",
        "order": 31,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 15</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name15\" placeholder=\"INPUT 15\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2508,
        "wires": [
            [
                "f5e97242b1c7b5eb",
                "450bc6f9ee6d201f"
            ]
        ]
    },
    {
        "id": "38cc0803fbe6765f",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "334def06aa2d0d6c",
        "name": "Channel 16 Name Input",
        "order": 33,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 16</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name16\" placeholder=\"INPUT 16\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2596,
        "wires": [
            [
                "e981e6c2c1b5b599",
                "52df2a7d7d090168"
            ]
        ]
    },
    {
        "id": "5d704c27d28df5bd",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nif (msg.topic == \"sendName\") {\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1276,
        "wires": [
            [
                "522a1ca910b4deba"
            ]
        ]
    },
    {
        "id": "cd41c369d992c1a3",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 1276,
        "wires": [
            [
                "3934ce09327544b8",
                "51b5861e20889cb3"
            ]
        ]
    },
    {
        "id": "edfcae6eef5ae3e5",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 1364,
        "wires": [
            [
                "319e8e1fca5381c2",
                "de4f72c80923397a"
            ]
        ]
    },
    {
        "id": "6b4dfe6943e9f9bd",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 1452,
        "wires": [
            [
                "bcddf51a377f1ed1",
                "36d0b78f19b44bbb"
            ]
        ]
    },
    {
        "id": "b212c5b90a3391be",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 1540,
        "wires": [
            [
                "467575b6afda63c1",
                "62d32372cfc031ae"
            ]
        ]
    },
    {
        "id": "7dae653d52cb948b",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 1628,
        "wires": [
            [
                "ab271f05bb668d0b",
                "dd1bd61f106f9d8d"
            ]
        ]
    },
    {
        "id": "48a7f554a8488205",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 1716,
        "wires": [
            [
                "c8e7d975c540b3ec",
                "e4f78879ffd0bb82"
            ]
        ]
    },
    {
        "id": "c5ee67c6f3728c35",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 1804,
        "wires": [
            [
                "66ce2fed7d6b8be4",
                "cbe36dd982a7a8f2"
            ]
        ]
    },
    {
        "id": "cfdd50cc08d0cf7e",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 1892,
        "wires": [
            [
                "e6965e196260d494",
                "ba1c895abaff4b0a"
            ]
        ]
    },
    {
        "id": "682a354b9694a68c",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 1980,
        "wires": [
            [
                "683f21158f00ec3d",
                "42ceedc6d8a3d21c"
            ]
        ]
    },
    {
        "id": "f9a4ca11f775fb76",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2068,
        "wires": [
            [
                "2977d6744620e4ba",
                "7899d39f16ae5fbe"
            ]
        ]
    },
    {
        "id": "184625818752ff71",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2156,
        "wires": [
            [
                "a02ca8862bc996b8",
                "7272154da8bd81b2"
            ]
        ]
    },
    {
        "id": "ecc07103fc8e9f11",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2244,
        "wires": [
            [
                "71bbaeffbf91c758",
                "3f10aed0b480d781"
            ]
        ]
    },
    {
        "id": "641099e755f11f70",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2332,
        "wires": [
            [
                "f71485b4e5e58667",
                "c60070dd7d15dd5a"
            ]
        ]
    },
    {
        "id": "055734343600095a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2420,
        "wires": [
            [
                "6b3df9aa793ed009",
                "1d2abebdad1f2ab1"
            ]
        ]
    },
    {
        "id": "bec389f793db7ad5",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2508,
        "wires": [
            [
                "3a76610616806416",
                "eaf7db0aa5f325e1"
            ]
        ]
    },
    {
        "id": "c87f1521ef1963bd",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2596,
        "wires": [
            [
                "38cc0803fbe6765f",
                "5c96113122a14c1a"
            ]
        ]
    },
    {
        "id": "1248ad0dba00d955",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2684,
        "wires": [
            [
                "6096a9d11f83f5bd",
                "53e43384e6262c08"
            ]
        ]
    },
    {
        "id": "021493f3d8923521",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2772,
        "wires": [
            [
                "c6445003764b1960",
                "44490a2f4403939e"
            ]
        ]
    },
    {
        "id": "b1acc038dc294798",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2860,
        "wires": [
            [
                "7b54ddf4826f5375",
                "de900460a1d0cade"
            ]
        ]
    },
    {
        "id": "f0838a2fa76360ff",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 2948,
        "wires": [
            [
                "f5cfbba351a9a67c",
                "eae8506a37591b96"
            ]
        ]
    },
    {
        "id": "5f18b20986ac6f25",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3036,
        "wires": [
            [
                "0727e8f11c96da76",
                "a01bf0c2c3688431"
            ]
        ]
    },
    {
        "id": "0c1c3d2893b45f8f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3124,
        "wires": [
            [
                "4648cfea59f97deb",
                "df0101355f9b2261"
            ]
        ]
    },
    {
        "id": "980ae9e88f2d4388",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3212,
        "wires": [
            [
                "eb885d12d472e526",
                "8decb57f4ce29bcf"
            ]
        ]
    },
    {
        "id": "2e1865c87ab44446",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3300,
        "wires": [
            [
                "38fc079a8e0557b5",
                "f384ed25e1ddee31"
            ]
        ]
    },
    {
        "id": "84dbf05b09b781b0",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3388,
        "wires": [
            [
                "c7cf6d40e2afc380",
                "65a524f257e1902f"
            ]
        ]
    },
    {
        "id": "79a452380bf5363e",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3476,
        "wires": [
            [
                "fee91d31de30a369",
                "7ca966790eb7d65a"
            ]
        ]
    },
    {
        "id": "9c8b3a33d056627d",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3564,
        "wires": [
            [
                "ffc0f0059084fa60",
                "181f48a66f6002fe"
            ]
        ]
    },
    {
        "id": "c92e5eac22ea45e1",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3652,
        "wires": [
            [
                "66b399706126927c",
                "f67c776740be5897"
            ]
        ]
    },
    {
        "id": "0e4788be7456dd02",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3740,
        "wires": [
            [
                "97ef1f1d02f595a0",
                "146b7e51fe25eee0"
            ]
        ]
    },
    {
        "id": "6c8ca32050d74701",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3828,
        "wires": [
            [
                "66ed76aa2ab3e481",
                "6373ddc30fe929a6"
            ]
        ]
    },
    {
        "id": "ff55bb35352808ac",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 3916,
        "wires": [
            [
                "685f2ad6c742a063",
                "5055c81840320fcd"
            ]
        ]
    },
    {
        "id": "12b184eedd6aca50",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hex => ASCII Formatter",
        "func": "var channelName = msg.payload\n\nconst output = new Buffer(channelName,\"hex\").toString()\n\nvar finOutput = output.trim()\n\nmsg.payload = finOutput.toUpperCase()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1804,
        "y": 4004,
        "wires": [
            [
                "98946307a2f01d37",
                "b9d390e96936f773"
            ]
        ]
    },
    {
        "id": "ac7494d57189db42",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 1 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name1 = global.get(\"name1\")\n\nglobal.set(\"name1\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1496,
        "y": 1276,
        "wires": [
            [
                "cd41c369d992c1a3"
            ]
        ]
    },
    {
        "id": "81ab8d8b7453a87d",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 2 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name2 = global.get(\"name2\")\n\nglobal.set(\"name2\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1496,
        "y": 1364,
        "wires": [
            [
                "edfcae6eef5ae3e5"
            ]
        ]
    },
    {
        "id": "204223e1345c8b86",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 3 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name3 = global.get(\"name3\")\n\nglobal.set(\"name3\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1496,
        "y": 1452,
        "wires": [
            [
                "6b4dfe6943e9f9bd"
            ]
        ]
    },
    {
        "id": "e24c1eae010678bd",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 4 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name4 = global.get(\"name4\")\n\nglobal.set(\"name4\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1496,
        "y": 1540,
        "wires": [
            [
                "b212c5b90a3391be"
            ]
        ]
    },
    {
        "id": "11c5fd60e3233d08",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 5 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name5 = global.get(\"name5\")\n\nglobal.set(\"name5\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1496,
        "y": 1628,
        "wires": [
            [
                "7dae653d52cb948b"
            ]
        ]
    },
    {
        "id": "b1cbe36a17af6f1b",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 6 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name6 = global.get(\"name6\")\n\nglobal.set(\"name6\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1496,
        "y": 1716,
        "wires": [
            [
                "48a7f554a8488205"
            ]
        ]
    },
    {
        "id": "393cdeaefd4db8dc",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 7 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name7 = global.get(\"name7\")\n\nglobal.set(\"name7\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1496,
        "y": 1804,
        "wires": [
            [
                "c5ee67c6f3728c35"
            ]
        ]
    },
    {
        "id": "7599dcfa8c30f7da",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 8 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name8 = global.get(\"name8\")\n\nglobal.set(\"name8\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1496,
        "y": 1892,
        "wires": [
            [
                "cfdd50cc08d0cf7e"
            ]
        ]
    },
    {
        "id": "c38510ccaa098fc6",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 9 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name9 = global.get(\"name9\")\n\nglobal.set(\"name9\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1496,
        "y": 1980,
        "wires": [
            [
                "682a354b9694a68c"
            ]
        ]
    },
    {
        "id": "621db59eadf13c67",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 10 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name10 = global.get(\"name10\")\n\nglobal.set(\"name10\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2068,
        "wires": [
            [
                "f9a4ca11f775fb76"
            ]
        ]
    },
    {
        "id": "735d9b265e432509",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 11 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name11 = global.get(\"name11\")\n\nglobal.set(\"name11\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2156,
        "wires": [
            [
                "184625818752ff71"
            ]
        ]
    },
    {
        "id": "f9c5099a108ad425",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 12 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name12 = global.get(\"name12\")\n\nglobal.set(\"name12\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2244,
        "wires": [
            [
                "ecc07103fc8e9f11"
            ]
        ]
    },
    {
        "id": "1daa6a2bf226a514",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 13 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name13 = global.get(\"name13\")\n\nglobal.set(\"name13\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2332,
        "wires": [
            [
                "641099e755f11f70"
            ]
        ]
    },
    {
        "id": "3bd6e89118cc5732",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 14 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name14 = global.get(\"name14\")\n\nglobal.set(\"name14\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2420,
        "wires": [
            [
                "055734343600095a"
            ]
        ]
    },
    {
        "id": "fd9ab9309a10dc5c",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 15 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name15 = global.get(\"name15\")\n\nglobal.set(\"name15\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2508,
        "wires": [
            [
                "bec389f793db7ad5"
            ]
        ]
    },
    {
        "id": "fb1ceaea1e03496b",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 16 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name16 = global.get(\"name16\")\n\nglobal.set(\"name16\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2596,
        "wires": [
            [
                "c87f1521ef1963bd"
            ]
        ]
    },
    {
        "id": "de61d164ad88af17",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 17 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name17 = global.get(\"name17\")\n\nglobal.set(\"name17\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2684,
        "wires": [
            [
                "1248ad0dba00d955"
            ]
        ]
    },
    {
        "id": "128a63727fbffe03",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 18 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name18 = global.get(\"name18\")\n\nglobal.set(\"name18\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2772,
        "wires": [
            [
                "021493f3d8923521"
            ]
        ]
    },
    {
        "id": "adaafe4e79d8f8d4",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 19 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name19 = global.get(\"name19\")\n\nglobal.set(\"name19\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2860,
        "wires": [
            [
                "b1acc038dc294798"
            ]
        ]
    },
    {
        "id": "b686df8780cdca36",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 20 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name20 = global.get(\"name20\")\n\nglobal.set(\"name20\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 2948,
        "wires": [
            [
                "f0838a2fa76360ff"
            ]
        ]
    },
    {
        "id": "82b1a53e08731d3a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 21 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name21 = global.get(\"name21\")\n\nglobal.set(\"name21\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3036,
        "wires": [
            [
                "5f18b20986ac6f25"
            ]
        ]
    },
    {
        "id": "3433793354d8622d",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 22 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name22 = global.get(\"name22\")\n\nglobal.set(\"name22\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3124,
        "wires": [
            [
                "0c1c3d2893b45f8f"
            ]
        ]
    },
    {
        "id": "f6c91d5eafb6dfc9",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 23 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name23 = global.get(\"name23\")\n\nglobal.set(\"name23\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3212,
        "wires": [
            [
                "980ae9e88f2d4388"
            ]
        ]
    },
    {
        "id": "c8c067615239e328",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 24 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name24 = global.get(\"name24\")\n\nglobal.set(\"name24\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3300,
        "wires": [
            [
                "2e1865c87ab44446"
            ]
        ]
    },
    {
        "id": "906d4e3383ed299e",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 25 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name25 = global.get(\"name25\")\n\nglobal.set(\"name25\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3388,
        "wires": [
            [
                "84dbf05b09b781b0"
            ]
        ]
    },
    {
        "id": "0cc1732fbf0287dc",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 26 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name26 = global.get(\"name26\")\n\nglobal.set(\"name26\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3476,
        "wires": [
            [
                "79a452380bf5363e"
            ]
        ]
    },
    {
        "id": "6eeb640798856539",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 27 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name27 = global.get(\"name27\")\n\nglobal.set(\"name27\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3564,
        "wires": [
            [
                "9c8b3a33d056627d"
            ]
        ]
    },
    {
        "id": "731c2b5d9dc2b628",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 28 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name28 = global.get(\"name28\")\n\nglobal.set(\"name28\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3652,
        "wires": [
            [
                "c92e5eac22ea45e1"
            ]
        ]
    },
    {
        "id": "e470e3649ba498e0",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 29 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name29 = global.get(\"name29\")\n\nglobal.set(\"name29\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3740,
        "wires": [
            [
                "0e4788be7456dd02"
            ]
        ]
    },
    {
        "id": "6e7ab8011da68110",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 30 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name30 = global.get(\"name30\")\n\nglobal.set(\"name30\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3828,
        "wires": [
            [
                "6c8ca32050d74701"
            ]
        ]
    },
    {
        "id": "0785c864c4e05fd6",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 31 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name31 = global.get(\"name31\")\n\nglobal.set(\"name31\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 3916,
        "wires": [
            [
                "ff55bb35352808ac"
            ]
        ]
    },
    {
        "id": "8ab20f0cbfd10603",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 32 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name32 = global.get(\"name32\")\n\nglobal.set(\"name32\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1506,
        "y": 4004,
        "wires": [
            [
                "12b184eedd6aca50"
            ]
        ]
    },
    {
        "id": "91f9f9319becf1fa",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1364,
        "wires": [
            [
                "ae014a7487b1da3f"
            ]
        ]
    },
    {
        "id": "09201bd26db369e2",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1452,
        "wires": [
            [
                "a7e0876a752bc7f6"
            ]
        ]
    },
    {
        "id": "f0bbc5c6450e5a6d",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1540,
        "wires": [
            [
                "5081a606d92fb197"
            ]
        ]
    },
    {
        "id": "b63df3e57534733a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1628,
        "wires": [
            [
                "f25ef1e2433678d1"
            ]
        ]
    },
    {
        "id": "7607a238536e3f32",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1716,
        "wires": [
            [
                "f099a6918adcf51c"
            ]
        ]
    },
    {
        "id": "673a7c12468aa81a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1804,
        "wires": [
            [
                "82daaca274419dd7"
            ]
        ]
    },
    {
        "id": "2361ae89dbadca22",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1892,
        "wires": [
            [
                "f534ffffe024eb89"
            ]
        ]
    },
    {
        "id": "247d7fef243ee0df",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1980,
        "wires": [
            [
                "7338d318e35c8fde"
            ]
        ]
    },
    {
        "id": "fd63dea8706096fa",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2068,
        "wires": [
            [
                "970a9fa405569869"
            ]
        ]
    },
    {
        "id": "c9c3fa8926be8aac",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2156,
        "wires": [
            [
                "ab50856695f85315"
            ]
        ]
    },
    {
        "id": "a00ca2ac227ab15b",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2244,
        "wires": [
            [
                "5b7ba2001526389f"
            ]
        ]
    },
    {
        "id": "216359bdb0a60d34",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2332,
        "wires": [
            [
                "2e7577ebb217d2f0"
            ]
        ]
    },
    {
        "id": "494a6d4c73c8b9a7",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2420,
        "wires": [
            [
                "d9a3e5e515cca028"
            ]
        ]
    },
    {
        "id": "f5e97242b1c7b5eb",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2508,
        "wires": [
            [
                "54b4cf6314178d23"
            ]
        ]
    },
    {
        "id": "e981e6c2c1b5b599",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2596,
        "wires": [
            [
                "d060f431f3d33dab"
            ]
        ]
    },
    {
        "id": "9b60e8613e4cf30c",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 3777,
        "y": 1496,
        "wires": []
    },
    {
        "id": "f63d187e0fcfacda",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Names Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}{{payload.ChannelOffset}}{{global.name1}}00{{global.name2}}00{{global.name3}}FF{{global.name4}}FF{{global.name5}}FF{{global.name6}}FFFF\"",
        "output": "json",
        "x": 3522,
        "y": 1452,
        "wires": [
            [
                "b3842e4a73703e4b"
            ]
        ]
    },
    {
        "id": "b3842e4a73703e4b",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3582,
        "y": 1496,
        "wires": [
            [
                "9b60e8613e4cf30c"
            ]
        ]
    },
    {
        "id": "520ee60af63dc0b9",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"63\"}\n\nvar newMsg = {\"payload\": messageType}\n\nreturn newMsg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3006,
        "y": 1452,
        "wires": [
            [
                "64a3a460c9bc4963"
            ]
        ]
    },
    {
        "id": "64a3a460c9bc4963",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Offset",
        "func": "\nmsg.payload[\"ChannelOffset\"] = \"00\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3270,
        "y": 1452,
        "wires": [
            [
                "f63d187e0fcfacda"
            ]
        ]
    },
    {
        "id": "aa4d889fe5a6a865",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 3799,
        "y": 2024,
        "wires": []
    },
    {
        "id": "3ec563957c3a0877",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Names Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}{{payload.ChannelOffset}}{{global.name7}}00{{global.name8}}00{{global.name9}}FF{{global.name10}}FF{{global.name11}}FF{{global.name12}}FFFF\"",
        "output": "json",
        "x": 3544,
        "y": 1980,
        "wires": [
            [
                "cccbb5337925ccba"
            ]
        ]
    },
    {
        "id": "cccbb5337925ccba",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3604,
        "y": 2024,
        "wires": [
            [
                "aa4d889fe5a6a865"
            ]
        ]
    },
    {
        "id": "615e5412a7213c81",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"63\"}\n\nvar newMsg = {\"payload\": messageType}\n\nreturn newMsg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3028,
        "y": 1980,
        "wires": [
            [
                "c6888aa08b825129"
            ]
        ]
    },
    {
        "id": "c6888aa08b825129",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Offset",
        "func": "\nmsg.payload[\"ChannelOffset\"] = \"06\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3270,
        "y": 1980,
        "wires": [
            [
                "3ec563957c3a0877"
            ]
        ]
    },
    {
        "id": "434e39dea5ed435e",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 3777,
        "y": 2552,
        "wires": []
    },
    {
        "id": "549dd3eede68aeb0",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Names Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}{{payload.ChannelOffset}}{{global.name13}}00{{global.name14}}00{{global.name15}}FF{{global.name16}}FF{{global.name17}}FF{{global.name18}}FFFF\"",
        "output": "json",
        "x": 3522,
        "y": 2508,
        "wires": [
            [
                "650dc752f70d77da"
            ]
        ]
    },
    {
        "id": "650dc752f70d77da",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3582,
        "y": 2552,
        "wires": [
            [
                "434e39dea5ed435e"
            ]
        ]
    },
    {
        "id": "1bd39922fa049eb5",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"63\"}\n\nvar newMsg = {\"payload\": messageType}\n\nreturn newMsg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3028,
        "y": 2508,
        "wires": [
            [
                "9ca73571c9cd5a7d"
            ]
        ]
    },
    {
        "id": "9ca73571c9cd5a7d",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Offset",
        "func": "\nmsg.payload[\"ChannelOffset\"] = \"0C\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3270,
        "y": 2508,
        "wires": [
            [
                "549dd3eede68aeb0"
            ]
        ]
    },
    {
        "id": "522a1ca910b4deba",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 1 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name1 = global.get(\"name1\")\n\nglobal.set(\"name1\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2728,
        "y": 1276,
        "wires": [
            [
                "520ee60af63dc0b9"
            ]
        ]
    },
    {
        "id": "ae014a7487b1da3f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 2 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name2 = global.get(\"name2\")\n\nglobal.set(\"name2\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2728,
        "y": 1364,
        "wires": [
            [
                "520ee60af63dc0b9"
            ]
        ]
    },
    {
        "id": "a7e0876a752bc7f6",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 3 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name3 = global.get(\"name3\")\n\nglobal.set(\"name3\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2728,
        "y": 1452,
        "wires": [
            [
                "520ee60af63dc0b9"
            ]
        ]
    },
    {
        "id": "5081a606d92fb197",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 4 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name4 = global.get(\"name4\")\n\nglobal.set(\"name4\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2728,
        "y": 1540,
        "wires": [
            [
                "520ee60af63dc0b9"
            ]
        ]
    },
    {
        "id": "f25ef1e2433678d1",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 5 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name5 = global.get(\"name5\")\n\nglobal.set(\"name5\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2728,
        "y": 1628,
        "wires": [
            [
                "520ee60af63dc0b9"
            ]
        ]
    },
    {
        "id": "f099a6918adcf51c",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 6 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name6 = global.get(\"name6\")\n\nglobal.set(\"name6\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2728,
        "y": 1716,
        "wires": [
            [
                "520ee60af63dc0b9"
            ]
        ]
    },
    {
        "id": "82daaca274419dd7",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 7 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name7 = global.get(\"name7\")\n\nglobal.set(\"name7\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2728,
        "y": 1804,
        "wires": [
            [
                "615e5412a7213c81"
            ]
        ]
    },
    {
        "id": "f534ffffe024eb89",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 8 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name8 = global.get(\"name8\")\n\nglobal.set(\"name8\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2728,
        "y": 1892,
        "wires": [
            [
                "615e5412a7213c81"
            ]
        ]
    },
    {
        "id": "7338d318e35c8fde",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 9 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name9 = global.get(\"name9\")\n\nglobal.set(\"name9\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2728,
        "y": 1980,
        "wires": [
            [
                "615e5412a7213c81"
            ]
        ]
    },
    {
        "id": "970a9fa405569869",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 10 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name10 = global.get(\"name10\")\n\nglobal.set(\"name10\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2068,
        "wires": [
            [
                "615e5412a7213c81"
            ]
        ]
    },
    {
        "id": "ab50856695f85315",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 11 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name11 = global.get(\"name11\")\n\nglobal.set(\"name11\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2156,
        "wires": [
            [
                "615e5412a7213c81"
            ]
        ]
    },
    {
        "id": "5b7ba2001526389f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 12 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name12 = global.get(\"name12\")\n\nglobal.set(\"name12\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2244,
        "wires": [
            [
                "615e5412a7213c81"
            ]
        ]
    },
    {
        "id": "2e7577ebb217d2f0",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 13 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name13 = global.get(\"name13\")\n\nglobal.set(\"name13\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2332,
        "wires": [
            [
                "1bd39922fa049eb5"
            ]
        ]
    },
    {
        "id": "d9a3e5e515cca028",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 14 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name14 = global.get(\"name14\")\n\nglobal.set(\"name14\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2420,
        "wires": [
            [
                "1bd39922fa049eb5"
            ]
        ]
    },
    {
        "id": "54b4cf6314178d23",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 15 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name15 = global.get(\"name15\")\n\nglobal.set(\"name15\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2508,
        "wires": [
            [
                "1bd39922fa049eb5"
            ]
        ]
    },
    {
        "id": "d060f431f3d33dab",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 16 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name16 = global.get(\"name16\")\n\nglobal.set(\"name16\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2596,
        "wires": [
            [
                "1bd39922fa049eb5"
            ]
        ]
    },
    {
        "id": "6096a9d11f83f5bd",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 17 Name Input",
        "order": 6,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 17</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name17\" placeholder=\"INPUT 17\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<style>\n\n@import url('https://fonts.googleapis.com/css2?family=Pathway+Gothic+One&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Nanum+Pen+Script&display=swap');\n\n.channelNames {\n    color: white\n    font-family: 'Pathway Gothic One';\n    transform: translateY(7px);\n}\n\n.imageA {\n    height: 10px;\n    width: 40px;\n}\n\ninput[type=text] {\n    margin-left: 15%;\n    margin-top: 12%;\n    height: 30px;\n    width: 110px;\n    position: absolute;\n    font-family: 'Nanum Pen Script';\n    background-color: transparent!important;\n    border-color: transparent!important;\n    outline: transparent!important;\n    font-size: 30px;\n    display: flex;\n    text-align: center;\n}\n\n.scribbleImage {\n    position: absolute;\n    display: flex;\n    margin-top: 7%;\n    margin-left: 14%;\n    transform: translateX(-8px);\n}\n\n</style>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2684,
        "wires": [
            [
                "cfb1381479e52575",
                "28140e53074d9e61"
            ]
        ]
    },
    {
        "id": "c6445003764b1960",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 18 Name Input",
        "order": 8,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 18</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name18\" placeholder=\"INPUT 18\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2772,
        "wires": [
            [
                "8faef42c97cd11b0",
                "c36fc54bd0c9a16a"
            ]
        ]
    },
    {
        "id": "7b54ddf4826f5375",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 19 Name Input",
        "order": 9,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 19</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name19\" placeholder=\"INPUT 19\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2860,
        "wires": [
            [
                "200441d3f1cd30c5",
                "07aff38e31fdd789"
            ]
        ]
    },
    {
        "id": "f5cfbba351a9a67c",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 20 Name Input",
        "order": 11,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 20</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name20\" placeholder=\"INPUT 20\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 2948,
        "wires": [
            [
                "e34491d33f7c5323",
                "0723622e06ce7ae8"
            ]
        ]
    },
    {
        "id": "0727e8f11c96da76",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 21 Name Input",
        "order": 12,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 21</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name21\" placeholder=\"INPUT 21\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3036,
        "wires": [
            [
                "4b56c9cef391fd07",
                "8af5f83b32b2a762"
            ]
        ]
    },
    {
        "id": "4648cfea59f97deb",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 22 Name Input",
        "order": 14,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 22</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name22\" placeholder=\"INPUT 22\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3124,
        "wires": [
            [
                "7f837c3de1849991",
                "19ed0e002b63256a"
            ]
        ]
    },
    {
        "id": "eb885d12d472e526",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 23 Name Input",
        "order": 15,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 23</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name23\" placeholder=\"INPUT 23\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3212,
        "wires": [
            [
                "4fddd4a70f6a8432",
                "a5e12d1a6fe41ca0"
            ]
        ]
    },
    {
        "id": "38fc079a8e0557b5",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 24 Name Input",
        "order": 17,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 24</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name24\" placeholder=\"INPUT 24\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3300,
        "wires": [
            [
                "d43e38f10c493f6c",
                "768d9108d935c8c9"
            ]
        ]
    },
    {
        "id": "c7cf6d40e2afc380",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 25 Name Input",
        "order": 22,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 25</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name25\" placeholder=\"INPUT 25\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3388,
        "wires": [
            [
                "1fc3976136667801",
                "95365fb73f019e0b"
            ]
        ]
    },
    {
        "id": "fee91d31de30a369",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 26 Name Input",
        "order": 24,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 26</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name26\" placeholder=\"INPUT 26\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3476,
        "wires": [
            [
                "5bda6f9835814332",
                "caf1fd72e766bc46"
            ]
        ]
    },
    {
        "id": "ffc0f0059084fa60",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 27 Name Input",
        "order": 25,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 27</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name27\" placeholder=\"INPUT 27\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3564,
        "wires": [
            [
                "068fac51c097849d",
                "4d131299992db460"
            ]
        ]
    },
    {
        "id": "66b399706126927c",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 28 Name Input",
        "order": 27,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 28</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name28\" placeholder=\"INPUT 28\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3652,
        "wires": [
            [
                "72c948907335d88e",
                "17ba5f69a34e0906"
            ]
        ]
    },
    {
        "id": "97ef1f1d02f595a0",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 29 Name Input",
        "order": 28,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 29</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name29\" placeholder=\"INPUT 29\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3740,
        "wires": [
            [
                "5f3fac7392c724b2",
                "987eef85a1a19976"
            ]
        ]
    },
    {
        "id": "66ed76aa2ab3e481",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 30 Name Input",
        "order": 30,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 30</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name30\" placeholder=\"INPUT 30\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3828,
        "wires": [
            [
                "6e94b3f0f8a3b6cc",
                "9f713b69ae0a036f"
            ]
        ]
    },
    {
        "id": "685f2ad6c742a063",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 31 Name Input",
        "order": 31,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 31</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name31\" placeholder=\"INPUT 31\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 3916,
        "wires": [
            [
                "b5a8eb2bcbbd2b9e",
                "44a7fae665f88201"
            ]
        ]
    },
    {
        "id": "98946307a2f01d37",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "group": "fd4dc9f7a2926ec7",
        "name": "Channel 32 Name Input",
        "order": 33,
        "width": 3,
        "height": 2,
        "format": "<div width=\"40px\" margin=\"auto\">\n    <p class=\"channelNames\">CHANNEL 32</p>\n<div class=\"imageA\">\n    <img src=\"https://i.ibb.co/SR4CmqT/Scribble-Strip.png\" width= \"85%\" height=\"40%\" class=\"scribbleImage\">\n    <form ng-submit=\"submit(b)\">\n        <input type=\"text\" ng-model=\"text\" id=\"name32\" placeholder=\"INPUT 32\" name=\"text\" maxlength=\"9\" onclick=\"this.select();\" oninput=\"let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);\">\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" style=\"display: none\">\n    </form>\n</div>\n</div>\n\n<script>\n\n    ;(function(scope) {\n        var myText\n        \n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n            scope.text = newVal\n\n        })\n        \n        scope.submit = function(b) {\n            scope.myInput = scope.text\n            scope.send({payload: scope.text})\n        }\n                \n    })(scope)\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 2112,
        "y": 4004,
        "wires": [
            [
                "f6227bc1cf4b3656",
                "24e7d479a506dfb0"
            ]
        ]
    },
    {
        "id": "cfb1381479e52575",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2684,
        "wires": [
            [
                "b0e3c73bc6ef1a3b"
            ]
        ]
    },
    {
        "id": "8faef42c97cd11b0",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2772,
        "wires": [
            [
                "6b56040ad89d5dbe"
            ]
        ]
    },
    {
        "id": "200441d3f1cd30c5",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2860,
        "wires": [
            [
                "f46e6857dc1bfe76"
            ]
        ]
    },
    {
        "id": "e34491d33f7c5323",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 2948,
        "wires": [
            [
                "af12f4a2152da86f"
            ]
        ]
    },
    {
        "id": "4b56c9cef391fd07",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3036,
        "wires": [
            [
                "2285796a6d52da5c"
            ]
        ]
    },
    {
        "id": "7f837c3de1849991",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3124,
        "wires": [
            [
                "5c0b6b1398ec859a"
            ]
        ]
    },
    {
        "id": "7e1233441162c258",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 3777,
        "y": 3080,
        "wires": []
    },
    {
        "id": "f3c11531ba395d90",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Names Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}{{payload.ChannelOffset}}{{global.name19}}00{{global.name20}}00{{global.name21}}FF{{global.name22}}FF{{global.name23}}FF{{global.name24}}FFFF\"",
        "output": "json",
        "x": 3522,
        "y": 3036,
        "wires": [
            [
                "b8439c26433221dd"
            ]
        ]
    },
    {
        "id": "b8439c26433221dd",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3582,
        "y": 3080,
        "wires": [
            [
                "7e1233441162c258"
            ]
        ]
    },
    {
        "id": "44cab7f317281c6c",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"63\"}\n\nvar newMsg = {\"payload\": messageType}\n\nreturn newMsg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3028,
        "y": 3036,
        "wires": [
            [
                "0d74762213b6dc34"
            ]
        ]
    },
    {
        "id": "0d74762213b6dc34",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Offset",
        "func": "\nmsg.payload[\"ChannelOffset\"] = \"12\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3270,
        "y": 3036,
        "wires": [
            [
                "f3c11531ba395d90"
            ]
        ]
    },
    {
        "id": "b0e3c73bc6ef1a3b",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 17 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name17 = global.get(\"name17\")\n\nglobal.set(\"name17\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2684,
        "wires": [
            [
                "1bd39922fa049eb5"
            ]
        ]
    },
    {
        "id": "6b56040ad89d5dbe",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 18 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name18 = global.get(\"name18\")\n\nglobal.set(\"name18\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2772,
        "wires": [
            [
                "1bd39922fa049eb5"
            ]
        ]
    },
    {
        "id": "f46e6857dc1bfe76",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 19 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name19 = global.get(\"name19\")\n\nglobal.set(\"name19\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2860,
        "wires": [
            [
                "44cab7f317281c6c"
            ]
        ]
    },
    {
        "id": "af12f4a2152da86f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 20 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name20 = global.get(\"name20\")\n\nglobal.set(\"name20\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 2948,
        "wires": [
            [
                "44cab7f317281c6c"
            ]
        ]
    },
    {
        "id": "2285796a6d52da5c",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 21 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name21 = global.get(\"name21\")\n\nglobal.set(\"name21\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3036,
        "wires": [
            [
                "44cab7f317281c6c"
            ]
        ]
    },
    {
        "id": "5c0b6b1398ec859a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 22 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name22 = global.get(\"name22\")\n\nglobal.set(\"name22\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3124,
        "wires": [
            [
                "44cab7f317281c6c"
            ]
        ]
    },
    {
        "id": "4fddd4a70f6a8432",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3212,
        "wires": [
            [
                "ff2285547857c838"
            ]
        ]
    },
    {
        "id": "d43e38f10c493f6c",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3300,
        "wires": [
            [
                "02d0f331c106aa65"
            ]
        ]
    },
    {
        "id": "1fc3976136667801",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3388,
        "wires": [
            [
                "40bc4b55e9fa82cf"
            ]
        ]
    },
    {
        "id": "5bda6f9835814332",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3476,
        "wires": [
            [
                "85a46a1b30cb0f45"
            ]
        ]
    },
    {
        "id": "068fac51c097849d",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3564,
        "wires": [
            [
                "99b0cfeba6be1523"
            ]
        ]
    },
    {
        "id": "72c948907335d88e",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3652,
        "wires": [
            [
                "499c8f6b2d38cd45"
            ]
        ]
    },
    {
        "id": "0ba7aecd60637906",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 3777,
        "y": 3608,
        "wires": []
    },
    {
        "id": "40faa26b8a7b4f0f",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Names Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}{{payload.ChannelOffset}}{{global.name25}}00{{global.name26}}00{{global.name27}}FF{{global.name28}}FF{{global.name29}}FF{{global.name30}}FFFF\"",
        "output": "json",
        "x": 3522,
        "y": 3564,
        "wires": [
            [
                "62a3b391a454caf7"
            ]
        ]
    },
    {
        "id": "62a3b391a454caf7",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3582,
        "y": 3608,
        "wires": [
            [
                "0ba7aecd60637906"
            ]
        ]
    },
    {
        "id": "a0d2cb3f85f88b81",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"63\"}\n\nvar newMsg = {\"payload\": messageType}\n\nreturn newMsg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3028,
        "y": 3564,
        "wires": [
            [
                "d2ad1d622816742c"
            ]
        ]
    },
    {
        "id": "d2ad1d622816742c",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Offset",
        "func": "\nmsg.payload[\"ChannelOffset\"] = \"18\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3270,
        "y": 3564,
        "wires": [
            [
                "40faa26b8a7b4f0f"
            ]
        ]
    },
    {
        "id": "ff2285547857c838",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 23 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name23 = global.get(\"name23\")\n\nglobal.set(\"name23\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3212,
        "wires": [
            [
                "44cab7f317281c6c"
            ]
        ]
    },
    {
        "id": "02d0f331c106aa65",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 24 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name24 = global.get(\"name24\")\n\nglobal.set(\"name24\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3300,
        "wires": [
            [
                "44cab7f317281c6c"
            ]
        ]
    },
    {
        "id": "40bc4b55e9fa82cf",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 25 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name25 = global.get(\"name25\")\n\nglobal.set(\"name25\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3388,
        "wires": [
            [
                "a0d2cb3f85f88b81"
            ]
        ]
    },
    {
        "id": "85a46a1b30cb0f45",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 26 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name26 = global.get(\"name26\")\n\nglobal.set(\"name26\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3476,
        "wires": [
            [
                "a0d2cb3f85f88b81"
            ]
        ]
    },
    {
        "id": "99b0cfeba6be1523",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 27 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name27 = global.get(\"name27\")\n\nglobal.set(\"name27\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3564,
        "wires": [
            [
                "a0d2cb3f85f88b81"
            ]
        ]
    },
    {
        "id": "499c8f6b2d38cd45",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 28 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name28 = global.get(\"name28\")\n\nglobal.set(\"name28\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3652,
        "wires": [
            [
                "a0d2cb3f85f88b81"
            ]
        ]
    },
    {
        "id": "5f3fac7392c724b2",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3740,
        "wires": [
            [
                "6ba87d3309b4edfe"
            ]
        ]
    },
    {
        "id": "6e94b3f0f8a3b6cc",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3828,
        "wires": [
            [
                "2f37f63060a74e25"
            ]
        ]
    },
    {
        "id": "b5a8eb2bcbbd2b9e",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 3916,
        "wires": [
            [
                "ac58d19090d3875a"
            ]
        ]
    },
    {
        "id": "fd2a4c565b3432ea",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 3777,
        "y": 4004,
        "wires": []
    },
    {
        "id": "c69e782eb7456019",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Names Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}{{payload.ChannelOffset}}{{global.name31}}00{{global.name32}}00000000000000000000FF000000000000000000FF000000000000000000FF000000000000000000FFFF\"",
        "output": "json",
        "x": 3522,
        "y": 3960,
        "wires": [
            [
                "1f03cc1571235ba8"
            ]
        ]
    },
    {
        "id": "1f03cc1571235ba8",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3582,
        "y": 4004,
        "wires": [
            [
                "fd2a4c565b3432ea",
                "e800651e83789519"
            ]
        ]
    },
    {
        "id": "f6b74c39d9392be5",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"63\"}\n\nvar newMsg = {\"payload\": messageType}\n\nreturn newMsg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3006,
        "y": 3960,
        "wires": [
            [
                "933b1e83f49571e2"
            ]
        ]
    },
    {
        "id": "933b1e83f49571e2",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Offset",
        "func": "\nmsg.payload[\"ChannelOffset\"] = \"1E\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3270,
        "y": 3960,
        "wires": [
            [
                "c69e782eb7456019"
            ]
        ]
    },
    {
        "id": "6ba87d3309b4edfe",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 29 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name29 = global.get(\"name29\")\n\nglobal.set(\"name29\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3740,
        "wires": [
            [
                "a0d2cb3f85f88b81"
            ]
        ]
    },
    {
        "id": "2f37f63060a74e25",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 30 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name30 = global.get(\"name30\")\n\nglobal.set(\"name30\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3828,
        "wires": [
            [
                "a0d2cb3f85f88b81"
            ]
        ]
    },
    {
        "id": "ac58d19090d3875a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 31 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name31 = global.get(\"name31\")\n\nglobal.set(\"name31\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 3916,
        "wires": [
            [
                "f6b74c39d9392be5"
            ]
        ]
    },
    {
        "id": "f6227bc1cf4b3656",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "ASCII => Hex Formatter",
        "func": "\nvar pad = \" \"\n\nvar count, padding, paddedMsg\n        \n        count = 9 - msg.payload.length\n        \n        padding = pad.repeat(count)\n        \n        paddedMsg = msg.payload + padding\n\nvar hexName = []\n  \nfor (var i = 0; i < paddedMsg.length; i++) {\n    var hex = Number(paddedMsg.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nmsg.payload = hexName.join('')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 4004,
        "wires": [
            [
                "f4829afbc6e8d474"
            ]
        ]
    },
    {
        "id": "f4829afbc6e8d474",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set Name 32 Flow Variable",
        "func": "if (msg.payload) {\n\nvar name32 = global.get(\"name32\")\n\nglobal.set(\"name32\", msg.payload)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2738,
        "y": 4004,
        "wires": [
            [
                "f6b74c39d9392be5"
            ]
        ]
    },
    {
        "id": "c41bbae87febfc30",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Meter Routing",
        "func": "\nlet messages = new Array(node.outputCount)\n\nlet typeByte = msg.payload[35]\n\nif (typeByte === 0x00) {\n    messages[0] = msg;\n} \nif (typeByte === 0x01) {\n    messages[1] = msg;\n}\n\n\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 266,
        "y": 550,
        "wires": [
            [
                "2ed996348ace112d"
            ],
            [
                "442622c48484e082"
            ]
        ]
    },
    {
        "id": "b61ed10a73b040b6",
        "type": "ui_ui_control",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "events": "change",
        "x": 456,
        "y": 1386,
        "wires": [
            []
        ]
    },
    {
        "id": "4af0c520a828ed11",
        "type": "ui_button",
        "z": "8b15064d8a9c0e4d",
        "name": "Show Channels 17-32",
        "group": "334def06aa2d0d6c",
        "order": 5,
        "width": 1,
        "height": 9,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-angle-double-right",
        "payload": "{\"group\":{\"hide\":[\"Hubs_and_Sources_Hub_Metrics_B\"],\"show\":[\"Hubs_and_Sources_Hub_Metrics_A\"],\"focus\":true}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 254,
        "y": 1386,
        "wires": [
            [
                "b61ed10a73b040b6",
                "4842d2cc760e8576"
            ]
        ]
    },
    {
        "id": "6bdf4dfb6e76b803",
        "type": "ui_button",
        "z": "8b15064d8a9c0e4d",
        "name": "Show Channels 1-16",
        "group": "fd4dc9f7a2926ec7",
        "order": 1,
        "width": 1,
        "height": 9,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-angle-double-left",
        "payload": "{\"group\":{\"hide\":[\"Hubs_and_Sources_Hub_Metrics_A\"],\"show\":[\"Hubs_and_Sources_Hub_Metrics_B\"],\"focus\":true}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 254,
        "y": 1342,
        "wires": [
            [
                "30dea1bce2244a14",
                "527f85bc4c1b9e39"
            ]
        ]
    },
    {
        "id": "30dea1bce2244a14",
        "type": "ui_ui_control",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "events": "change",
        "x": 456,
        "y": 1342,
        "wires": [
            []
        ]
    },
    {
        "id": "e29109cc65a5c605",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Binary Reverse => Hex",
        "func": "var stereoMessage = msg.payload\n\nif (stereoMessage.length == 8) {\nvar reverseMessage = stereoMessage.split(\"\").reverse().join(\"\")\n\nvar hexValue = parseInt(reverseMessage, 2).toString(16)\n\nswitch (hexValue) {\n    case \"0\": \n        hexValue = \"00\";\n        break;\n    case \"1\":\n        hexValue = \"01\";\n        break;\n    case \"2\":\n        hexValue = \"02\";\n        break;\n    case \"3\": \n        hexValue = \"03\";\n        break;\n    case \"4\":\n        hexValue = \"04\";\n        break;\n    case \"5\":\n        hexValue = \"05\";\n        break;\n    case \"6\": \n        hexValue = \"06\";\n        break;\n    case \"7\":\n        hexValue = \"07\";\n        break;\n    case \"8\":\n        hexValue = \"08\";\n        break;\n    case \"9\": \n        hexValue = \"09\";\n        break;\n    default:\n        hexValue = hexValue;\n}\n\nmsg.payload = {\"link2\" : hexValue}\n\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2068,
        "y": 858,
        "wires": [
            [
                "cd696fa2f3405301"
            ]
        ]
    },
    {
        "id": "cd696fa2f3405301",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo B Links to Flow Variable",
        "func": "stereoLink2 = global.get(\"stereoLink2\")\n\nglobal.set(\"stereoLink2\", msg.payload.link2)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2330,
        "y": 858,
        "wires": [
            [
                "75393f2cdaeb5cbd"
            ]
        ]
    },
    {
        "id": "264903361b62fd19",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 2875,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f4d2285ab5913daa",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Poll Hub",
        "func": "\n    let padByte = \"00\"\n\n    let hubPad = padByte.repeat(34)\n\n    msg.payload[\"packetData\"] = hubPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 1012,
        "wires": [
            [
                "da0a5fab35082fac"
            ]
        ]
    },
    {
        "id": "da0a5fab35082fac",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}00{{global.stereoLink1}}{{global.stereoLink2}}000000000000{{flow.meterChannels}}{{payload.packetCommand}}{{payload.packetData}}\"",
        "output": "json",
        "x": 2600,
        "y": 1056,
        "wires": [
            [
                "9c0ac897e295a93f"
            ]
        ]
    },
    {
        "id": "9c0ac897e295a93f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 1100,
        "wires": [
            [
                "264903361b62fd19",
                "7f23ec0d356306ea"
            ]
        ]
    },
    {
        "id": "4c8326757f787e11",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Fast Status Packet Command",
        "func": "\nmsg.payload[\"packetCommand\"] = \"FE\"\n\nreturn msg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2660,
        "y": 968,
        "wires": [
            [
                "f4d2285ab5913daa"
            ]
        ]
    },
    {
        "id": "75393f2cdaeb5cbd",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"6F\"}\n\nvar newMsg = {\"payload\": messageType}\n\nreturn newMsg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2610,
        "y": 924,
        "wires": [
            [
                "4c8326757f787e11"
            ]
        ]
    },
    {
        "id": "2ed996348ace112d",
        "type": "subflow:e0533ca531e9d6c6",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "x": 476,
        "y": 528,
        "wires": [
            []
        ]
    },
    {
        "id": "4842d2cc760e8576",
        "type": "change",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "meterChannels",
                "pt": "flow",
                "to": "01",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 506,
        "y": 1452,
        "wires": [
            [
                "eb8531876d8afe94"
            ]
        ]
    },
    {
        "id": "527f85bc4c1b9e39",
        "type": "change",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "meterChannels",
                "pt": "flow",
                "to": "00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 506,
        "y": 1276,
        "wires": [
            [
                "eb8531876d8afe94"
            ]
        ]
    },
    {
        "id": "5484408abeab449b",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 1027,
        "y": 1540,
        "wires": []
    },
    {
        "id": "9b9bdbe9d75f6cd1",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Poll Hub",
        "func": "\n    let padByte = \"00\"\n\n    let hubPad = padByte.repeat(34)\n\n    msg.payload[\"packetData\"] = hubPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 742,
        "y": 1452,
        "wires": [
            [
                "9433f2a5ea8427c4"
            ]
        ]
    },
    {
        "id": "9433f2a5ea8427c4",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}00{{global.stereoLink1}}{{global.stereoLink2}}000000000000{{flow.meterChannels}}{{payload.packetCommand}}{{payload.packetData}}\"",
        "output": "json",
        "x": 752,
        "y": 1496,
        "wires": [
            [
                "81fa8de64e7d3468"
            ]
        ]
    },
    {
        "id": "81fa8de64e7d3468",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 832,
        "y": 1540,
        "wires": [
            [
                "5484408abeab449b"
            ]
        ]
    },
    {
        "id": "cb323d906d297c28",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Fast Status Packet Command",
        "func": "\nmsg.payload[\"packetCommand\"] = \"FE\"\n\nreturn msg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 812,
        "y": 1408,
        "wires": [
            [
                "9b9bdbe9d75f6cd1"
            ]
        ]
    },
    {
        "id": "eb8531876d8afe94",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"6F\"}\n\nvar newMsg = {\"payload\": messageType}\n\nreturn newMsg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 762,
        "y": 1364,
        "wires": [
            [
                "cb323d906d297c28"
            ]
        ]
    },
    {
        "id": "7ead91921d999da4",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "UI Load Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 1137,
        "y": 286,
        "wires": []
    },
    {
        "id": "7241bb851a8652ea",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}00{{global.stereoLink1}}{{global.stereoLink2}}000000000000{{flow.meterChannels}}{{payload.packetCommand}}{{payload.packetData}}\"",
        "output": "json",
        "x": 664,
        "y": 286,
        "wires": [
            [
                "61089271705c9e66"
            ]
        ]
    },
    {
        "id": "61089271705c9e66",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 286,
        "wires": [
            [
                "7ead91921d999da4"
            ]
        ]
    },
    {
        "id": "e3bbfb702cd57fe5",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "UI Load Hub Messages Out",
        "mode": "link",
        "links": [
            "f121e424842c9095"
        ],
        "x": 1137,
        "y": 396,
        "wires": []
    },
    {
        "id": "a1aafd7b35dafe4e",
        "type": "template",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.idArray[0]}}{{payload.messageType}}00{{global.stereoLink1}}{{global.stereoLink2}}000000000000{{flow.meterChannels}}{{payload.packetCommand}}{{payload.packetData}}\"",
        "output": "json",
        "x": 664,
        "y": 396,
        "wires": [
            [
                "8a86797a95c711b5"
            ]
        ]
    },
    {
        "id": "8a86797a95c711b5",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Data to Hub Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 396,
        "wires": [
            [
                "e3bbfb702cd57fe5"
            ]
        ]
    },
    {
        "id": "49892459864b9f40",
        "type": "delay-gate",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "triggerPayload": "",
        "triggerPayloadType": "str",
        "delayDuration": "1",
        "delayUnits": "s",
        "openDuration": 5,
        "openUnits": "s",
        "closeGate": false,
        "x": 510,
        "y": 2574,
        "wires": [
            [
                "48f161d646da1df1"
            ]
        ]
    },
    {
        "id": "7ae105866e6d0e97",
        "type": "link out",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Meter Out",
        "mode": "link",
        "links": [
            "c9e206d4747c2c05"
        ],
        "x": 1005,
        "y": 660,
        "wires": []
    },
    {
        "id": "c9e206d4747c2c05",
        "type": "link in",
        "z": "8b15064d8a9c0e4d",
        "name": "Hub Meter In",
        "links": [
            "7ae105866e6d0e97"
        ],
        "x": 125,
        "y": 550,
        "wires": [
            [
                "c41bbae87febfc30"
            ]
        ]
    },
    {
        "id": "442622c48484e082",
        "type": "subflow:b6c9ef1861969ee4",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "x": 476,
        "y": 572,
        "wires": [
            []
        ]
    },
    {
        "id": "41f221d2b25940ce",
        "type": "subflow:39a4598626b2fe32",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "x": 246,
        "y": 352,
        "wires": [
            [
                "8186688aa09081a0"
            ]
        ]
    },
    {
        "id": "31a1b98937300193",
        "type": "subflow:82ff8e0cb1c21fc3",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "x": 236,
        "y": 242,
        "wires": [
            [
                "e05e2953bd728b19"
            ]
        ]
    },
    {
        "id": "b5997ef6f7452ea7",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 686,
        "y": 748,
        "wires": []
    },
    {
        "id": "87a921322d8970bd",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3128,
        "y": 792,
        "wires": []
    },
    {
        "id": "7f23ec0d356306ea",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2930,
        "y": 1188,
        "wires": []
    },
    {
        "id": "7477017a1b0ce3ac",
        "type": "inject",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "stereoLink1",
        "payloadType": "global",
        "x": 2108,
        "y": 286,
        "wires": [
            [
                "a6f256deac025ae2"
            ]
        ]
    },
    {
        "id": "927fde43a84a2e4a",
        "type": "inject",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "stereoLink2",
        "payloadType": "global",
        "x": 2114,
        "y": 352,
        "wires": [
            [
                "0aee54455bab1297"
            ]
        ]
    },
    {
        "id": "a6f256deac025ae2",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2286,
        "y": 286,
        "wires": []
    },
    {
        "id": "0aee54455bab1297",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2292,
        "y": 352,
        "wires": []
    },
    {
        "id": "8184c6bba2c08d3d",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 770,
        "wires": []
    },
    {
        "id": "792fa7825c3193bf",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1324,
        "y": 1122,
        "wires": []
    },
    {
        "id": "3fe34cfe63c6d4b4",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1676,
        "y": 1078,
        "wires": []
    },
    {
        "id": "58f058c7a6fe0c16",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1676,
        "y": 1122,
        "wires": []
    },
    {
        "id": "edc647f6c5398b14",
        "type": "inject",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "stereo11",
        "payloadType": "flow",
        "x": 2094,
        "y": 418,
        "wires": [
            [
                "6a6d37bb17bcdc73"
            ]
        ]
    },
    {
        "id": "6a6d37bb17bcdc73",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2292,
        "y": 418,
        "wires": []
    },
    {
        "id": "9ba929babc6c1770",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 9 Flow Set",
        "func": "if (msg.payload) {\nstereo9 = global.get(\"stereo9\")\n\nglobal.set(\"stereo9\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 726,
        "wires": [
            [
                "526933b8b8b2643b",
                "c3c9b9d5b1171029"
            ]
        ]
    },
    {
        "id": "4a3d7403c86005c4",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 10 Flow Set",
        "func": "if (msg.payload) {\nstereo10 = global.get(\"stereo10\")\n\nglobal.set(\"stereo10\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 770,
        "wires": [
            [
                "063ae2c4ed63b858",
                "74113aee09a9d75b"
            ]
        ]
    },
    {
        "id": "0cb903784796398f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 11 Flow Set",
        "func": "if (msg.payload) {\nstereo11 = global.get(\"stereo11\")\n\nglobal.set(\"stereo11\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 814,
        "wires": [
            [
                "fb6e1f36177a2782",
                "be4598d09be6b912"
            ]
        ]
    },
    {
        "id": "dbbac9f0988a9602",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 12 Flow Set",
        "func": "if (msg.payload) {\nstereo12 = global.get(\"stereo12\")\n\nglobal.set(\"stereo12\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 858,
        "wires": [
            [
                "3a2d16d186125a8f",
                "e50300ecb10a185e"
            ]
        ]
    },
    {
        "id": "1f5a2d48ae093ff7",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 13 Flow Set",
        "func": "if (msg.payload) {\nstereo13 = global.get(\"stereo13\")\n\nglobal.set(\"stereo13\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 902,
        "wires": [
            [
                "7d70be6c444e4291",
                "ee40421241ad9c3f"
            ]
        ]
    },
    {
        "id": "f00f5d396ebfe937",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 14 Flow Set",
        "func": "if (msg.payload) {\nstereo14 = global.get(\"stereo14\")\n\nglobal.set(\"stereo14\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 946,
        "wires": [
            [
                "78b884f53224781d",
                "3fe34cfe63c6d4b4"
            ]
        ]
    },
    {
        "id": "cc99ad47d6dded74",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 15 Flow Set",
        "func": "if (msg.payload) {\nstereo15 = global.get(\"stereo15\")\n\nglobal.set(\"stereo15\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 990,
        "wires": [
            [
                "088c22d4961ca35c",
                "58f058c7a6fe0c16"
            ]
        ]
    },
    {
        "id": "2558719e029e8c44",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 16 Flow Set",
        "func": "if (msg.payload) {\nstereo16 = global.get(\"stereo16\")\n\nglobal.set(\"stereo16\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 1034,
        "wires": [
            [
                "dae2d2d2aa3e8832",
                "cde8b0e04a9b7bcd"
            ]
        ]
    },
    {
        "id": "31f7d29bb22b9524",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 1 Flow Set",
        "func": "if (msg.payload) {\n\nstereo1 = global.get(\"stereo1\")\n\nglobal.set(\"stereo1\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 374,
        "wires": [
            [
                "79d29eb408693494",
                "d07fb6ae9fa626b3"
            ]
        ]
    },
    {
        "id": "681ddc64ba201687",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 2 Flow Set",
        "func": "if (msg.payload) {\nstereo2 = global.get(\"stereo2\")\n\nglobal.set(\"stereo2\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 418,
        "wires": [
            [
                "b197a19541a2eda8",
                "0cf0b9fbe823cf21"
            ]
        ]
    },
    {
        "id": "be25353d65b3ba96",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 3 Flow Set",
        "func": "if (msg.payload) {\nstereo3 = global.get(\"stereo3\")\n\nglobal.set(\"stereo3\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 462,
        "wires": [
            [
                "918d4fa567718816",
                "b1e7ead523662f30"
            ]
        ]
    },
    {
        "id": "a49756ab27f1d643",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 4 Flow Set",
        "func": "if (msg.payload) {\nstereo4 = global.get(\"stereo4\")\n\nglobal.set(\"stereo4\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 506,
        "wires": [
            [
                "f4dabb105a4122c0",
                "e4b69bdde439a776"
            ]
        ]
    },
    {
        "id": "3599adb0e1817bc7",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 5 Flow Set",
        "func": "if (msg.payload) {\nstereo5 = global.get(\"stereo5\")\n\nglobal.set(\"stereo5\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 550,
        "wires": [
            [
                "7b0976bc120cc2e5",
                "ecbd116f3735355f"
            ]
        ]
    },
    {
        "id": "adeab17a89996440",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 6 Flow Set",
        "func": "if (msg.payload) {\nstereo6 = global.get(\"stereo6\")\n\nglobal.set(\"stereo6\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 594,
        "wires": [
            [
                "77bd4d6ad0b522f0",
                "6ebf8beee7ce4dc6"
            ]
        ]
    },
    {
        "id": "7ebbd45232e42f07",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 7 Flow Set",
        "func": "if (msg.payload) {\nstereo7 = global.get(\"stereo7\")\n\nglobal.set(\"stereo7\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 638,
        "wires": [
            [
                "79fab92914b63dc7",
                "850ec98b28e771ad"
            ]
        ]
    },
    {
        "id": "4459a1ad1674a14a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Stereo 8 Flow Set",
        "func": "if (msg.payload) {\nstereo8 = global.get(\"stereo8\")\n\nglobal.set(\"stereo8\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1388,
        "y": 682,
        "wires": [
            [
                "21a0de0cb92fe0fc",
                "f7c135ea35b97ecc"
            ]
        ]
    },
    {
        "id": "51b5861e20889cb3",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 1 Variable",
        "func": "var name1 = global.get(\"asciiName1\")\n\nglobal.set(\"asciiName1\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 1232,
        "wires": [
            []
        ]
    },
    {
        "id": "e7e6b12e53c750ed",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 1 Variable",
        "func": "var name1 = global.get(\"asciiName1\")\n\nglobal.set(\"asciiName1\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 1232,
        "wires": [
            []
        ]
    },
    {
        "id": "de4f72c80923397a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 2 Variable",
        "func": "var name1 = global.get(\"asciiName2\")\n\nglobal.set(\"asciiName2\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "19a119ac1b601282",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 2 Variable",
        "func": "var name1 = global.get(\"asciiName2\")\n\nglobal.set(\"asciiName2\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "36d0b78f19b44bbb",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 3 Variable",
        "func": "var name1 = global.get(\"asciiName3\")\n\nglobal.set(\"asciiName3\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 1408,
        "wires": [
            []
        ]
    },
    {
        "id": "6f99083f63fd2f40",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 3 Variable",
        "func": "var name1 = global.get(\"asciiName3\")\n\nglobal.set(\"asciiName3\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 1408,
        "wires": [
            []
        ]
    },
    {
        "id": "62d32372cfc031ae",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 4 Variable",
        "func": "var name1 = global.get(\"asciiName4\")\n\nglobal.set(\"asciiName4\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 1496,
        "wires": [
            []
        ]
    },
    {
        "id": "6de08894abd87282",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 4 Variable",
        "func": "var name1 = global.get(\"asciiName4\")\n\nglobal.set(\"asciiName4\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 1496,
        "wires": [
            []
        ]
    },
    {
        "id": "dd1bd61f106f9d8d",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 5 Variable",
        "func": "var name1 = global.get(\"asciiName5\")\n\nglobal.set(\"asciiName5\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 1584,
        "wires": [
            []
        ]
    },
    {
        "id": "49204046bb9d7ac1",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 5 Variable",
        "func": "var name1 = global.get(\"asciiName5\")\n\nglobal.set(\"asciiName5\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 1584,
        "wires": [
            []
        ]
    },
    {
        "id": "e4f78879ffd0bb82",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 6 Variable",
        "func": "var name1 = global.get(\"asciiName6\")\n\nglobal.set(\"asciiName6\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 1672,
        "wires": [
            []
        ]
    },
    {
        "id": "f93c05cdc9d5ac71",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 6 Variable",
        "func": "var name1 = global.get(\"asciiName6\")\n\nglobal.set(\"asciiName6\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 1672,
        "wires": [
            []
        ]
    },
    {
        "id": "cbe36dd982a7a8f2",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 7 Variable",
        "func": "var name1 = global.get(\"asciiName7\")\n\nglobal.set(\"asciiName7\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "5fece0a0b9f8338c",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 7 Variable",
        "func": "var name1 = global.get(\"asciiName7\")\n\nglobal.set(\"asciiName7\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "ba1c895abaff4b0a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 8 Variable",
        "func": "var name1 = global.get(\"asciiName8\")\n\nglobal.set(\"asciiName8\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 1848,
        "wires": [
            []
        ]
    },
    {
        "id": "9e6b5c5d209e5bb7",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 8 Variable",
        "func": "var name1 = global.get(\"asciiName8\")\n\nglobal.set(\"asciiName8\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 1848,
        "wires": [
            []
        ]
    },
    {
        "id": "42ceedc6d8a3d21c",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 9 Variable",
        "func": "var name1 = global.get(\"asciiName9\")\n\nglobal.set(\"asciiName9\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 1936,
        "wires": [
            []
        ]
    },
    {
        "id": "4e5320fbf76394f2",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 9 Variable",
        "func": "var name1 = global.get(\"asciiName9\")\n\nglobal.set(\"asciiName9\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 1936,
        "wires": [
            []
        ]
    },
    {
        "id": "7899d39f16ae5fbe",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 10 Variable",
        "func": "var name1 = global.get(\"asciiName10\")\n\nglobal.set(\"asciiName10\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2024,
        "wires": [
            []
        ]
    },
    {
        "id": "f8426db3702897c7",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 10 Variable",
        "func": "var name1 = global.get(\"asciiName10\")\n\nglobal.set(\"asciiName10\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 2024,
        "wires": [
            []
        ]
    },
    {
        "id": "7272154da8bd81b2",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 11 Variable",
        "func": "var name1 = global.get(\"asciiName11\")\n\nglobal.set(\"asciiName11\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2112,
        "wires": [
            []
        ]
    },
    {
        "id": "0f594a2760e9a3f2",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 11 Variable",
        "func": "var name1 = global.get(\"asciiName11\")\n\nglobal.set(\"asciiName11\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 2112,
        "wires": [
            []
        ]
    },
    {
        "id": "3f10aed0b480d781",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 12 Variable",
        "func": "var name1 = global.get(\"asciiName12\")\n\nglobal.set(\"asciiName12\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "4693a7460ab1594a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 12 Variable",
        "func": "var name1 = global.get(\"asciiName12\")\n\nglobal.set(\"asciiName12\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "c60070dd7d15dd5a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 13 Variable",
        "func": "var name1 = global.get(\"asciiName13\")\n\nglobal.set(\"asciiName13\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2288,
        "wires": [
            []
        ]
    },
    {
        "id": "1919aa1f8792daf8",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 13 Variable",
        "func": "var name1 = global.get(\"asciiName13\")\n\nglobal.set(\"asciiName13\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 2288,
        "wires": [
            []
        ]
    },
    {
        "id": "1d2abebdad1f2ab1",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 14 Variable",
        "func": "var name1 = global.get(\"asciiName14\")\n\nglobal.set(\"asciiName14\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2376,
        "wires": [
            []
        ]
    },
    {
        "id": "5580f1852d6daffa",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 14 Variable",
        "func": "var name1 = global.get(\"asciiName14\")\n\nglobal.set(\"asciiName14\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 2376,
        "wires": [
            []
        ]
    },
    {
        "id": "eaf7db0aa5f325e1",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 15 Variable",
        "func": "var name1 = global.get(\"asciiName15\")\n\nglobal.set(\"asciiName15\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2464,
        "wires": [
            []
        ]
    },
    {
        "id": "450bc6f9ee6d201f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 15 Variable",
        "func": "var name1 = global.get(\"asciiName15\")\n\nglobal.set(\"asciiName15\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 2464,
        "wires": [
            []
        ]
    },
    {
        "id": "5c96113122a14c1a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 16 Variable",
        "func": "var name1 = global.get(\"asciiName16\")\n\nglobal.set(\"asciiName16\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2552,
        "wires": [
            []
        ]
    },
    {
        "id": "52df2a7d7d090168",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 16 Variable",
        "func": "var name1 = global.get(\"asciiName16\")\n\nglobal.set(\"asciiName16\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 2552,
        "wires": [
            []
        ]
    },
    {
        "id": "53e43384e6262c08",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 17 Variable",
        "func": "var name1 = global.get(\"asciiName17\")\n\nglobal.set(\"asciiName17\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "28140e53074d9e61",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 17 Variable",
        "func": "var name1 = global.get(\"asciiName17\")\n\nglobal.set(\"asciiName17\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "44490a2f4403939e",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 18 Variable",
        "func": "var name1 = global.get(\"asciiName18\")\n\nglobal.set(\"asciiName18\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2728,
        "wires": [
            []
        ]
    },
    {
        "id": "c36fc54bd0c9a16a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 18 Variable",
        "func": "var name1 = global.get(\"asciiName18\")\n\nglobal.set(\"asciiName18\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 2728,
        "wires": [
            []
        ]
    },
    {
        "id": "de900460a1d0cade",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 19 Variable",
        "func": "var name1 = global.get(\"asciiName19\")\n\nglobal.set(\"asciiName19\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2816,
        "wires": [
            []
        ]
    },
    {
        "id": "07aff38e31fdd789",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 19 Variable",
        "func": "var name1 = global.get(\"asciiName19\")\n\nglobal.set(\"asciiName19\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 2816,
        "wires": [
            []
        ]
    },
    {
        "id": "eae8506a37591b96",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 20 Variable",
        "func": "var name1 = global.get(\"asciiName20\")\n\nglobal.set(\"asciiName20\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2904,
        "wires": [
            []
        ]
    },
    {
        "id": "0723622e06ce7ae8",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 20 Variable",
        "func": "var name1 = global.get(\"asciiName20\")\n\nglobal.set(\"asciiName20\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 2904,
        "wires": [
            []
        ]
    },
    {
        "id": "a01bf0c2c3688431",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 21 Variable",
        "func": "var name1 = global.get(\"asciiName21\")\n\nglobal.set(\"asciiName21\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 2992,
        "wires": [
            []
        ]
    },
    {
        "id": "8af5f83b32b2a762",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 21 Variable",
        "func": "var name1 = global.get(\"asciiName21\")\n\nglobal.set(\"asciiName21\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 2992,
        "wires": [
            []
        ]
    },
    {
        "id": "df0101355f9b2261",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 22 Variable",
        "func": "var name1 = global.get(\"asciiName22\")\n\nglobal.set(\"asciiName22\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "19ed0e002b63256a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 22 Variable",
        "func": "var name1 = global.get(\"asciiName22\")\n\nglobal.set(\"asciiName22\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "8decb57f4ce29bcf",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 23 Variable",
        "func": "var name1 = global.get(\"asciiName23\")\n\nglobal.set(\"asciiName23\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3168,
        "wires": [
            []
        ]
    },
    {
        "id": "a5e12d1a6fe41ca0",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 23 Variable",
        "func": "var name1 = global.get(\"asciiName23\")\n\nglobal.set(\"asciiName23\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3168,
        "wires": [
            []
        ]
    },
    {
        "id": "f384ed25e1ddee31",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 24 Variable",
        "func": "var name1 = global.get(\"asciiName24\")\n\nglobal.set(\"asciiName24\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3256,
        "wires": [
            []
        ]
    },
    {
        "id": "768d9108d935c8c9",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 24 Variable",
        "func": "var name1 = global.get(\"asciiName24\")\n\nglobal.set(\"asciiName24\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3256,
        "wires": [
            []
        ]
    },
    {
        "id": "65a524f257e1902f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 25 Variable",
        "func": "var name1 = global.get(\"asciiName25\")\n\nglobal.set(\"asciiName25\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3344,
        "wires": [
            []
        ]
    },
    {
        "id": "95365fb73f019e0b",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 25 Variable",
        "func": "var name1 = global.get(\"asciiName25\")\n\nglobal.set(\"asciiName25\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3344,
        "wires": [
            []
        ]
    },
    {
        "id": "7ca966790eb7d65a",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 26 Variable",
        "func": "var name1 = global.get(\"asciiName26\")\n\nglobal.set(\"asciiName26\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3432,
        "wires": [
            []
        ]
    },
    {
        "id": "caf1fd72e766bc46",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 26 Variable",
        "func": "var name1 = global.get(\"asciiName26\")\n\nglobal.set(\"asciiName26\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3432,
        "wires": [
            []
        ]
    },
    {
        "id": "181f48a66f6002fe",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 27 Variable",
        "func": "var name1 = global.get(\"asciiName27\")\n\nglobal.set(\"asciiName27\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3520,
        "wires": [
            []
        ]
    },
    {
        "id": "4d131299992db460",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 27 Variable",
        "func": "var name1 = global.get(\"asciiName27\")\n\nglobal.set(\"asciiName27\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3520,
        "wires": [
            []
        ]
    },
    {
        "id": "f67c776740be5897",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 28 Variable",
        "func": "var name1 = global.get(\"asciiName28\")\n\nglobal.set(\"asciiName28\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3608,
        "wires": [
            []
        ]
    },
    {
        "id": "17ba5f69a34e0906",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 28 Variable",
        "func": "var name1 = global.get(\"asciiName28\")\n\nglobal.set(\"asciiName28\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3608,
        "wires": [
            []
        ]
    },
    {
        "id": "146b7e51fe25eee0",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 29 Variable",
        "func": "var name1 = global.get(\"asciiName29\")\n\nglobal.set(\"asciiName29\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3696,
        "wires": [
            []
        ]
    },
    {
        "id": "987eef85a1a19976",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 29 Variable",
        "func": "var name1 = global.get(\"asciiName29\")\n\nglobal.set(\"asciiName29\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3696,
        "wires": [
            []
        ]
    },
    {
        "id": "6373ddc30fe929a6",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 30 Variable",
        "func": "var name1 = global.get(\"asciiName30\")\n\nglobal.set(\"asciiName30\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3784,
        "wires": [
            []
        ]
    },
    {
        "id": "9f713b69ae0a036f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 30 Variable",
        "func": "var name1 = global.get(\"asciiName30\")\n\nglobal.set(\"asciiName30\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3784,
        "wires": [
            []
        ]
    },
    {
        "id": "5055c81840320fcd",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 31 Variable",
        "func": "var name1 = global.get(\"asciiName31\")\n\nglobal.set(\"asciiName31\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3872,
        "wires": [
            []
        ]
    },
    {
        "id": "44a7fae665f88201",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 31 Variable",
        "func": "var name1 = global.get(\"asciiName31\")\n\nglobal.set(\"asciiName31\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3872,
        "wires": [
            []
        ]
    },
    {
        "id": "b9d390e96936f773",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 32 Variable",
        "func": "var name1 = global.get(\"asciiName32\")\n\nglobal.set(\"asciiName32\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2034,
        "y": 3960,
        "wires": [
            []
        ]
    },
    {
        "id": "24e7d479a506dfb0",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Set ASCII Name 32 Variable",
        "func": "var name1 = global.get(\"asciiName32\")\n\nglobal.set(\"asciiName32\", msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2342,
        "y": 3960,
        "wires": [
            []
        ]
    },
    {
        "id": "e800651e83789519",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3788,
        "y": 3872,
        "wires": []
    },
    {
        "id": "0bc41d9472e96c9c",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 246,
        "y": 638,
        "wires": []
    },
    {
        "id": "aee5e45fe21fa7d3",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1368,
        "y": 242,
        "wires": []
    },
    {
        "id": "7c9af1ccdf38a555",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Poll Hub",
        "func": "\n    let padByte = \"00\"\n\n    let hubPad = padByte.repeat(34)\n\n    msg.payload[\"packetData\"] = hubPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1094,
        "y": 242,
        "wires": [
            [
                "7241bb851a8652ea"
            ]
        ]
    },
    {
        "id": "b277a6a99a991a18",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Fast Status Packet Command",
        "func": "\nmsg.payload[\"packetCommand\"] = \"FE\"\n\nreturn msg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 856,
        "y": 242,
        "wires": [
            [
                "7c9af1ccdf38a555"
            ]
        ]
    },
    {
        "id": "77d3cf71d593bfa1",
        "type": "inject",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"messageType\" : \"6F\"}",
        "payloadType": "json",
        "x": 198,
        "y": 198,
        "wires": [
            []
        ]
    },
    {
        "id": "81c53ec840b7d5b4",
        "type": "delay-gate",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "triggerPayload": "",
        "triggerPayloadType": "str",
        "delayDuration": "1",
        "delayUnits": "s",
        "openDuration": 5,
        "openUnits": "hr",
        "closeGate": false,
        "x": 620,
        "y": 242,
        "wires": [
            [
                "b277a6a99a991a18"
            ]
        ]
    },
    {
        "id": "e05e2953bd728b19",
        "type": "trigger",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-20",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 420,
        "y": 242,
        "wires": [
            [
                "81c53ec840b7d5b4"
            ]
        ]
    },
    {
        "id": "545594c4ebe0cef6",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Poll Hub",
        "func": "\n    let padByte = \"00\"\n\n    let hubPad = padByte.repeat(34)\n\n    msg.payload[\"packetData\"] = hubPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 352,
        "wires": [
            [
                "a1aafd7b35dafe4e"
            ]
        ]
    },
    {
        "id": "1f28fefed50c4a3d",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "name": "Channel Names Packet Command",
        "func": "\nmsg.payload[\"packetCommand\"] = \"FF\"\n\nreturn msg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 822,
        "y": 352,
        "wires": [
            [
                "545594c4ebe0cef6"
            ]
        ]
    },
    {
        "id": "8186688aa09081a0",
        "type": "trigger",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "pay",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 412,
        "y": 352,
        "wires": [
            [
                "80aeebeadf693df1"
            ]
        ]
    },
    {
        "id": "80aeebeadf693df1",
        "type": "delay-gate",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "triggerPayload": "",
        "triggerPayloadType": "str",
        "delayDuration": "1",
        "delayUnits": "s",
        "openDuration": 5,
        "openUnits": "s",
        "closeGate": false,
        "x": 576,
        "y": 352,
        "wires": [
            [
                "1f28fefed50c4a3d"
            ]
        ]
    },
    {
        "id": "fb1ac80530b77e9b",
        "type": "inject",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"messageType\" : \"6F\"}",
        "payloadType": "json",
        "x": 220,
        "y": 418,
        "wires": [
            []
        ]
    },
    {
        "id": "04566afe04b23384",
        "type": "inject",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 290,
        "y": 1276,
        "wires": [
            [
                "527f85bc4c1b9e39"
            ]
        ]
    },
    {
        "id": "d9d56de0fc5dbd16",
        "type": "inject",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 290,
        "y": 1452,
        "wires": [
            [
                "4842d2cc760e8576"
            ]
        ]
    },
    {
        "id": "79d29eb408693494",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 374,
        "wires": [
            [
                "e324d6d9041191de"
            ]
        ]
    },
    {
        "id": "b197a19541a2eda8",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 418,
        "wires": [
            [
                "e324d6d9041191de"
            ]
        ]
    },
    {
        "id": "918d4fa567718816",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 462,
        "wires": [
            [
                "e324d6d9041191de"
            ]
        ]
    },
    {
        "id": "f4dabb105a4122c0",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 506,
        "wires": [
            [
                "e324d6d9041191de"
            ]
        ]
    },
    {
        "id": "7b0976bc120cc2e5",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 550,
        "wires": [
            [
                "e324d6d9041191de"
            ]
        ]
    },
    {
        "id": "fb6e1f36177a2782",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 814,
        "wires": [
            [
                "9fe64b496a286fab"
            ]
        ]
    },
    {
        "id": "3a2d16d186125a8f",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 858,
        "wires": [
            [
                "9fe64b496a286fab"
            ]
        ]
    },
    {
        "id": "7d70be6c444e4291",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 902,
        "wires": [
            [
                "9fe64b496a286fab"
            ]
        ]
    },
    {
        "id": "78b884f53224781d",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 946,
        "wires": [
            [
                "9fe64b496a286fab"
            ]
        ]
    },
    {
        "id": "088c22d4961ca35c",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 990,
        "wires": [
            [
                "9fe64b496a286fab"
            ]
        ]
    },
    {
        "id": "dae2d2d2aa3e8832",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 1034,
        "wires": [
            [
                "9fe64b496a286fab"
            ]
        ]
    },
    {
        "id": "79fab92914b63dc7",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 638,
        "wires": [
            [
                "e324d6d9041191de"
            ]
        ]
    },
    {
        "id": "77bd4d6ad0b522f0",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 594,
        "wires": [
            [
                "e324d6d9041191de"
            ]
        ]
    },
    {
        "id": "21a0de0cb92fe0fc",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 682,
        "wires": [
            [
                "e324d6d9041191de"
            ]
        ]
    },
    {
        "id": "526933b8b8b2643b",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 726,
        "wires": [
            [
                "9fe64b496a286fab"
            ]
        ]
    },
    {
        "id": "063ae2c4ed63b858",
        "type": "rbe",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1656,
        "y": 770,
        "wires": [
            [
                "9fe64b496a286fab"
            ]
        ]
    },
    {
        "id": "e4831e94c687391d",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 1 Flow Set",
        "func": "if (msg.payload) {\n\nstereo1 = global.get(\"stereo1\")\n\nglobal.set(\"stereo1\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4202,
        "wires": [
            []
        ]
    },
    {
        "id": "1169cb5e0a0dbd56",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 2 Flow Set",
        "func": "if (msg.payload) {\nstereo2 = global.get(\"stereo2\")\n\nglobal.set(\"stereo2\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4246,
        "wires": [
            []
        ]
    },
    {
        "id": "21f45c244ac2b89b",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 3 Flow Set",
        "func": "if (msg.payload) {\nstereo3 = global.get(\"stereo3\")\n\nglobal.set(\"stereo3\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4290,
        "wires": [
            []
        ]
    },
    {
        "id": "6e13391edf028ab7",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 4 Flow Set",
        "func": "if (msg.payload) {\nstereo4 = global.get(\"stereo4\")\n\nglobal.set(\"stereo4\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4334,
        "wires": [
            []
        ]
    },
    {
        "id": "152b45f2bce72e8f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 5 Flow Set",
        "func": "if (msg.payload) {\nstereo5 = global.get(\"stereo5\")\n\nglobal.set(\"stereo5\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4378,
        "wires": [
            []
        ]
    },
    {
        "id": "edaa9c0499ea2294",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 6 Flow Set",
        "func": "if (msg.payload) {\nstereo6 = global.get(\"stereo6\")\n\nglobal.set(\"stereo6\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4422,
        "wires": [
            []
        ]
    },
    {
        "id": "2903b23f0eee62bb",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 7 Flow Set",
        "func": "if (msg.payload) {\nstereo7 = global.get(\"stereo7\")\n\nglobal.set(\"stereo7\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4466,
        "wires": [
            []
        ]
    },
    {
        "id": "adc1a06a4bba4849",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 8 Flow Set",
        "func": "if (msg.payload) {\nstereo8 = global.get(\"stereo8\")\n\nglobal.set(\"stereo8\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4510,
        "wires": [
            []
        ]
    },
    {
        "id": "32f0877309873bec",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 9 Flow Set",
        "func": "if (msg.payload) {\nstereo9 = global.get(\"stereo9\")\n\nglobal.set(\"stereo9\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4554,
        "wires": [
            []
        ]
    },
    {
        "id": "b00494294495719e",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 10 Flow Set",
        "func": "if (msg.payload) {\nstereo10 = global.get(\"stereo10\")\n\nglobal.set(\"stereo10\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4598,
        "wires": [
            []
        ]
    },
    {
        "id": "3270d602bc8dbe30",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 11 Flow Set",
        "func": "if (msg.payload) {\nstereo11 = global.get(\"stereo11\")\n\nglobal.set(\"stereo11\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4642,
        "wires": [
            []
        ]
    },
    {
        "id": "ffe58ff9d9e5c70f",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 12 Flow Set",
        "func": "if (msg.payload) {\nstereo12 = global.get(\"stereo12\")\n\nglobal.set(\"stereo12\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4686,
        "wires": [
            []
        ]
    },
    {
        "id": "779fccc85fd2d864",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 13 Flow Set",
        "func": "if (msg.payload) {\nstereo13 = global.get(\"stereo13\")\n\nglobal.set(\"stereo13\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4730,
        "wires": [
            []
        ]
    },
    {
        "id": "f4e39feaea22c5dd",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 14 Flow Set",
        "func": "if (msg.payload) {\nstereo14 = global.get(\"stereo14\")\n\nglobal.set(\"stereo14\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4774,
        "wires": [
            []
        ]
    },
    {
        "id": "25a272372cedaa2e",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 15 Flow Set",
        "func": "if (msg.payload) {\nstereo15 = global.get(\"stereo15\")\n\nglobal.set(\"stereo15\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4818,
        "wires": [
            []
        ]
    },
    {
        "id": "6e38c902f69e3845",
        "type": "function",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "name": "Stereo 16 Flow Set",
        "func": "if (msg.payload) {\nstereo16 = global.get(\"stereo16\")\n\nglobal.set(\"stereo16\", msg.payload)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1718,
        "y": 4862,
        "wires": [
            []
        ]
    },
    {
        "id": "3be33b2cf98a851a",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "334def06aa2d0d6c",
        "name": "Stereo Switch 3",
        "order": 13,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch3\" name=\"toggle3\">\n        <label for=\"toggle3\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch3')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1466,
        "y": 4290,
        "wires": [
            [
                "21f45c244ac2b89b"
            ]
        ]
    },
    {
        "id": "ad604e969ddadf5b",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "334def06aa2d0d6c",
        "name": "Stereo Switch 4",
        "order": 16,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch4\" name=\"toggle4\">\n        <label for=\"toggle4\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch4')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1466,
        "y": 4334,
        "wires": [
            [
                "6e13391edf028ab7"
            ]
        ]
    },
    {
        "id": "83a6bb403f5d1b75",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "334def06aa2d0d6c",
        "name": "Stereo Switch 5",
        "order": 23,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch5\" name=\"toggle5\">\n        <label for=\"toggle5\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch5')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1466,
        "y": 4378,
        "wires": [
            [
                "152b45f2bce72e8f"
            ]
        ]
    },
    {
        "id": "c867d603b6831efc",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "334def06aa2d0d6c",
        "name": "Stereo Switch 6",
        "order": 26,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch6\" name=\"toggle6\">\n        <label for=\"toggle6\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch6')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1466,
        "y": 4422,
        "wires": [
            [
                "edaa9c0499ea2294"
            ]
        ]
    },
    {
        "id": "a0ae2ba1d96a5313",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "334def06aa2d0d6c",
        "name": "Stereo Switch 7",
        "order": 29,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch7\" name=\"toggle7\">\n        <label for=\"toggle7\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch7')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1466,
        "y": 4466,
        "wires": [
            [
                "2903b23f0eee62bb"
            ]
        ]
    },
    {
        "id": "2beccde4e485ac1d",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "334def06aa2d0d6c",
        "name": "Stereo Switch 8",
        "order": 32,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch8\" name=\"toggle8\">\n        <label for=\"toggle8\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch8')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1466,
        "y": 4510,
        "wires": [
            [
                "adc1a06a4bba4849"
            ]
        ]
    },
    {
        "id": "f5b993b88f589698",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "fd4dc9f7a2926ec7",
        "name": "Stereo Switch 9",
        "order": 7,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch9\" name=\"toggle9\">\n        <label for=\"toggle9\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<style>\n\n@import url('https://fonts.googleapis.com/css2?family=Pathway+Gothic+One&display=swap');\n\np {\n    text-align: center;\n    font-family: 'Pathway Gothic One';\n    transform: translateY(-30px);\n}\n\n.switch {\n    \n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transform: translateX(0px);\n    transform: translateY(-20px);\n\n}\n\n.switch input {\n    \n    height: 100%;\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    cursor: pointer;\n    z-index: 100;\n}\n\n\nlabel {\n\n    height: 40px;\n    width: 40px;\n    background-color: #363636;\n    border-radius: 0;\n    display: block;\n    box-shadow: \n      inset 0 0 20px rgba(0,0,0,0.2),\n      inset 0 0 5px -2px rgba(0,0,0,0.4);\n}\n\n.bulb {\n    height: 30px;\n    width: 30px;\n    background-color: #bcbcbc;\n    border-radius: 0;\n    position: relative;\n    opacity: 0.7;\n    display: block;\n    top: 20px;\n    left: 20px;\n    transform: translate(-50%, -50%);\n    transition: .3s;\n    box-shadow:\n        inset 0px 0px 1px 3px #bcbcbc,\n        inset 0px 0px 6px 8px #999999,\n        0px 20px 30px -10px rgba(0,0,0,0.4);\n}\n\n.bulb-center {\n    position: absolute;\n    display: block;\n    height: 8px;\n    width: 8px;\n    opacity: .4;\n    background-color: #005858;\n    border-radius: 50%;\n    transition: .3s;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: \n        inset 0 0 0 4px #007272;\n}\n\n.bulb-center::after {\n    content: \"\";\n    display: block;\n    height: 7px;\n    width: 7px;\n    background-color: #008b8b;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transition: .3s;\n    transform: translate(-50%, -50%);\n    box-shadow: 0 0 2px 4px #008b8b;\n}\n\n\n.switch input:checked ~ label .bulb {\n  background-color: #008b8b;\n  box-shadow:\n    inset 0 0 1px 3px #008b8b,\n    inset 0 0 6px 8px #007272,\n    0 20px 30px -10px rgba(0,0,0,0.4),\n    0 0 30px 50px rgba(0,165,165,.1);\n}\n\n.switch input:checked ~ label .bulb > .bulb-center {\n  background-color: #00d8d8;\n  box-shadow: \n    inset 0 0 0 4px #00bebe,\n    0 0 12px 10px #00a5a5,\n    0 0 20px 14px #005858;\n}\n\n.switch input:checked ~ label .bulb > .bulb-center::after {\n    background-color: #00d8d8;\n    box-shadow: 0 0 2px 4px #00a5a5;\n}\n\n</style>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch9')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1466,
        "y": 4554,
        "wires": [
            [
                "32f0877309873bec"
            ]
        ]
    },
    {
        "id": "ae63c4addf4c8e83",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "fd4dc9f7a2926ec7",
        "name": "Stereo Switch 10",
        "order": 10,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch10\" name=\"toggle10\">\n        <label for=\"toggle10\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch10')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1476,
        "y": 4598,
        "wires": [
            [
                "b00494294495719e"
            ]
        ]
    },
    {
        "id": "6b2048cf6a2b4593",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "fd4dc9f7a2926ec7",
        "name": "Stereo Switch 11",
        "order": 13,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch11\" name=\"toggle11\">\n        <label for=\"toggle11\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch11')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1476,
        "y": 4642,
        "wires": [
            [
                "3270d602bc8dbe30"
            ]
        ]
    },
    {
        "id": "083657fc5f7f0d37",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "fd4dc9f7a2926ec7",
        "name": "Stereo Switch 12",
        "order": 16,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch12\" name=\"toggle12\">\n        <label for=\"toggle12\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch12')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1476,
        "y": 4686,
        "wires": [
            [
                "ffe58ff9d9e5c70f"
            ]
        ]
    },
    {
        "id": "121c3dcd32be4024",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "fd4dc9f7a2926ec7",
        "name": "Stereo Switch 13",
        "order": 23,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch13\" name=\"toggle13\">\n        <label for=\"toggle13\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch13')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1476,
        "y": 4730,
        "wires": [
            [
                "779fccc85fd2d864"
            ]
        ]
    },
    {
        "id": "7979f43b71abcc48",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "fd4dc9f7a2926ec7",
        "name": "Stereo Switch 14",
        "order": 26,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch14\" name=\"toggle14\">\n        <label for=\"toggle14\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch14')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1476,
        "y": 4774,
        "wires": [
            [
                "f4e39feaea22c5dd"
            ]
        ]
    },
    {
        "id": "dc2b964aabbe83ae",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "fd4dc9f7a2926ec7",
        "name": "Stereo Switch 15",
        "order": 29,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch15\" name=\"toggle15\">\n        <label for=\"toggle15\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch15')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1476,
        "y": 4818,
        "wires": [
            [
                "25a272372cedaa2e"
            ]
        ]
    },
    {
        "id": "d9e7fde0627e109a",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "fd4dc9f7a2926ec7",
        "name": "Stereo Switch 16",
        "order": 32,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch16\" name=\"toggle16\">\n        <label for=\"toggle16\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch16')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1476,
        "y": 4862,
        "wires": [
            [
                "6e38c902f69e3845"
            ]
        ]
    },
    {
        "id": "51faab5bb671330c",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "334def06aa2d0d6c",
        "name": "Stereo Switch 1",
        "order": 7,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch\" name=\"toggle\">\n        <label for=\"toggle\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<style>\n\n@import url('https://fonts.googleapis.com/css2?family=Pathway+Gothic+One&display=swap');\n\np {\n    text-align: center;\n    font-family: 'Pathway Gothic One';\n    transform: translateY(-30px);\n}\n\n.switch {\n    \n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transform: translateX(0px);\n    transform: translateY(-20px);\n\n}\n\n.switch input {\n    \n    height: 100%;\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    cursor: pointer;\n    z-index: 100;\n}\n\n\nlabel {\n\n    height: 40px;\n    width: 40px;\n    background-color: #363636;\n    border-radius: 0;\n    display: block;\n    box-shadow: \n      inset 0 0 20px rgba(0,0,0,0.2),\n      inset 0 0 5px -2px rgba(0,0,0,0.4);\n}\n\n.bulb {\n    height: 30px;\n    width: 30px;\n    background-color: #bcbcbc;\n    border-radius: 0;\n    position: relative;\n    opacity: 0.7;\n    display: block;\n    top: 20px;\n    left: 20px;\n    transform: translate(-50%, -50%);\n    transition: .3s;\n    box-shadow:\n        inset 0px 0px 1px 3px #bcbcbc,\n        inset 0px 0px 6px 8px #999999,\n        0px 20px 30px -10px rgba(0,0,0,0.4);\n}\n\n.bulb-center {\n    position: absolute;\n    display: block;\n    height: 8px;\n    width: 8px;\n    opacity: .4;\n    background-color: #005858;\n    border-radius: 50%;\n    transition: .3s;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: \n        inset 0 0 0 4px #007272;\n}\n\n.bulb-center::after {\n    content: \"\";\n    display: block;\n    height: 7px;\n    width: 7px;\n    background-color: #008b8b;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transition: .3s;\n    transform: translate(-50%, -50%);\n    box-shadow: 0 0 2px 4px #008b8b;\n}\n\n\n.switch input:checked ~ label .bulb {\n  background-color: #008b8b;\n  box-shadow:\n    inset 0 0 1px 3px #008b8b,\n    inset 0 0 6px 8px #007272,\n    0 20px 30px -10px rgba(0,0,0,0.4),\n    0 0 30px 50px rgba(0,165,165,.1);\n}\n\n.switch input:checked ~ label .bulb > .bulb-center {\n  background-color: #00d8d8;\n  box-shadow: \n    inset 0 0 0 4px #00bebe,\n    0 0 12px 10px #00a5a5,\n    0 0 20px 14px #005858;\n}\n\n.switch input:checked ~ label .bulb > .bulb-center::after {\n    background-color: #00d8d8;\n    box-shadow: 0 0 2px 4px #00a5a5;\n}\n\n</style>\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1466,
        "y": 4202,
        "wires": [
            [
                "e4831e94c687391d"
            ]
        ]
    },
    {
        "id": "50efe732b0a3715b",
        "type": "ui_template",
        "z": "8b15064d8a9c0e4d",
        "d": true,
        "group": "334def06aa2d0d6c",
        "name": "Stereo Switch 2",
        "order": 10,
        "width": 1,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch2\" name=\"toggle2\">\n        <label for=\"toggle2\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch2')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1466,
        "y": 4246,
        "wires": [
            [
                "1169cb5e0a0dbd56"
            ]
        ]
    },
    {
        "id": "f7c135ea35b97ecc",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1698,
        "y": 330,
        "wires": []
    },
    {
        "id": "850ec98b28e771ad",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1698,
        "y": 286,
        "wires": []
    },
    {
        "id": "6ebf8beee7ce4dc6",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1698,
        "y": 242,
        "wires": []
    },
    {
        "id": "ecbd116f3735355f",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1698,
        "y": 198,
        "wires": []
    },
    {
        "id": "e4b69bdde439a776",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1698,
        "y": 154,
        "wires": []
    },
    {
        "id": "b1e7ead523662f30",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1698,
        "y": 110,
        "wires": []
    },
    {
        "id": "0cf0b9fbe823cf21",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1698,
        "y": 66,
        "wires": []
    },
    {
        "id": "d07fb6ae9fa626b3",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1698,
        "y": 22,
        "wires": []
    },
    {
        "id": "c3c9b9d5b1171029",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 638,
        "wires": []
    },
    {
        "id": "74113aee09a9d75b",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 682,
        "wires": []
    },
    {
        "id": "be4598d09be6b912",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 726,
        "wires": []
    },
    {
        "id": "e50300ecb10a185e",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 770,
        "wires": []
    },
    {
        "id": "ee40421241ad9c3f",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1830,
        "y": 814,
        "wires": []
    },
    {
        "id": "cde8b0e04a9b7bcd",
        "type": "debug",
        "z": "8b15064d8a9c0e4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1676,
        "y": 1166,
        "wires": []
    },
    {
        "id": "cb8d82e5ce9c1757",
        "type": "link in",
        "z": "8b15064d8a9c0e4d",
        "name": "UI Start In",
        "links": [
            "ee38b0bda74276e2"
        ],
        "x": 125,
        "y": 242,
        "wires": [
            [
                "31a1b98937300193"
            ]
        ]
    },
    {
        "id": "36d2dce80ffbf47a",
        "type": "link in",
        "z": "8b15064d8a9c0e4d",
        "name": "UI Start In",
        "links": [
            "ee38b0bda74276e2"
        ],
        "x": 125,
        "y": 352,
        "wires": [
            [
                "41f221d2b25940ce"
            ]
        ]
    },
    {
        "id": "0113e0b7438678a9",
        "type": "debug",
        "z": "182d4fca46673a29",
        "name": "Stereo Switch In",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 696,
        "y": 440,
        "wires": []
    },
    {
        "id": "fe8ed0530c7bd949",
        "type": "function",
        "z": "182d4fca46673a29",
        "name": "Hex => Binary Formatter",
        "func": "\nlet messages = new Array(8)\n\nlet stereoString = parseInt(msg.payload, 16).toString(2)\n\nlet stereoLinks = Array.from(stereoString)\n\nfor (let i = 0; i < stereoLinks.length; i++) {\n    messages[i] = {\"payload\" : stereoLinks[i]}\n}\n\nreturn messages;",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 352,
        "y": 572,
        "wires": [
            [
                "0113e0b7438678a9",
                "23784b8b0cdca8cd"
            ],
            [],
            [
                "38e38fa7cab102fc"
            ],
            [
                "cd3422fc9fe5eb4f"
            ],
            [
                "9cc4d8d8db0b51d6"
            ],
            [
                "064e0d57d69971b6"
            ],
            [
                "ecfdd4d7ec5a9d56"
            ],
            []
        ]
    },
    {
        "id": "88440d5745932186",
        "type": "debug",
        "z": "182d4fca46673a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 686,
        "y": 396,
        "wires": []
    },
    {
        "id": "38e38fa7cab102fc",
        "type": "debug",
        "z": "182d4fca46673a29",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 686,
        "y": 484,
        "wires": []
    },
    {
        "id": "cd3422fc9fe5eb4f",
        "type": "debug",
        "z": "182d4fca46673a29",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 686,
        "y": 528,
        "wires": []
    },
    {
        "id": "9cc4d8d8db0b51d6",
        "type": "debug",
        "z": "182d4fca46673a29",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 686,
        "y": 572,
        "wires": []
    },
    {
        "id": "064e0d57d69971b6",
        "type": "debug",
        "z": "182d4fca46673a29",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 686,
        "y": 616,
        "wires": []
    },
    {
        "id": "ecfdd4d7ec5a9d56",
        "type": "debug",
        "z": "182d4fca46673a29",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 686,
        "y": 660,
        "wires": []
    },
    {
        "id": "246d191e929bedd1",
        "type": "inject",
        "z": "182d4fca46673a29",
        "name": "Hex Message",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "00",
        "payloadType": "str",
        "x": 136,
        "y": 572,
        "wires": [
            [
                "fe8ed0530c7bd949"
            ]
        ]
    },
    {
        "id": "5c6d27bf228607ec",
        "type": "ui_template",
        "z": "182d4fca46673a29",
        "d": true,
        "group": "bfc283435227b1a2",
        "name": "",
        "order": 3,
        "width": 4,
        "height": 1,
        "format": "<script>\n(function(scope){\n scope.$watch('msg', function(msg) {\n console.log(\"Msg sent\")\n scope.send({payload: \"something\"});\n });\n})(scope);\n</script>\n\n\n{{msg}}\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 412,
        "y": 242,
        "wires": [
            [
                "ad39ab04aa31b44a"
            ]
        ]
    },
    {
        "id": "122960ce91886bb9",
        "type": "inject",
        "z": "182d4fca46673a29",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "Test",
        "payloadType": "date",
        "x": 146,
        "y": 242,
        "wires": [
            [
                "5c6d27bf228607ec"
            ]
        ]
    },
    {
        "id": "ad39ab04aa31b44a",
        "type": "debug",
        "z": "182d4fca46673a29",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 686,
        "y": 242,
        "wires": []
    },
    {
        "id": "3bd4185ea881b0b3",
        "type": "inject",
        "z": "182d4fca46673a29",
        "name": "Switch Injections",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 156,
        "y": 396,
        "wires": [
            [
                "23784b8b0cdca8cd"
            ]
        ]
    },
    {
        "id": "afd37bde445a272e",
        "type": "comment",
        "z": "182d4fca46673a29",
        "name": "Example Template",
        "info": "Used to demo node red msgs being changed and sent out by function inside UI template.",
        "x": 178,
        "y": 154,
        "wires": []
    },
    {
        "id": "9f8e110f0b13cc21",
        "type": "comment",
        "z": "182d4fca46673a29",
        "name": "Stereo Linking Comments",
        "info": "Not a bad idea to use a timestamp to inject messages into the Stereo Switch, so that the switch can use them to output a new payload. As long as those messages are being injected the value associated with checkbox on/off will continue to be sent out. \n\nPossibly set topic for actual stereo parameters coming in. \n\nLook at the appropriate amount of time to send messages. Possibly look into disabling messages when not in hub view mode. The proper hub status messages will still be able to change the switch state. Timestamp message is only necessary when user input needs to be updated.\n\n*Functionality\n\n    Hub messasge comes in and is decoded to binary, then each channel is split from the binary message. I.E. If the binary message is 01100101, channel 1/2 will receive a 0, and channel 3/4 will receive a 1. This will let channel 1/2 know they are unlinked and channel 3/4 are linked.\n    \n    This message is then passed through the stereo switch. The stereo switch also receives a regularly injected time stamp message. If the switch is manually set to stereo linked/unlinked, the injected message will pass through, and output the parameter set by the button itself. If the hub status packet shows that the stereo assignment is incorrect it will change the button to mimic the condition it needs to be set for. If the button is set to linked, and the hub message comes in as unlinked, then the button will change to unlinked.",
        "x": 198,
        "y": 484,
        "wires": []
    },
    {
        "id": "a8b469b0af6dc7c7",
        "type": "ui_template",
        "z": "182d4fca46673a29",
        "d": true,
        "group": "bfc283435227b1a2",
        "name": "Preload View",
        "order": 4,
        "width": 4,
        "height": 1,
        "format": "<h3>Testing template</h3>\n<p>{{msg.payload}}</p>\n<script>\n(function() {\n    var count = 0\n    function testit(msg,scope) {\n        count = count+1;\n        console.log(\"In testit \" + msg.payload + \"  count = \" + count);\n        scope.send({payload: \"from testit \" + msg.payload + \"  count = \" + count});\n    }\n    \n    (function(scope) {\n        scope.send({payload: \"preload\"});   // this gets sent when the view is opened in the browser\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n                testit(msg, scope);\n            }\n        });\n    })(scope);\n})();\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 422,
        "y": 836,
        "wires": [
            [
                "225c678e03726583"
            ]
        ]
    },
    {
        "id": "36401e171226fc56",
        "type": "inject",
        "z": "182d4fca46673a29",
        "name": "Injected Message",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "One",
        "payloadType": "str",
        "x": 146,
        "y": 836,
        "wires": [
            [
                "a8b469b0af6dc7c7"
            ]
        ]
    },
    {
        "id": "225c678e03726583",
        "type": "debug",
        "z": "182d4fca46673a29",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 686,
        "y": 836,
        "wires": []
    },
    {
        "id": "43b2603cedf4cde8",
        "type": "comment",
        "z": "182d4fca46673a29",
        "name": "Example Showing Msg on View",
        "info": "Template shows implementation for code that sends out a msg whenever the UI tab is opened. Can be used when implementing functionality for app registering that viewer has entered hubs and sources screen.",
        "x": 218,
        "y": 748,
        "wires": []
    },
    {
        "id": "8c222c33cf48dd9f",
        "type": "function",
        "z": "182d4fca46673a29",
        "name": "Binary => Hex Formatter",
        "func": "\nmsg.payload = parseInt(msg.payload, 2).toString(16)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 352,
        "y": 946,
        "wires": [
            [
                "f006bed3fde5a82a"
            ]
        ]
    },
    {
        "id": "f006bed3fde5a82a",
        "type": "debug",
        "z": "182d4fca46673a29",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 686,
        "y": 946,
        "wires": []
    },
    {
        "id": "23784b8b0cdca8cd",
        "type": "ui_template",
        "z": "182d4fca46673a29",
        "d": true,
        "group": "bfc283435227b1a2",
        "name": "Stereo Switch Edit",
        "order": 5,
        "width": 4,
        "height": 1,
        "format": "\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"stereoSwitch\" name=\"toggle\" onclick=\"switchFunction()\">\n        <label for=\"toggle\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n\n<style>\n.switch {\n    margin: auto;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n}\n\n.switch input {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    z-index: 100;\n    cursor: pointer;\n}\n\nlabel {\n    height: 100px;\n    width: 100px;\n    background-color: #363636;\n    border-radius: 0;\n    display: block;\n    box-shadow: \n      inset 0 0 20px rgba(0,0,0,0.2),\n      inset 0 0 5px -2px rgba(0,0,0,0.4);\n}\n\n.bulb {\n    height: 80px;\n    width: 80px;\n    background-color: #bcbcbc;\n    border-radius: 0;\n    position: relative;\n    opacity: 0.7;\n    display: block;\n    top: 50px;\n    left: 50px;\n    transform: translate(-50%, -50%);\n    transition: .3s;\n    box-shadow:\n        inset 0px 0px 1px 3px #bcbcbc,\n        inset 0px 0px 6px 8px #999999,\n        0px 20px 30px -10px rgba(0,0,0,0.4);\n}\n\n.bulb-center {\n    position: absolute;\n    display: block;\n    height: 36px;\n    width: 36px;\n    opacity: .4;\n    background-color: #005858;\n    border-radius: 50%;\n    transition: .3s;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: \n        inset 0 0 0 4px #007272;\n}\n\n.bulb-center::after {\n    content: \"\";\n    display: block;\n    height: 14px;\n    width: 14px;\n    background-color: #008b8b;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transition: .3s;\n    transform: translate(-50%, -50%);\n    box-shadow: 0 0 2px 4px #008b8b;\n}\n\n.switch input:checked ~ label .bulb {\n  background-color: #008b8b;\n  box-shadow:\n    inset 0 0 1px 3px #008b8b,\n    inset 0 0 6px 8px #007272,\n    0 20px 30px -10px rgba(0,0,0,0.4),\n    0 0 30px 50px rgba(0,165,165,.1);\n}\n\n.switch input:checked ~ label .bulb > .bulb-center {\n  background-color: #00d8d8;\n  box-shadow: \n    inset 0 0 0 4px #00bebe,\n    0 0 12px 10px #00a5a5,\n    0 0 20px 14px #005858;\n}\n\n.switch input:checked ~ label .bulb > .bulb-center::after {\n    background-color: #00d8d8;\n    box-shadow: 0 0 2px 4px #00a5a5;\n}\n\n</style>\n\n<script>\n    (function(scope) {\n        var checkBox = document.getElementById(\"stereoSwitch\");\n        scope.$watch('msg', function(msg) {\n            \n                if (msg.payload == \"1\") {\n                    checkBox.checked = true\n                }\n                if (msg.payload == \"0\") {\n                    checkBox.checked = false\n                }\n            \n            //function switchFunction() {\n                if (checkBox.checked == true) {\n                scope.send({payload: \"1\"});\n                \n                } else {\n                scope.send({payload: \"0\"})\n                }\n            //}\n            \n        });\n    })(scope);\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 442,
        "y": 396,
        "wires": [
            [
                "88440d5745932186"
            ]
        ]
    },
    {
        "id": "08ef90d41ebcc387",
        "type": "ui_template",
        "z": "182d4fca46673a29",
        "d": true,
        "group": "bfc283435227b1a2",
        "name": "Stereo Switch 1",
        "order": 6,
        "width": 4,
        "height": 2,
        "format": "<h3>Channel 1/2</h3>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"stereoSwitch\" name=\"toggle\" onclick=\"switchFunction()\">\n        <label for=\"toggle\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n\n<style>\nh3 {\n    text-align: center;\n}\n.switch {\n    margin: auto;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n}\n\n.switch input {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    z-index: 100;\n    cursor: pointer;\n}\n\nlabel {\n    height: 100px;\n    width: 100px;\n    background-color: #363636;\n    border-radius: 0;\n    display: block;\n    box-shadow: \n      inset 0 0 20px rgba(0,0,0,0.2),\n      inset 0 0 5px -2px rgba(0,0,0,0.4);\n}\n\n.bulb {\n    height: 80px;\n    width: 80px;\n    background-color: #bcbcbc;\n    border-radius: 0;\n    position: relative;\n    opacity: 0.7;\n    display: block;\n    top: 50px;\n    left: 50px;\n    transform: translate(-50%, -50%);\n    transition: .3s;\n    box-shadow:\n        inset 0px 0px 1px 3px #bcbcbc,\n        inset 0px 0px 6px 8px #999999,\n        0px 20px 30px -10px rgba(0,0,0,0.4);\n}\n\n.bulb-center {\n    position: absolute;\n    display: block;\n    height: 36px;\n    width: 36px;\n    opacity: .4;\n    background-color: #005858;\n    border-radius: 50%;\n    transition: .3s;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: \n        inset 0 0 0 4px #007272;\n}\n\n.bulb-center::after {\n    content: \"\";\n    display: block;\n    height: 14px;\n    width: 14px;\n    background-color: #008b8b;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transition: .3s;\n    transform: translate(-50%, -50%);\n    box-shadow: 0 0 2px 4px #008b8b;\n}\n\n.switch input:checked ~ label .bulb {\n  background-color: #008b8b;\n  box-shadow:\n    inset 0 0 1px 3px #008b8b,\n    inset 0 0 6px 8px #007272,\n    0 20px 30px -10px rgba(0,0,0,0.4),\n    0 0 30px 50px rgba(0,165,165,.1);\n}\n\n.switch input:checked ~ label .bulb > .bulb-center {\n  background-color: #00d8d8;\n  box-shadow: \n    inset 0 0 0 4px #00bebe,\n    0 0 12px 10px #00a5a5,\n    0 0 20px 14px #005858;\n}\n\n.switch input:checked ~ label .bulb > .bulb-center::after {\n    background-color: #00d8d8;\n    box-shadow: 0 0 2px 4px #00a5a5;\n}\n\n</style>\n\n<script>\n    (function(scope) {\n        var checkBox = document.getElementById(\"stereoSwitch\");\n        scope.$watch('msg', function(msg) {\n            \n            if (checkBox.checked == true) {\n                scope.send({payload: \"1\"});\n            } else {\n                scope.send({payload: \"0\"})\n            }\n\n                        \n            if (msg.payload == \"1\") {\n                checkBox.checked = true\n            }\n            if (msg.payload == \"0\") {\n                checkBox.checked = false\n            }\n            \n            \n        });\n    })(scope);\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 432,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "04c70e6f5b1a9258",
        "type": "ui_template",
        "z": "182d4fca46673a29",
        "d": true,
        "group": "bfc283435227b1a2",
        "name": "Stereo Switch 1",
        "order": 9,
        "width": 4,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch\">\n        <label for=\"inputSwitch\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n<style>\n\n@import url('https://fonts.googleapis.com/css2?family=Pathway+Gothic+One&display=swap');\n\np {\n    text-align: center;\n    font-family: 'Pathway Gothic One';\n\n}\n.switch {\n    margin: auto;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n}\n\n.switch input {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    z-index: 100;\n    cursor: pointer;\n}\n\nlabel {\n    height: 40px;\n    width: 40px;\n    background-color: #363636;\n    border-radius: 0;\n    display: block;\n    box-shadow: \n      inset 0 0 20px rgba(0,0,0,0.2),\n      inset 0 0 5px -2px rgba(0,0,0,0.4);\n}\n\n.bulb {\n    height: 30px;\n    width: 30px;\n    background-color: #bcbcbc;\n    border-radius: 0;\n    position: relative;\n    opacity: 0.7;\n    display: block;\n    top: 20px;\n    left: 20px;\n    transform: translate(-50%, -50%);\n    transition: .3s;\n    box-shadow:\n        inset 0px 0px 1px 3px #bcbcbc,\n        inset 0px 0px 6px 8px #999999,\n        0px 20px 30px -10px rgba(0,0,0,0.4);\n}\n\n.bulb-center {\n    position: absolute;\n    display: block;\n    height: 8px;\n    width: 8px;\n    opacity: .4;\n    background-color: #005858;\n    border-radius: 50%;\n    transition: .3s;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: \n        inset 0 0 0 4px #007272;\n}\n\n.bulb-center::after {\n    content: \"\";\n    display: block;\n    height: 7px;\n    width: 7px;\n    background-color: #008b8b;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transition: .3s;\n    transform: translate(-50%, -50%);\n    box-shadow: 0 0 2px 4px #008b8b;\n}\n\n.switch input:checked ~ label .bulb {\n  background-color: #008b8b;\n  box-shadow:\n    inset 0 0 1px 3px #008b8b,\n    inset 0 0 6px 8px #007272,\n    0 20px 30px -10px rgba(0,0,0,0.4),\n    0 0 30px 50px rgba(0,165,165,.1);\n}\n\n.switch input:checked ~ label .bulb > .bulb-center {\n  background-color: #00d8d8;\n  box-shadow: \n    inset 0 0 0 4px #00bebe,\n    0 0 12px 10px #00a5a5,\n    0 0 20px 14px #005858;\n}\n\n.switch input:checked ~ label .bulb > .bulb-center::after {\n    background-color: #00d8d8;\n    box-shadow: 0 0 2px 4px #00a5a5;\n}\n\n</style>\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            //oldValue = [oldVal, \"oldVal\"]\n            //newValue = [newVal, \"newVal\"]\n            if (!oldVal) {\n        scope.send({payload: newVal})\n        }\n        \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n        \n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n                }\n            }\n        }\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 432,
        "y": 1166,
        "wires": [
            []
        ]
    },
    {
        "id": "0a1f2a39f62aaeb7",
        "type": "ui_template",
        "z": "182d4fca46673a29",
        "d": true,
        "group": "bfc283435227b1a2",
        "name": "Stereo Switch 1",
        "order": 10,
        "width": 4,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"stereoSwitch\" name=\"toggle\">\n        <label for=\"toggle\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n<div class=\"hiddenBox\" id=\"hiddenStereoBox\">\n    <input type=\"checkbox\" id=\"hiddenCheckbox\">\n        <label for=\"hiddenCheckbox\" class=\"hiddenlabel\" id=\"hiddenLabelBox\">\n                    <i class=\"bulb2\">\n                <span class=\"bulb-center2\"></span>\n            </i>  \n        </label>\n</div>\n</div>\n<style>\n\n@import url('https://fonts.googleapis.com/css2?family=Pathway+Gothic+One&display=swap');\n\np {\n    text-align: center;\n    font-family: 'Pathway Gothic One';\n    transform: translateY(-30px);\n}\n\n.switch {\n    \n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transform: translateX(0px);\n    transform: translateY(-25px);\n\n}\n\n.switch input {\n    \n    height: 0;\n    width: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    cursor: pointer;\n    z-index: 0;\n}\n\n\nlabel {\n\n    height: 40px;\n    width: 40px;\n    background-color: #363636;\n    border-radius: 0;\n    display: block;\n    box-shadow: \n      inset 0 0 20px rgba(0,0,0,0.2),\n      inset 0 0 5px -2px rgba(0,0,0,0.4);\n}\n\n.bulb {\n    height: 30px;\n    width: 30px;\n    background-color: #bcbcbc;\n    border-radius: 0;\n    position: relative;\n    opacity: 0.7;\n    display: block;\n    top: 20px;\n    left: 20px;\n    transform: translate(-50%, -50%);\n    transition: .3s;\n    box-shadow:\n        inset 0px 0px 1px 3px #bcbcbc,\n        inset 0px 0px 6px 8px #999999,\n        0px 20px 30px -10px rgba(0,0,0,0.4);\n}\n\n.bulb-center {\n    position: absolute;\n    display: block;\n    height: 8px;\n    width: 8px;\n    opacity: .4;\n    background-color: #005858;\n    border-radius: 50%;\n    transition: .3s;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: \n        inset 0 0 0 4px #007272;\n}\n\n.bulb-center::after {\n    content: \"\";\n    display: block;\n    height: 7px;\n    width: 7px;\n    background-color: #008b8b;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transition: .3s;\n    transform: translate(-50%, -50%);\n    box-shadow: 0 0 2px 4px #008b8b;\n}\n\n\n.switch input:checked ~ label .bulb {\n  background-color: #008b8b;\n  box-shadow:\n    inset 0 0 1px 3px #008b8b,\n    inset 0 0 6px 8px #007272,\n    0 20px 30px -10px rgba(0,0,0,0.4),\n    0 0 30px 50px rgba(0,165,165,.1);\n}\n\n.switch input:checked ~ label .bulb > .bulb-center {\n  background-color: #00d8d8;\n  box-shadow: \n    inset 0 0 0 4px #00bebe,\n    0 0 12px 10px #00a5a5,\n    0 0 20px 14px #005858;\n}\n\n.switch input:checked ~ label .bulb > .bulb-center::after {\n    background-color: #00d8d8;\n    box-shadow: 0 0 2px 4px #00a5a5;\n}\n\n.hiddenBox {\n    \n    position: absolute;\n    display: flex;\n    transform: translateX(0px);\n    transform: translateY(-25px);\n    \n}\n\n#hiddenStereoBox {\n\n}\n\n.hiddenBox input {\n    \n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    position: absolute;\n    transform: translateX(0px);\n    transform: translateY(0px);\n    opacity: 0;\n    z-index: 100;\n    cursor: pointer;\n\n}\n\n.hiddenlabel {\n\n    height: 40px;\n    width: 40px;\n    background-color: #363636;\n    border-radius: 0;\n    display: block;\n    box-shadow: \n      inset 0 0 20px rgba(0,0,0,0.2),\n      inset 0 0 5px -2px rgba(0,0,0,0.4);\n    \n}\n\n.bulb2 {\n\n    height: 30px;\n    width: 30px;\n    background-color: #00d8d8;\n    border-radius: 0;\n    position: relative;\n    opacity: 0.7;\n    display: block;\n    top: 20px;\n    left: 20px;\n    transform: translate(-50%, -50%);\n    box-shadow:\n    inset 0 0 1px 3px #008b8b,\n    inset 0 0 6px 8px #007272,\n    0 20px 30px -10px rgba(0,0,0,0.4),\n    0 0 30px 50px rgba(0,165,165,.1);\n    \n}\n\n}\n\n.bulb-center2 {\n\n    position: absolute;\n    display: block;\n    height: 8px;\n    width: 8px;\n    opacity: .4;\n    background-color: #00d8d8;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: \n    inset 0 0 0 4px #00bebe,\n    0 0 12px 10px #00a5a5,\n    0 0 20px 14px #005858;\n    \n}\n\n.bulb-center2::after {\n\n    content: \"\";\n    display: block;\n    height: 7px;\n    width: 7px;\n    background-color: #008b8b;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: 0 0 2px 4px #00a5a5;\n    \n}\n\n.hiddenBox input:not(:checked) + .hiddenlabel {\n    opacity: 0;\n}\n\n.hiddenBox input:checked + .hiddenlabel {\n    opacity: 1;\n}\n\n</style>\n<script>\n\n//var stereoInputControl = document.getElementById(\"hiddenCheckBox\").addEventListener(\"click\", resetFunction)\n//var stereoBox = document.getElementById(\"hiddenCheckBox\")\n\n/*    \n    function resetFunction() {\n        if (stereoBox.checked == true) {\n            stereoInput.style.opacity = \"0\"\n        }\n        if (stereoBox.checked == false) {\n            stereoInput.style.opacity = \"1\"\n        }\n    }\n    document.getElementById(\"hiddenStereoBox\").addEventListener(\"click\", resetFunction);\n            \n    function resetFunction() {\n        scope.send({\"payload\": \"1\"});\n    }\n*/\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            if (!oldVal) {\n            scope.send({payload: newVal})\n            }\n        var compValue = 2\n        \n        const checkbox = document.getElementById('stereoSwitch')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n<!--\n<script>\n\n    (function(scope) {\n        var checkBox = document.getElementById(\"stereoSwitch\");\n        \n        document.getElementById(\"stereoSwitch\").addEventListener(\"click\", resetFunction);\n        \n        scope.$watch('msg', function(msg) {\n                        \n            if (msg.payload == \"1\" && msg.topic === \"trigger\") {\n                checkBox.checked = true\n            }\n            if (msg.payload == \"0\" && msg.topic === \"trigger\") {\n                checkBox.checked = false\n            }\n        \n        if (checkBox.checked == true) {\n            scope.send({payload: \"1\"});\n        }\n        if (checkBox.checked == false) {\n            scope.send({payload: \"0\"})\n        }\n        \n        function resetFunction() {\n            scope.send(\"reset\": \"1\")\n        }\n            \n        });\n    })(scope);\n\n</script>\n-->",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 432,
        "y": 1254,
        "wires": [
            []
        ]
    },
    {
        "id": "55dbc6087b896c2b",
        "type": "ui_template",
        "z": "182d4fca46673a29",
        "d": true,
        "group": "bfc283435227b1a2",
        "name": "Stereo Switch 1",
        "order": 8,
        "width": 4,
        "height": 2,
        "format": "\n<div style=\"width: 40px; margin: auto\">\n<p>LINK</p>\n<div class=\"switch\">\n    <input type=\"checkbox\" id=\"inputSwitch\" name=\"toggle\">\n        <label for=\"toggle\">\n            <i class=\"bulb\">\n                <span class=\"bulb-center\"></span>\n            </i>    \n        </label>\n</div>\n</div>\n<style>\n\n@import url('https://fonts.googleapis.com/css2?family=Pathway+Gothic+One&display=swap');\n\np {\n    text-align: center;\n    font-family: 'Pathway Gothic One';\n    transform: translateY(-30px);\n}\n\n.switch {\n    \n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transform: translateX(0px);\n    transform: translateY(-25px);\n\n}\n\n.switch input {\n    \n    height: 100%;\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    cursor: pointer;\n    z-index: 100;\n}\n\n\nlabel {\n\n    height: 40px;\n    width: 40px;\n    background-color: #363636;\n    border-radius: 0;\n    display: block;\n    box-shadow: \n      inset 0 0 20px rgba(0,0,0,0.2),\n      inset 0 0 5px -2px rgba(0,0,0,0.4);\n}\n\n.bulb {\n    height: 30px;\n    width: 30px;\n    background-color: #bcbcbc;\n    border-radius: 0;\n    position: relative;\n    opacity: 0.7;\n    display: block;\n    top: 20px;\n    left: 20px;\n    transform: translate(-50%, -50%);\n    transition: .3s;\n    box-shadow:\n        inset 0px 0px 1px 3px #bcbcbc,\n        inset 0px 0px 6px 8px #999999,\n        0px 20px 30px -10px rgba(0,0,0,0.4);\n}\n\n.bulb-center {\n    position: absolute;\n    display: block;\n    height: 8px;\n    width: 8px;\n    opacity: .4;\n    background-color: #005858;\n    border-radius: 50%;\n    transition: .3s;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: \n        inset 0 0 0 4px #007272;\n}\n\n.bulb-center::after {\n    content: \"\";\n    display: block;\n    height: 7px;\n    width: 7px;\n    background-color: #008b8b;\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transition: .3s;\n    transform: translate(-50%, -50%);\n    box-shadow: 0 0 2px 4px #008b8b;\n}\n\n\n.switch input:checked ~ label .bulb {\n  background-color: #008b8b;\n  box-shadow:\n    inset 0 0 1px 3px #008b8b,\n    inset 0 0 6px 8px #007272,\n    0 20px 30px -10px rgba(0,0,0,0.4),\n    0 0 30px 50px rgba(0,165,165,.1);\n}\n\n.switch input:checked ~ label .bulb > .bulb-center {\n  background-color: #00d8d8;\n  box-shadow: \n    inset 0 0 0 4px #00bebe,\n    0 0 12px 10px #00a5a5,\n    0 0 20px 14px #005858;\n}\n\n.switch input:checked ~ label .bulb > .bulb-center::after {\n    background-color: #00d8d8;\n    box-shadow: 0 0 2px 4px #00a5a5;\n}\n\n</style>\n<script>\n\n    (function(scope) {\n\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            \n        if (!oldVal) {\n            scope.send({payload: newVal})\n        }\n            \n        var compValue = 2\n        \n        const checkbox = document.getElementById('inputSwitch')\n        \n        checkbox.addEventListener('click', (event) => {\n            if (event.currentTarget.checked) {\n                compValue = 1\n                scope.send({payload: \"1\"});\n            } else {\n                compValue = 0\n                scope.send({payload: \"0\"});\n            }\n        })\n        \n        if (compValue == 1 || compValue == 0) {\n            for (let i = 0; i < 1; i++) {\n                if (newVal) {\n                    if (compValue == 0) {\n                        compValue = 1\n                    }\n                    newVal = 2\n                    compValue = compValue + i\n                }\n            }\n        }\n        \n        if (compValue == 2) {\n            if (newVal) {\n                if (newVal == \"1\") {\n                    checkbox.checked = true\n                }\n                if (newVal == \"0\") {\n                    checkbox.checked = false\n                }\n            }\n        }\n        });\n    })(scope);\n    \n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 432,
        "y": 1210,
        "wires": [
            []
        ]
    },
    {
        "id": "804f1bf68911fc5e",
        "type": "function",
        "z": "182d4fca46673a29",
        "d": true,
        "name": "",
        "func": "\nlet newMsg = {\"payload\": 0}\n\nnewMsg.payload = (msg.payload[0] * 9 / 5 + 32)\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 412,
        "y": 1386,
        "wires": [
            []
        ]
    },
    {
        "id": "6f90fa9b9e26b38e",
        "type": "ui_template",
        "z": "182d4fca46673a29",
        "d": true,
        "group": "bfc283435227b1a2",
        "name": "Meter Group Styling",
        "order": 7,
        "width": 4,
        "height": 1,
        "format": "<style>\n    .metering {\n        border-radius: 5px;\n        background-image: url(\"https://www.cpsresources.com/wp-content/uploads/2014/12/9436-Matte-Woodgrain-Matte.jpg\"); \n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 452,
        "y": 1430,
        "wires": [
            []
        ]
    },
    {
        "id": "3b7a92995dca81c5",
        "type": "function",
        "z": "182d4fca46673a29",
        "d": true,
        "name": "Message to Temp",
        "func": "\n\nlet outputValue = (msg.payload[5] + 273.15)\n\nlet newMsg = {}\n\nnewMsg.payload = outputValue\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 442,
        "y": 1474,
        "wires": [
            []
        ]
    },
    {
        "id": "a0820c815cd4f068",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Poll Mixers",
        "func": "\nlet padByte = \"00\"\n\nlet pollPad = padByte.repeat(42)\n\nmsg.payload[\"packetData\"] = pollPad\n\nreturn msg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1038,
        "y": 176,
        "wires": [
            [
                "4032bcd669be1c5e"
            ]
        ]
    },
    {
        "id": "4032bcd669be1c5e",
        "type": "template",
        "z": "259aabf780b92836",
        "name": "Poll Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.mixerID}}{{payload.messageType}}0102{{payload.packetData}}{{payload.assignments}}\"",
        "output": "json",
        "x": 1214,
        "y": 176,
        "wires": [
            [
                "89322260e59cdd46"
            ]
        ]
    },
    {
        "id": "89322260e59cdd46",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 176,
        "wires": [
            [
                "834aefad664216cd",
                "d093b01efefc7d0c"
            ]
        ]
    },
    {
        "id": "d6c6653c6a3ff13a",
        "type": "link in",
        "z": "259aabf780b92836",
        "name": "Mixer Level Messages In",
        "links": [
            "11f569ed135185e2"
        ],
        "x": 220,
        "y": 2200,
        "wires": [
            [
                "65de40908b816821"
            ]
        ],
        "l": true
    },
    {
        "id": "834aefad664216cd",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Mixer Poll Out",
        "mode": "link",
        "links": [
            "21d1fbb1ecd3121d"
        ],
        "x": 1598,
        "y": 176,
        "wires": [],
        "l": true
    },
    {
        "id": "37a51b0eb0830286",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Mixer Parameter Messages Out",
        "mode": "link",
        "links": [
            "6a6ecf3586193565"
        ],
        "x": 2352,
        "y": 4312,
        "wires": [],
        "l": true
    },
    {
        "id": "0b444929c4f722f6",
        "type": "link in",
        "z": "259aabf780b92836",
        "name": "Mixer Channel Messages In",
        "links": [
            "76c228fef22f2107"
        ],
        "x": 230,
        "y": 1166,
        "wires": [
            [
                "c8b9ba6239347fb0",
                "c4dc8687f5f09cd8"
            ]
        ],
        "l": true
    },
    {
        "id": "5967e5ddd0e96d15",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Channel Assignment Routing",
        "func": "\nlet messages = []\n\nfor (let i = 4; i < 20; i++) {\n    messages.push({\"payload\": msg.payload[i]})\n}\n\nreturn messages;\n\n\n\n",
        "outputs": 16,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 582,
        "y": 1210,
        "wires": [
            [
                "460ec377b27af76a",
                "116d29984473d853"
            ],
            [
                "61aed6978e41339d",
                "bb2af38afe39d1ef"
            ],
            [
                "bf8e4703acb4e2cc",
                "43ff605cd982e2ec"
            ],
            [
                "d8fbd11e5d236159",
                "b3daabb6517da319"
            ],
            [
                "0b63349bbbacbd3b",
                "38581947b1a71bc0"
            ],
            [
                "344e4045158ddfb4",
                "f84a2bd2858c0bf3"
            ],
            [
                "0c9b5ec955b22069",
                "cea36cb90b8264ad"
            ],
            [
                "3847f83d82c646cf",
                "77b4b4adbf29e64b"
            ],
            [
                "e2402b9d02ffb1a6",
                "fb703cb62019c339"
            ],
            [
                "5b73e18ac95e4c59",
                "fb7dbdc444633bd4"
            ],
            [
                "8c580ca8be9bf882",
                "0e1aef1419bb13dc"
            ],
            [
                "7d888d5c60835230",
                "935a0a3718840382"
            ],
            [
                "201419f111266cba",
                "96562e1ba7f6af5a"
            ],
            [
                "9c6fc5a2b944cb52",
                "f364f0dd54a65f30"
            ],
            [
                "616ac1a6f08624d5",
                "45d767a975d8cfa2"
            ],
            [
                "787091cec9165462",
                "de52f168ccdf7d3d"
            ]
        ]
    },
    {
        "id": "c8b9ba6239347fb0",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Check for Main Channel Assignments",
        "func": "\nvar newMsg\n\nif (msg.payload[3] == 0x00) {\n    \n    newMsg = msg\n}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1210,
        "wires": [
            [
                "5967e5ddd0e96d15"
            ]
        ]
    },
    {
        "id": "61aed6978e41339d",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name2\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 638,
        "wires": [
            [
                "a994c74e46400714"
            ]
        ]
    },
    {
        "id": "48dab0a410387fb4",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "stereo9",
        "payloadType": "global",
        "x": 2138,
        "y": 1694,
        "wires": [
            [
                "701813cfd8b1f7ee"
            ]
        ]
    },
    {
        "id": "354f923eafc6b961",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName2",
        "payloadType": "global",
        "x": 2158,
        "y": 1738,
        "wires": [
            [
                "7b024a066c68587f"
            ]
        ]
    },
    {
        "id": "a42720e0ab03e97a",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName3",
        "payloadType": "global",
        "x": 2158,
        "y": 1782,
        "wires": [
            []
        ]
    },
    {
        "id": "8146e5d734498344",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName4",
        "payloadType": "global",
        "x": 2158,
        "y": 1826,
        "wires": [
            []
        ]
    },
    {
        "id": "218fdf3dfc8a1bfd",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName5",
        "payloadType": "global",
        "x": 2158,
        "y": 1870,
        "wires": [
            []
        ]
    },
    {
        "id": "d13f9f9d977f6b26",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName6",
        "payloadType": "global",
        "x": 2158,
        "y": 1914,
        "wires": [
            []
        ]
    },
    {
        "id": "c9014cfe8dfc13c9",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName7",
        "payloadType": "global",
        "x": 2158,
        "y": 1958,
        "wires": [
            []
        ]
    },
    {
        "id": "1930f1553d17c759",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName8",
        "payloadType": "global",
        "x": 2158,
        "y": 2002,
        "wires": [
            []
        ]
    },
    {
        "id": "7607afa289bf65ab",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName9",
        "payloadType": "global",
        "x": 2158,
        "y": 2046,
        "wires": [
            []
        ]
    },
    {
        "id": "a23201b07fb7b2b6",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName10",
        "payloadType": "global",
        "x": 2158,
        "y": 2090,
        "wires": [
            []
        ]
    },
    {
        "id": "da7582da2f2c2659",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName11",
        "payloadType": "global",
        "x": 2158,
        "y": 2134,
        "wires": [
            []
        ]
    },
    {
        "id": "6152cfc6160c0fd9",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName12",
        "payloadType": "global",
        "x": 2158,
        "y": 2178,
        "wires": [
            []
        ]
    },
    {
        "id": "1525a3094230add2",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName13",
        "payloadType": "global",
        "x": 2158,
        "y": 2222,
        "wires": [
            []
        ]
    },
    {
        "id": "64dd105a4509fe99",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName14",
        "payloadType": "global",
        "x": 2158,
        "y": 2266,
        "wires": [
            []
        ]
    },
    {
        "id": "ab3b861ba291283f",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName15",
        "payloadType": "global",
        "x": 2158,
        "y": 2310,
        "wires": [
            []
        ]
    },
    {
        "id": "9cb914c9143709c2",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "asciiName16",
        "payloadType": "global",
        "x": 2158,
        "y": 2354,
        "wires": [
            []
        ]
    },
    {
        "id": "701813cfd8b1f7ee",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2352,
        "y": 1694,
        "wires": []
    },
    {
        "id": "460ec377b27af76a",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 1 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\n\nvar knobSetting1 = flow.get(\"knobSetting1\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting1\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting2\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 550,
        "wires": [
            [
                "a149fbf79fc952c6"
            ]
        ]
    },
    {
        "id": "bb2af38afe39d1ef",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 2 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting2 = flow.get(\"knobSetting2\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting2\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting2\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 594,
        "wires": [
            [
                "a149fbf79fc952c6"
            ]
        ]
    },
    {
        "id": "2b34c7857f4775d1",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1544,
        "y": 572,
        "wires": []
    },
    {
        "id": "bf8e4703acb4e2cc",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 3 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting3 = flow.get(\"knobSetting3\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting3\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting3\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 726,
        "wires": [
            [
                "c43dc76f0d6c4db6"
            ]
        ]
    },
    {
        "id": "616ac1a6f08624d5",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 15 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting15 = flow.get(\"knobSetting15\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting15\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting15\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1782,
        "wires": [
            [
                "103496887551e0eb"
            ]
        ]
    },
    {
        "id": "d8fbd11e5d236159",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 4 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting4 = flow.get(\"knobSetting4\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting4\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting4\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 770,
        "wires": [
            [
                "c43dc76f0d6c4db6"
            ]
        ]
    },
    {
        "id": "0b63349bbbacbd3b",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 5 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting5 = flow.get(\"knobSetting5\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting5\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting5\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 902,
        "wires": [
            [
                "dae9aaa5eb34a33e"
            ]
        ]
    },
    {
        "id": "344e4045158ddfb4",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 6 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting6 = flow.get(\"knobSetting6\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting6\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting6\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 946,
        "wires": [
            [
                "dae9aaa5eb34a33e"
            ]
        ]
    },
    {
        "id": "0c9b5ec955b22069",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 7 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting7 = flow.get(\"knobSetting7\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting7\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting7\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 1078,
        "wires": [
            [
                "27c7528451afb195"
            ]
        ]
    },
    {
        "id": "3847f83d82c646cf",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 8 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting8 = flow.get(\"knobSetting8\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting8\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting8\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 1122,
        "wires": [
            [
                "27c7528451afb195"
            ]
        ]
    },
    {
        "id": "e2402b9d02ffb1a6",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 9 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting9 = flow.get(\"knobSetting9\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting9\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting9\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 1254,
        "wires": [
            [
                "033792581749a5a3"
            ]
        ]
    },
    {
        "id": "5b73e18ac95e4c59",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 10 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting10 = flow.get(\"knobSetting10\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting10\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting10\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1298,
        "wires": [
            [
                "033792581749a5a3"
            ]
        ]
    },
    {
        "id": "9c6fc5a2b944cb52",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 14 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting14 = flow.get(\"knobSetting14\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting14\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting14\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1650,
        "wires": [
            [
                "90dc5cac5052e2d4"
            ]
        ]
    },
    {
        "id": "787091cec9165462",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 16 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting16 = flow.get(\"knobSetting16\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting16\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting16\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1826,
        "wires": [
            [
                "103496887551e0eb"
            ]
        ]
    },
    {
        "id": "8c580ca8be9bf882",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 11 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting11 = flow.get(\"knobSetting11\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting11\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting11\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1430,
        "wires": [
            [
                "f0257c3783659a03"
            ]
        ]
    },
    {
        "id": "201419f111266cba",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 13 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting13 = flow.get(\"knobSetting13\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting13\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting13\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1606,
        "wires": [
            [
                "90dc5cac5052e2d4"
            ]
        ]
    },
    {
        "id": "7d888d5c60835230",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob 12 Stereo Setting",
        "func": "\nvar newMsg\nvar stereoOffset\nvar knobSetting12 = flow.get(\"knobSetting12\")\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\n    if (stereoSetting == 1) {\n        flow.set(\"knobSetting12\", \"1\")\n        newMsg = {\"payload\": stereoOffset.toString()}\n    }\n    else {\n        flow.set(\"knobSetting12\", \"0\")\n        newMsg = {\"payload\": \"0\"}\n    }\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1474,
        "wires": [
            [
                "f0257c3783659a03"
            ]
        ]
    },
    {
        "id": "a149fbf79fc952c6",
        "type": "join",
        "z": "259aabf780b92836",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1040,
        "y": 572,
        "wires": [
            [
                "1807fbdf3a63f92f"
            ]
        ]
    },
    {
        "id": "8ac61cbb8f2afd56",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1544,
        "y": 748,
        "wires": []
    },
    {
        "id": "c43dc76f0d6c4db6",
        "type": "join",
        "z": "259aabf780b92836",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1040,
        "y": 748,
        "wires": [
            [
                "826785e1c991c053"
            ]
        ]
    },
    {
        "id": "dd77802d3e7e30a7",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1544,
        "y": 924,
        "wires": []
    },
    {
        "id": "dae9aaa5eb34a33e",
        "type": "join",
        "z": "259aabf780b92836",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1040,
        "y": 924,
        "wires": [
            [
                "23c47c7325c15745"
            ]
        ]
    },
    {
        "id": "0f51f43b63855feb",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1544,
        "y": 1100,
        "wires": []
    },
    {
        "id": "27c7528451afb195",
        "type": "join",
        "z": "259aabf780b92836",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1040,
        "y": 1100,
        "wires": [
            [
                "6c6e57d9f798941a"
            ]
        ]
    },
    {
        "id": "7b87a7ae819e6121",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1544,
        "y": 1276,
        "wires": []
    },
    {
        "id": "033792581749a5a3",
        "type": "join",
        "z": "259aabf780b92836",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1040,
        "y": 1276,
        "wires": [
            [
                "5781ad53c4622b3c"
            ]
        ]
    },
    {
        "id": "bf9b8e092e97e211",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1544,
        "y": 1452,
        "wires": []
    },
    {
        "id": "f0257c3783659a03",
        "type": "join",
        "z": "259aabf780b92836",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1040,
        "y": 1452,
        "wires": [
            [
                "d15cc868f9e414f5"
            ]
        ]
    },
    {
        "id": "3f07dca4d00660e8",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1544,
        "y": 1628,
        "wires": []
    },
    {
        "id": "90dc5cac5052e2d4",
        "type": "join",
        "z": "259aabf780b92836",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1040,
        "y": 1628,
        "wires": [
            [
                "96fee04dbc8f78a7"
            ]
        ]
    },
    {
        "id": "072cdfb2c2f74ed1",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1544,
        "y": 1804,
        "wires": []
    },
    {
        "id": "103496887551e0eb",
        "type": "join",
        "z": "259aabf780b92836",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1040,
        "y": 1804,
        "wires": [
            [
                "c1bdd84f5969ad52"
            ]
        ]
    },
    {
        "id": "826785e1c991c053",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1172,
        "y": 748,
        "wires": [
            [
                "19f88984f20a218f"
            ]
        ]
    },
    {
        "id": "23c47c7325c15745",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1172,
        "y": 924,
        "wires": [
            [
                "88cdffc5f0d8e2ca"
            ]
        ]
    },
    {
        "id": "6c6e57d9f798941a",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1172,
        "y": 1100,
        "wires": [
            [
                "2184596fb02c6d9d"
            ]
        ]
    },
    {
        "id": "5781ad53c4622b3c",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1172,
        "y": 1276,
        "wires": [
            [
                "ab5382775174f493"
            ]
        ]
    },
    {
        "id": "d15cc868f9e414f5",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1172,
        "y": 1452,
        "wires": [
            [
                "a492195c9ec3bbc7"
            ]
        ]
    },
    {
        "id": "96fee04dbc8f78a7",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1172,
        "y": 1628,
        "wires": [
            [
                "316c046474e42176"
            ]
        ]
    },
    {
        "id": "c1bdd84f5969ad52",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1172,
        "y": 1804,
        "wires": [
            [
                "fb3a6f84d413f9ca"
            ]
        ]
    },
    {
        "id": "1807fbdf3a63f92f",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Check Result 1",
        "func": "\nvar newMsg\nvar outputTrigger\nvar knobCheck1 = flow.get(\"knobCheck1\")\n\nif (msg.payload[0] == \"0\" || msg.payload[1] == \"0\") {\n    outputTrigger = \"0\"\n}\nelse if (msg.payload[0] == msg.payload[1] ) {\n    outputTrigger = \"1\"\n}\nelse {\n    outputTrigger = \"0\"\n}\n\nflow.set(\"knobCheck1\", outputTrigger)\n\nnewMsg = {\"payload\": knobCheck1}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1344,
        "y": 572,
        "wires": [
            [
                "2b34c7857f4775d1"
            ]
        ]
    },
    {
        "id": "19f88984f20a218f",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Check Result 2",
        "func": "\nvar newMsg\nvar outputTrigger\nvar knobCheck1 = flow.get(\"knobCheck2\")\n\nif (msg.payload[0] == \"0\" || msg.payload[1] == \"0\") {\n    outputTrigger = \"0\"\n}\nelse if (msg.payload[0] == msg.payload[1] ) {\n    outputTrigger = \"1\"\n}\nelse {\n    outputTrigger = \"0\"\n}\n\nflow.set(\"knobCheck2\", outputTrigger)\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1344,
        "y": 748,
        "wires": [
            [
                "8ac61cbb8f2afd56"
            ]
        ]
    },
    {
        "id": "88cdffc5f0d8e2ca",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Check Result 3",
        "func": "\nvar newMsg\nvar outputTrigger\nvar knobCheck1 = flow.get(\"knobCheck3\")\n\nif (msg.payload[0] == \"0\" || msg.payload[1] == \"0\") {\n    outputTrigger = \"0\"\n}\nelse if (msg.payload[0] == msg.payload[1] ) {\n    outputTrigger = \"1\"\n}\nelse {\n    outputTrigger = \"0\"\n}\n\nflow.set(\"knobCheck3\", outputTrigger)\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1344,
        "y": 924,
        "wires": [
            [
                "dd77802d3e7e30a7"
            ]
        ]
    },
    {
        "id": "2184596fb02c6d9d",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Check Result 4",
        "func": "\nvar newMsg\nvar outputTrigger\nvar knobCheck1 = flow.get(\"knobCheck4\")\n\nif (msg.payload[0] == \"0\" || msg.payload[1] == \"0\") {\n    outputTrigger = \"0\"\n}\nelse if (msg.payload[0] == msg.payload[1] ) {\n    outputTrigger = \"1\"\n}\nelse {\n    outputTrigger = \"0\"\n}\n\nflow.set(\"knobCheck4\", outputTrigger)\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1344,
        "y": 1100,
        "wires": [
            [
                "0f51f43b63855feb"
            ]
        ]
    },
    {
        "id": "ab5382775174f493",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Check Result 5",
        "func": "\nvar newMsg\nvar outputTrigger\nvar knobCheck1 = flow.get(\"knobCheck5\")\n\nif (msg.payload[0] == \"0\" || msg.payload[1] == \"0\") {\n    outputTrigger = \"0\"\n}\nelse if (msg.payload[0] == msg.payload[1] ) {\n    outputTrigger = \"1\"\n}\nelse {\n    outputTrigger = \"0\"\n}\n\nflow.set(\"knobCheck5\", outputTrigger)\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1344,
        "y": 1276,
        "wires": [
            [
                "7b87a7ae819e6121"
            ]
        ]
    },
    {
        "id": "a492195c9ec3bbc7",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Check Result 6",
        "func": "\nvar newMsg\nvar outputTrigger\nvar knobCheck1 = flow.get(\"knobCheck6\")\n\nif (msg.payload[0] == \"0\" || msg.payload[1] == \"0\") {\n    outputTrigger = \"0\"\n}\nelse if (msg.payload[0] == msg.payload[1] ) {\n    outputTrigger = \"1\"\n}\nelse {\n    outputTrigger = \"0\"\n}\n\nflow.set(\"knobCheck6\", outputTrigger)\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1344,
        "y": 1452,
        "wires": [
            [
                "bf9b8e092e97e211"
            ]
        ]
    },
    {
        "id": "316c046474e42176",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Check Result 7",
        "func": "\nvar newMsg\nvar outputTrigger\nvar knobCheck1 = flow.get(\"knobCheck7\")\n\nif (msg.payload[0] == \"0\" || msg.payload[1] == \"0\") {\n    outputTrigger = \"0\"\n}\nelse if (msg.payload[0] == msg.payload[1] ) {\n    outputTrigger = \"1\"\n}\nelse {\n    outputTrigger = \"0\"\n}\n\nflow.set(\"knobCheck7\", outputTrigger)\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1344,
        "y": 1628,
        "wires": [
            [
                "3f07dca4d00660e8"
            ]
        ]
    },
    {
        "id": "fb3a6f84d413f9ca",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Check Result 8",
        "func": "\nvar newMsg\nvar outputTrigger\nvar knobCheck1 = flow.get(\"knobCheck8\")\n\nif (msg.payload[0] == \"0\" || msg.payload[1] == \"0\") {\n    outputTrigger = \"0\"\n}\nelse if (msg.payload[0] == msg.payload[1] ) {\n    outputTrigger = \"1\"\n}\nelse {\n    outputTrigger = \"0\"\n}\n\nflow.set(\"knobCheck8\", outputTrigger)\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1344,
        "y": 1804,
        "wires": [
            [
                "072cdfb2c2f74ed1"
            ]
        ]
    },
    {
        "id": "02589fdb15fb98c6",
        "type": "trigger",
        "z": "259aabf780b92836",
        "name": "Heartbeat",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-20",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 566,
        "y": 176,
        "wires": [
            [
                "44e3e89a56cfb316"
            ]
        ]
    },
    {
        "id": "26cd7be5db5fd7cc",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Start Fast Messages",
        "func": "\nvar newMsg\n\nif (msg.uibuilderCtrl == \"ready for content\") {\n    //if (msg.name == \"Mixer Overview\") {\n        newMsg = {\n            \"payload\": {\"messageType\" : \"70\"}\n        }\n    }\n    else {\n    newMsg = {\"reset\": \"true\"}\n    }\n//}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 364,
        "y": 176,
        "wires": [
            [
                "02589fdb15fb98c6"
            ]
        ]
    },
    {
        "id": "44e3e89a56cfb316",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Assignment Packet Command",
        "func": "\nmsg.payload[\"assignments\"] = \"FF\"\n\nreturn msg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 176,
        "wires": [
            [
                "a0820c815cd4f068"
            ]
        ]
    },
    {
        "id": "d093b01efefc7d0c",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 220,
        "wires": []
    },
    {
        "id": "c4dc8687f5f09cd8",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 1122,
        "wires": []
    },
    {
        "id": "6fe8d1e5b66a6cb5",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Value",
        "func": "\nvar setValue = {\"setValue\": msg.payload}\n\nvar newMsg = {\"payload\": setValue, \"topic\": msg.topic}\n\nreturn newMsg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4312,
        "wires": [
            [
                "4b1ab49d3e393a2b",
                "6df670e817b57b9d"
            ]
        ]
    },
    {
        "id": "62df2318efddf47a",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Decimal => Hex Formatter",
        "func": "\nvar firstMsg = parseInt(msg.payload)\nvar formatMsg = firstMsg.toString(16)\nvar finMsg\n\nif (msg.topic != \"mixerName\") {\n\nif (formatMsg.length == 1) {\n    finMsg = \"0\" + formatMsg\n}\nelse {\n    finMsg = formatMsg\n}\n\nvar newMsg = {\"payload\": finMsg, \"topic\": msg.topic}\n}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 384,
        "y": 4312,
        "wires": [
            [
                "6fe8d1e5b66a6cb5",
                "1dd2eb3959c982da"
            ]
        ]
    },
    {
        "id": "4b1ab49d3e393a2b",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Parameter Code",
        "func": "\nswitch (msg.topic) {\n    case 'level1':\n        msg.payload[\"setKey\"] = \"00\"\n        break\n    case 'level2':\n        msg.payload[\"setKey\"] = \"01\"\n        break\n    case 'level3':\n        msg.payload[\"setKey\"] = \"02\"\n        break\n    case 'level4':\n        msg.payload[\"setKey\"] = \"03\"\n        break\n    case 'level5':\n        msg.payload[\"setKey\"] = \"04\"\n        break\n    case 'level6':\n        msg.payload[\"setKey\"] = \"05\"\n        break\n    case 'level7':\n        msg.payload[\"setKey\"] = \"06\"\n        break\n    case 'level8':\n        msg.payload[\"setKey\"] = \"07\"\n        break\n    case 'level9':\n        msg.payload[\"setKey\"] = \"08\"\n        break\n    case 'level10':\n        msg.payload[\"setKey\"] = \"09\"\n        break\n    case 'level11':\n        msg.payload[\"setKey\"] = \"0A\"\n        break\n    case 'level12':\n        msg.payload[\"setKey\"] = \"0B\"\n        break\n    case 'level13':\n        msg.payload[\"setKey\"] = \"0C\"\n        break\n    case 'level14':\n        msg.payload[\"setKey\"] = \"0D\"\n        break\n    case 'level15':\n        msg.payload[\"setKey\"] = \"0E\"\n        break\n    case 'level16':\n        msg.payload[\"setKey\"] = \"0F\"\n        break\n    case 'masterlevel':\n        msg.payload[\"setKey\"] = \"10\"\n        break\n    case 'masterauxlevel':\n        msg.payload[\"setKey\"] = \"11\"\n        break\n    case 'panlevel1':\n        msg.payload[\"setKey\"] = \"12\"\n        break\n    case 'panlevel2':\n        msg.payload[\"setKey\"] = \"13\"\n        break\n    case 'panlevel3':\n        msg.payload[\"setKey\"] = \"14\"\n        break\n    case 'panlevel4':\n        msg.payload[\"setKey\"] = \"15\"\n        break\n    case 'panlevel5':\n        msg.payload[\"setKey\"] = \"16\"\n        break\n    case 'panlevel6':\n        msg.payload[\"setKey\"] = \"17\"\n        break\n    case 'panlevel7':\n        msg.payload[\"setKey\"] = \"18\"\n        break\n    case 'panlevel8':\n        msg.payload[\"setKey\"] = \"19\"\n        break\n    case 'panlevel9':\n        msg.payload[\"setKey\"] = \"1A\"\n        break\n    case 'panlevel10':\n        msg.payload[\"setKey\"] = \"1B\"\n        break\n    case 'panlevel11':\n        msg.payload[\"setKey\"] = \"1C\"\n        break\n    case 'panlevel12':\n        msg.payload[\"setKey\"] = \"1D\"\n        break\n    case 'panlevel13':\n        msg.payload[\"setKey\"] = \"1E\"\n        break\n    case 'panlevel14':\n        msg.payload[\"setKey\"] = \"1F\"\n        break\n    case 'panlevel15':\n        msg.payload[\"setKey\"] = \"20\"\n        break\n    case 'panlevel16':\n        msg.payload[\"setKey\"] = \"21\"\n        break\n    case 'widthlevel1':\n        msg.payload[\"setKey\"] = \"22\"\n        break\n    case 'widthlevel2':\n        msg.payload[\"setKey\"] = \"23\"\n        break\n    case 'widthlevel3':\n        msg.payload[\"setKey\"] = \"24\"\n        break\n    case 'widthlevel4':\n        msg.payload[\"setKey\"] = \"25\"\n        break\n    case 'widthlevel5':\n        msg.payload[\"setKey\"] = \"26\"\n        break\n    case 'widthlevel6':\n        msg.payload[\"setKey\"] = \"27\"\n        break\n    case 'widthlevel7':\n        msg.payload[\"setKey\"] = \"28\"\n        break\n    case 'widthlevel8':\n        msg.payload[\"setKey\"] = \"29\"\n        break\n    case 'widthlevel9':\n        msg.payload[\"setKey\"] = \"30\"\n        break\n    case 'widthlevel10':\n        msg.payload[\"setKey\"] = \"31\"\n        break\n    case 'widthlevel11':\n        msg.payload[\"setKey\"] = \"32\"\n        break\n    case 'widthlevel12':\n        msg.payload[\"setKey\"] = \"33\"\n        break\n    case 'widthlevel13':\n        msg.payload[\"setKey\"] = \"34\"\n        break\n    case 'widthlevel14':\n        msg.payload[\"setKey\"] = \"35\"\n        break\n    case 'widthlevel15':\n        msg.payload[\"setKey\"] = \"36\"\n        break\n    case 'widthlevel16':\n        msg.payload[\"setKey\"] = \"37\"\n        break\n    case \"presetSetting\":\n        msg.payload[\"setKey\"] = \"2C\"\n        break\n    default:\n        console.log('default')\n}\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 826,
        "y": 4312,
        "wires": [
            [
                "ad243e6942bf66e4",
                "b225bbe4869bb974"
            ]
        ]
    },
    {
        "id": "72c8797b9b33a6bf",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Parameter Padding",
        "func": "\n    let padByte = \"00\"\n\n    let mixerPad = padByte.repeat(42)\n\n    msg.payload[\"packetData\"] = mixerPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1474,
        "y": 4312,
        "wires": [
            [
                "3064d3fcd46d2ba3",
                "86349d13f1f3c1d3"
            ]
        ]
    },
    {
        "id": "3064d3fcd46d2ba3",
        "type": "template",
        "z": "259aabf780b92836",
        "name": "Set Paramter Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.mixerID}}{{payload.messageType}}{{payload.setKey}}{{payload.setValue}}{{payload.setBank}}{{payload.packetData}}\"",
        "output": "json",
        "x": 1728,
        "y": 4312,
        "wires": [
            [
                "2b3f44b5167d5d8a",
                "0b2778e31d39e407"
            ]
        ]
    },
    {
        "id": "2b3f44b5167d5d8a",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Data to Mixer Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 4312,
        "wires": [
            [
                "448f6d82a7c8a51a",
                "37a51b0eb0830286"
            ]
        ]
    },
    {
        "id": "ad243e6942bf66e4",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"68\"}\n\nmsg.payload[\"messageType\"] = \"68\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1048,
        "y": 4312,
        "wires": [
            [
                "200a07d81cefc98b",
                "8ea2cf36b83bd386"
            ]
        ]
    },
    {
        "id": "200a07d81cefc98b",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Bank Code",
        "func": "\n//var messageType = {\"setBank\" : \"00\"}\n\n//var newMsg = {\"payload\": messageType}\n\nmsg.payload[\"setBank\"] = \"00\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1246,
        "y": 4312,
        "wires": [
            [
                "72c8797b9b33a6bf",
                "c64755cdb1c60b89"
            ]
        ]
    },
    {
        "id": "0220bd52a44aadd8",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Mixer Level Splitter",
        "func": "\nlet messages = []\nlet newMsgArray\n\nfor (let i = 3; i < 19; i+=2) {\n    messages.push({\"payload\": [msg.payload[i], msg.payload[i+1]]})\n}\n\nreturn messages;\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 596,
        "y": 2288,
        "wires": [
            [
                "aadc226e4e2a60fa"
            ],
            [
                "408e004c0543c0bf"
            ],
            [
                "6ada47106c31e679"
            ],
            [
                "9c2cc8aad58f919e"
            ],
            [
                "694836d841740c51"
            ],
            [
                "b67341b1f9f5d9f6"
            ],
            [
                "5e526d6da23e7b37"
            ],
            [
                "9ae4e4ffb31d3658"
            ]
        ]
    },
    {
        "id": "65de40908b816821",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Mixer ID to Topic",
        "func": "\nvar formatMsgID\nvar formatMsgID2\n\nvar msgID = msg.payload[0].toString(16)\nvar msgID2 = msg.payload[1].toString(16)\n\nif (msgID.length == 1) {\n    formatMsgID = \"0\" + msgID\n} \nelse {\n    formatMsgID = msgID  \n}\n\nif (msgID2.length == 1) {\n    formatMsgID2 = \"0\" + msgID2\n}\nelse {\n    formatMsgID2 = msgID2\n}\n\nvar newMsg = {\"payload\": msg.payload}\n\nnewMsg.topic = formatMsgID + formatMsgID2\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2244,
        "wires": [
            [
                "390c86869f53bc11"
            ]
        ]
    },
    {
        "id": "390c86869f53bc11",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Mixer ID to Flow Variable",
        "func": "var mixerID = flow.get('mixerID')\n\nflow.set(\"mixerID\", msg.topic)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 2288,
        "wires": [
            [
                "0220bd52a44aadd8",
                "42262f5a294a12a9",
                "25b497edcca1adc7",
                "d7aa3a788ce3c10a",
                "c505aa8e8b89aae4",
                "b47139cf35cb745f"
            ]
        ]
    },
    {
        "id": "aadc226e4e2a60fa",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck1\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"knob1\"}\n\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"knob2\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"knob2\"}\n}\n\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 1980,
        "wires": [
            [
                "292c5269d78751e2"
            ],
            [
                "103b3662f3b86aa0"
            ]
        ]
    },
    {
        "id": "408e004c0543c0bf",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck2\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"knob3\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"knob4\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"knob4\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 2068,
        "wires": [
            [
                "cde1dbc849130605"
            ],
            [
                "3ba435a50dcce033"
            ]
        ]
    },
    {
        "id": "6ada47106c31e679",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck3\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"knob5\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"knob6\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"knob6\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 2156,
        "wires": [
            [
                "2453521f4a6ab15a"
            ],
            [
                "99860f397c8f75b2"
            ]
        ]
    },
    {
        "id": "9c2cc8aad58f919e",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck4\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"knob7\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"knob8\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"knob8\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 2244,
        "wires": [
            [
                "0e5f2e9bc6e3011a"
            ],
            [
                "e26813cd01342f9a"
            ]
        ]
    },
    {
        "id": "694836d841740c51",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck5\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"knob9\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"knob10\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"knob10\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 2332,
        "wires": [
            [
                "49ab6438d747e0a6"
            ],
            [
                "3658f203f828ee34"
            ]
        ]
    },
    {
        "id": "b67341b1f9f5d9f6",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck6\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"knob11\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"knob12\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"knob12\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 2420,
        "wires": [
            [
                "db0354de3a3a984f"
            ],
            [
                "7e4f6f4405018036"
            ]
        ]
    },
    {
        "id": "5e526d6da23e7b37",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck7\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"knob13\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"knob14\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"knob14\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 2508,
        "wires": [
            [
                "40588ef85389dec4"
            ],
            [
                "87b353ebce2dabca"
            ]
        ]
    },
    {
        "id": "9ae4e4ffb31d3658",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck8\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"knob15\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"knob16\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"knob16\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 2596,
        "wires": [
            [
                "595bf33fcddb59d6"
            ],
            [
                "a31da8158dd0b194"
            ]
        ]
    },
    {
        "id": "1dd2eb3959c982da",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Post Format",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 334,
        "y": 4356,
        "wires": []
    },
    {
        "id": "6df670e817b57b9d",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Value",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 4356,
        "wires": []
    },
    {
        "id": "b225bbe4869bb974",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Param",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 796,
        "y": 4356,
        "wires": []
    },
    {
        "id": "8ea2cf36b83bd386",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Type",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1028,
        "y": 4356,
        "wires": []
    },
    {
        "id": "c64755cdb1c60b89",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Bank",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1226,
        "y": 4356,
        "wires": []
    },
    {
        "id": "86349d13f1f3c1d3",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Pad",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1424,
        "y": 4356,
        "wires": []
    },
    {
        "id": "0b2778e31d39e407",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Packet",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1698,
        "y": 4356,
        "wires": []
    },
    {
        "id": "448f6d82a7c8a51a",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Out Packet",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 4356,
        "wires": []
    },
    {
        "id": "292c5269d78751e2",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 1958,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "103b3662f3b86aa0",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2002,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "cde1dbc849130605",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2046,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "3ba435a50dcce033",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2090,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "2453521f4a6ab15a",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2134,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "99860f397c8f75b2",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2178,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "0e5f2e9bc6e3011a",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2222,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "e26813cd01342f9a",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2266,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "116d29984473d853",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name1\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 506,
        "wires": [
            [
                "84fd80c53fbdfdb9"
            ]
        ]
    },
    {
        "id": "43ff605cd982e2ec",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name3\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 682,
        "wires": [
            [
                "a994c74e46400714"
            ]
        ]
    },
    {
        "id": "b3daabb6517da319",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name4\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 814,
        "wires": [
            [
                "422f7274a16185c7"
            ]
        ]
    },
    {
        "id": "38581947b1a71bc0",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name5\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 858,
        "wires": [
            [
                "422f7274a16185c7"
            ]
        ]
    },
    {
        "id": "f84a2bd2858c0bf3",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name6\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 990,
        "wires": [
            [
                "340e68bec6dc5f71"
            ]
        ]
    },
    {
        "id": "cea36cb90b8264ad",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name7\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1034,
        "wires": [
            [
                "340e68bec6dc5f71"
            ]
        ]
    },
    {
        "id": "77b4b4adbf29e64b",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name8\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1166,
        "wires": [
            [
                "ee8d15040a07eb10"
            ]
        ]
    },
    {
        "id": "fb703cb62019c339",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name9\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1210,
        "wires": [
            [
                "ee8d15040a07eb10"
            ]
        ]
    },
    {
        "id": "fb7dbdc444633bd4",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name10\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1342,
        "wires": [
            [
                "91f198c9ef72c685"
            ]
        ]
    },
    {
        "id": "0e1aef1419bb13dc",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name11\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1386,
        "wires": [
            [
                "91f198c9ef72c685"
            ]
        ]
    },
    {
        "id": "935a0a3718840382",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name12\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1518,
        "wires": [
            [
                "7add77427d350731"
            ]
        ]
    },
    {
        "id": "96562e1ba7f6af5a",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name13\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1562,
        "wires": [
            [
                "7add77427d350731"
            ]
        ]
    },
    {
        "id": "f364f0dd54a65f30",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name14\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1694,
        "wires": [
            [
                "f93626d02953d69d"
            ]
        ]
    },
    {
        "id": "45d767a975d8cfa2",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name15\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1738,
        "wires": [
            [
                "f93626d02953d69d"
            ]
        ]
    },
    {
        "id": "de52f168ccdf7d3d",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Knob Name Assignment",
        "func": "\nvar newMsg\nvar stereoOffset\nvar finName\n\nvar offset = msg.payload + 1\n\n    if ((offset % 2) == 1) {\n        stereoOffset = (offset + 1)/2\n    }\n    else {\n        stereoOffset = offset/2\n    }\n\nvar stereoString = \"stereo\" + stereoOffset.toString()\n\nvar stereoSetting = global.get(stereoString)\n\nvar nameString = \"asciiName\" + offset.toString()\n\nvar nameVariable = global.get(nameString)\n\n    if (stereoSetting == \"1\") {\n        finName = '| ' + nameVariable + \" |\"\n    }\n    else {\n        finName = nameVariable\n    }\n\nvar finTopic = \"name16\"\nnewMsg = {\"payload\": finName, 'topic': finTopic}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 858,
        "y": 1870,
        "wires": [
            [
                "7a9bf1bbf694651c"
            ]
        ]
    },
    {
        "id": "84fd80c53fbdfdb9",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Knob Name Out",
        "mode": "link",
        "links": [
            "89a442f7073f575c",
            "81419ee817659c89"
        ],
        "x": 1092,
        "y": 506,
        "wires": [],
        "l": true
    },
    {
        "id": "a994c74e46400714",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Knob Name Out",
        "mode": "link",
        "links": [
            "89a442f7073f575c",
            "81419ee817659c89"
        ],
        "x": 1092,
        "y": 660,
        "wires": [],
        "l": true
    },
    {
        "id": "422f7274a16185c7",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Knob Name Out",
        "mode": "link",
        "links": [
            "89a442f7073f575c",
            "81419ee817659c89"
        ],
        "x": 1092,
        "y": 836,
        "wires": [],
        "l": true
    },
    {
        "id": "340e68bec6dc5f71",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Knob Name Out",
        "mode": "link",
        "links": [
            "89a442f7073f575c",
            "81419ee817659c89"
        ],
        "x": 1092,
        "y": 1012,
        "wires": [],
        "l": true
    },
    {
        "id": "ee8d15040a07eb10",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Knob Name Out",
        "mode": "link",
        "links": [
            "89a442f7073f575c",
            "81419ee817659c89"
        ],
        "x": 1092,
        "y": 1188,
        "wires": [],
        "l": true
    },
    {
        "id": "7b024a066c68587f",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2358,
        "y": 1738,
        "wires": []
    },
    {
        "id": "49ab6438d747e0a6",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2310,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "3658f203f828ee34",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2354,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "db0354de3a3a984f",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2398,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "7e4f6f4405018036",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2442,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "40588ef85389dec4",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2486,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "87b353ebce2dabca",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2530,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "595bf33fcddb59d6",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2574,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "a31da8158dd0b194",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2618,
        "wires": [
            [
                "0a96b61cb8bf0d6d"
            ]
        ]
    },
    {
        "id": "f3f6949760d201e3",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "knobCheck1",
        "payloadType": "flow",
        "x": 2148,
        "y": 2398,
        "wires": [
            [
                "9bf8c82e6617dff1"
            ]
        ]
    },
    {
        "id": "9bf8c82e6617dff1",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2358,
        "y": 2398,
        "wires": []
    },
    {
        "id": "91f198c9ef72c685",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Knob Name Out",
        "mode": "link",
        "links": [
            "89a442f7073f575c",
            "81419ee817659c89"
        ],
        "x": 1092,
        "y": 1364,
        "wires": [],
        "l": true
    },
    {
        "id": "7add77427d350731",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Knob Name Out",
        "mode": "link",
        "links": [
            "89a442f7073f575c",
            "81419ee817659c89"
        ],
        "x": 1092,
        "y": 1540,
        "wires": [],
        "l": true
    },
    {
        "id": "f93626d02953d69d",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Knob Name Out",
        "mode": "link",
        "links": [
            "89a442f7073f575c",
            "81419ee817659c89"
        ],
        "x": 1092,
        "y": 1716,
        "wires": [],
        "l": true
    },
    {
        "id": "7a9bf1bbf694651c",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Knob Name Out",
        "mode": "link",
        "links": [
            "89a442f7073f575c",
            "81419ee817659c89"
        ],
        "x": 1092,
        "y": 1870,
        "wires": [],
        "l": true
    },
    {
        "id": "2575418492d35c0b",
        "type": "link in",
        "z": "259aabf780b92836",
        "name": "UI Start In",
        "links": [
            "ee38b0bda74276e2"
        ],
        "x": 170,
        "y": 176,
        "wires": [
            [
                "26cd7be5db5fd7cc"
            ]
        ],
        "l": true
    },
    {
        "id": "0a96b61cb8bf0d6d",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Level Messages Out",
        "mode": "link",
        "links": [
            "daa75d64aa379f78",
            "230a854251ec4fa5"
        ],
        "x": 1244,
        "y": 2244,
        "wires": [],
        "l": true
    },
    {
        "id": "63d3fc3635bef396",
        "type": "link in",
        "z": "259aabf780b92836",
        "name": "Main Mixer In",
        "links": [
            "ce131b3af49ec5c4",
            "69110cd64ec08afd",
            "2253cb4c63cd7102"
        ],
        "x": 158,
        "y": 4312,
        "wires": [
            [
                "62df2318efddf47a"
            ]
        ],
        "l": true
    },
    {
        "id": "5662237b251f2a99",
        "type": "comment",
        "z": "259aabf780b92836",
        "name": "Mixer Polling Functionality",
        "info": "",
        "x": 220,
        "y": 110,
        "wires": []
    },
    {
        "id": "882ed0a702c8c76b",
        "type": "comment",
        "z": "259aabf780b92836",
        "name": "Name and Stereo Assignment Routing",
        "info": "",
        "x": 260,
        "y": 1056,
        "wires": []
    },
    {
        "id": "7acd745f513f7c5f",
        "type": "comment",
        "z": "259aabf780b92836",
        "name": "Volume Levels to UI Routing",
        "info": "",
        "x": 230,
        "y": 2134,
        "wires": []
    },
    {
        "id": "e125f3705749a430",
        "type": "comment",
        "z": "259aabf780b92836",
        "name": "Output to Mixer Assignment Messages",
        "info": "",
        "x": 238,
        "y": 4246,
        "wires": []
    },
    {
        "id": "42262f5a294a12a9",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Master Level",
        "func": "let newMsg\n\nnewMsg = {\"topic\": \"masterlevel\", \"payload\": msg.payload[19]}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 2420,
        "wires": [
            [
                "64d59ad3ae653caf"
            ]
        ]
    },
    {
        "id": "25b497edcca1adc7",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Aux Level",
        "func": "let newMsg\n\nnewMsg = {\"topic\": \"auxlevel\", \"payload\": msg.payload[20]}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 2464,
        "wires": [
            [
                "b239771116871046"
            ]
        ]
    },
    {
        "id": "538716bd0dee7693",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Master Level Out",
        "mode": "link",
        "links": [
            "252979335db5078a",
            "6a0c89594d87f55b"
        ],
        "x": 486,
        "y": 2420,
        "wires": [],
        "l": true
    },
    {
        "id": "17ba16af27cb44d0",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Aux Level Out",
        "mode": "link",
        "links": [
            "9e01dcc604670109",
            "f0dde1b2ae2e8f24"
        ],
        "x": 476,
        "y": 2464,
        "wires": [],
        "l": true
    },
    {
        "id": "b239771116871046",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 314,
        "y": 2464,
        "wires": [
            [
                "17ba16af27cb44d0"
            ]
        ]
    },
    {
        "id": "64d59ad3ae653caf",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 314,
        "y": 2420,
        "wires": [
            [
                "538716bd0dee7693"
            ]
        ]
    },
    {
        "id": "045b9fd9116a5dbe",
        "type": "link in",
        "z": "259aabf780b92836",
        "name": "Mixer Extended Data In",
        "links": [
            "74b40131f0e5c70a"
        ],
        "x": 210,
        "y": 3674,
        "wires": [
            [
                "8600890e7fd2d128",
                "e558261c096ee078"
            ]
        ],
        "l": true
    },
    {
        "id": "8600890e7fd2d128",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Retrieve Mixer Name",
        "func": "var mixerID = flow.get('mixerID')\nvar newMixerName = []\nvar newLetter\nvar formatLetter\nvar channelName\nvar tempName\nvar newMsg\n\nvar msgID = msg.payload[0].toString(16)\nvar msgID2 = msg.payload[1].toString(16)\n\nif (msgID.length == 1) {\n    formatMsgID = \"0\" + msgID\n} \nelse {\n    formatMsgID = msgID  \n}\n\nif (msgID2.length == 1) {\n    formatMsgID2 = \"0\" + msgID2\n}\nelse {\n    formatMsgID2 = msgID2\n}\n\nvar mixerIDCheck = formatMsgID + formatMsgID2\n\nif (mixerIDCheck == mixerID) {\n  \n    for (let i = 13; i < 25; i++) {\n        newLetter = msg.payload[i].toString(16)\n        \n        if (msg.payload[i] > 31) { \n        formatLetter = new Buffer(newLetter, \"hex\").toString()\n    \n        newMixerName.push(formatLetter)\n        }\n    }\n    \n    tempName = newMixerName.join('')\n    channelName = tempName.toUpperCase()\n\n    newMsg = {\"topic\": \"mixerName\", \"payload\": channelName}\n}\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 452,
        "y": 3674,
        "wires": [
            [
                "4e9dee2c587acb11",
                "be2ca029cff9cdcd",
                "73dfa3f6d8b9f82a"
            ]
        ]
    },
    {
        "id": "4e9dee2c587acb11",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 3718,
        "wires": []
    },
    {
        "id": "e558261c096ee078",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 3718,
        "wires": []
    },
    {
        "id": "a2828d04ec3a5c88",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Mixer Parameter Messages Out",
        "mode": "link",
        "links": [
            "6a6ecf3586193565"
        ],
        "x": 2264,
        "y": 352,
        "wires": [],
        "l": true
    },
    {
        "id": "fdafc7086f40205a",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Value",
        "func": "\nvar setValue = {\"setValue\": \"2e\"}\n\nvar newMsg = {\"payload\": setValue, \"topic\": \"Extended Data Request\"}\n\nreturn newMsg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 544,
        "y": 352,
        "wires": [
            [
                "4e0f047f800c7307",
                "6baa1c36e9e5aeba"
            ]
        ]
    },
    {
        "id": "4e0f047f800c7307",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Parameter Code",
        "func": "\nmsg.payload[\"setKey\"] = \"2c\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 738,
        "y": 352,
        "wires": [
            [
                "345cccd531f51534",
                "1e0dc71ad6980733"
            ]
        ]
    },
    {
        "id": "5daf30c482c1c3bd",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Parameter Padding",
        "func": "\n    let padByte = \"00\"\n\n    let mixerPad = padByte.repeat(42)\n\n    msg.payload[\"packetData\"] = mixerPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1386,
        "y": 352,
        "wires": [
            [
                "8b7a738da27b6550",
                "a2a0bfe495e8540f"
            ]
        ]
    },
    {
        "id": "8b7a738da27b6550",
        "type": "template",
        "z": "259aabf780b92836",
        "name": "Set Paramter Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.mixerID}}{{payload.messageType}}{{payload.setKey}}{{payload.setValue}}{{payload.setBank}}{{payload.packetCommand}}{{payload.packetData}}\"",
        "output": "json",
        "x": 1640,
        "y": 352,
        "wires": [
            [
                "c41dc6cfbb8dd363",
                "4e40c60af66322ee"
            ]
        ]
    },
    {
        "id": "c41dc6cfbb8dd363",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Data to Mixer Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1932,
        "y": 352,
        "wires": [
            [
                "087b3c2e89db9b05",
                "a2828d04ec3a5c88"
            ]
        ]
    },
    {
        "id": "345cccd531f51534",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"68\"}\n\nmsg.payload[\"messageType\"] = \"68\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 352,
        "wires": [
            [
                "2d0528772c19636e",
                "824a856b30366b8b"
            ]
        ]
    },
    {
        "id": "2d0528772c19636e",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Bank Code",
        "func": "\nmsg.payload[\"setBank\"] = \"00\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1158,
        "y": 352,
        "wires": [
            [
                "5daf30c482c1c3bd",
                "b122dd5c710a35dd"
            ]
        ]
    },
    {
        "id": "6baa1c36e9e5aeba",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Value",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 544,
        "y": 396,
        "wires": []
    },
    {
        "id": "1e0dc71ad6980733",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Param",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 708,
        "y": 396,
        "wires": []
    },
    {
        "id": "824a856b30366b8b",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Type",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 396,
        "wires": []
    },
    {
        "id": "b122dd5c710a35dd",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Bank",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1138,
        "y": 396,
        "wires": []
    },
    {
        "id": "a2a0bfe495e8540f",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Pad",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1336,
        "y": 396,
        "wires": []
    },
    {
        "id": "4e40c60af66322ee",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Packet",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1610,
        "y": 396,
        "wires": []
    },
    {
        "id": "087b3c2e89db9b05",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Out Packet",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1852,
        "y": 396,
        "wires": []
    },
    {
        "id": "f6d1d53b7960fefa",
        "type": "complete",
        "z": "259aabf780b92836",
        "name": "",
        "scope": [
            "390c86869f53bc11"
        ],
        "uncaught": false,
        "x": 180,
        "y": 352,
        "wires": [
            [
                "8864037d6737690d"
            ]
        ]
    },
    {
        "id": "8864037d6737690d",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 366,
        "y": 352,
        "wires": [
            [
                "fdafc7086f40205a"
            ]
        ]
    },
    {
        "id": "38f521b757b0c1d1",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Mixer Name Out",
        "mode": "link",
        "links": [
            "b3a455d36686dc36",
            "6b03d9a3e52d24bb"
        ],
        "x": 872,
        "y": 3674,
        "wires": [],
        "l": true
    },
    {
        "id": "be2ca029cff9cdcd",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 674,
        "y": 3674,
        "wires": [
            [
                "38f521b757b0c1d1",
                "adf6fdafef77e15f"
            ]
        ]
    },
    {
        "id": "af042b5028762163",
        "type": "comment",
        "z": "259aabf780b92836",
        "name": "Retrieve Mixer Name Functionality",
        "info": "",
        "x": 250,
        "y": 3608,
        "wires": []
    },
    {
        "id": "a872b571928d3e2b",
        "type": "comment",
        "z": "259aabf780b92836",
        "name": "Extended Data Packet Request",
        "info": "",
        "x": 240,
        "y": 286,
        "wires": []
    },
    {
        "id": "d7aa3a788ce3c10a",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Incoming Pan Level Assignments Out",
        "mode": "link",
        "links": [
            "a2dad1a51f38a6d6"
        ],
        "x": 260,
        "y": 2332,
        "wires": [],
        "l": true
    },
    {
        "id": "a2dad1a51f38a6d6",
        "type": "link in",
        "z": "259aabf780b92836",
        "name": "Incoming Pan Level Assignments In",
        "links": [
            "d7aa3a788ce3c10a"
        ],
        "x": 250,
        "y": 3058,
        "wires": [
            [
                "d37f0f3c493c5702"
            ]
        ],
        "l": true
    },
    {
        "id": "d37f0f3c493c5702",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Mixer Pan Splitter",
        "func": "\nlet messages = []\n\nfor (let i = 21; i < 37; i+=2) {\n    messages.push({\"payload\": [msg.payload[i], msg.payload[i+1]]})\n}\n\nreturn messages;\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 596,
        "y": 3058,
        "wires": [
            [
                "55f339e83d0b4e74"
            ],
            [
                "685fa3b7622d53fc"
            ],
            [
                "98dc8068583712fe"
            ],
            [
                "63b09222720eb384"
            ],
            [
                "77377594e6484323"
            ],
            [
                "041e1d656538f629"
            ],
            [
                "f724cb045e815a21"
            ],
            [
                "0cee22974a610830"
            ]
        ]
    },
    {
        "id": "55f339e83d0b4e74",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck1\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"pan1\"}\n\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"pan2\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"pan2\"}\n}\n\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 2750,
        "wires": [
            [
                "e93c5d3c60959eeb"
            ],
            [
                "2943eb6ec6469be7"
            ]
        ]
    },
    {
        "id": "685fa3b7622d53fc",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck2\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"pan3\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"pan4\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"pan4\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 2838,
        "wires": [
            [
                "c0b9fd2027fa73a2"
            ],
            [
                "9fe07e0ecb0c7380"
            ]
        ]
    },
    {
        "id": "98dc8068583712fe",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck3\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"pan5\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"pan6\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"pan6\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 2926,
        "wires": [
            [
                "3bb758a9973ea49c"
            ],
            [
                "1258eb26d75df8c4"
            ]
        ]
    },
    {
        "id": "63b09222720eb384",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck4\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"pan7\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"pan8\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"pan8\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 3014,
        "wires": [
            [
                "c59468439d186565"
            ],
            [
                "1de3c99bfeb87444"
            ]
        ]
    },
    {
        "id": "77377594e6484323",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck5\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"pan9\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"pan10\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"pan10\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 3102,
        "wires": [
            [
                "952a40b7abbfc86d"
            ],
            [
                "ce46d9ea68de7708"
            ]
        ]
    },
    {
        "id": "041e1d656538f629",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck6\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"pan11\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"pan12\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"pan12\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 3190,
        "wires": [
            [
                "b9edd51eaf916d66"
            ],
            [
                "2f38bb393c023379"
            ]
        ]
    },
    {
        "id": "f724cb045e815a21",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck7\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"pan13\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"pan14\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"pan14\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 3278,
        "wires": [
            [
                "3c8bd1dabef7f553"
            ],
            [
                "79e24a21934cca81"
            ]
        ]
    },
    {
        "id": "0cee22974a610830",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck8\")\n\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"pan15\"}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"pan16\"}\n}\nelse {\n    messages[1] = {\"payload\": msg.payload[1],\n                   \"topic\": \"pan16\"}\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 848,
        "y": 3366,
        "wires": [
            [
                "f8cb13dcc78daafa"
            ],
            [
                "fcd21d8b77c62f19"
            ]
        ]
    },
    {
        "id": "e93c5d3c60959eeb",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2728,
        "wires": [
            [
                "71d1b92bf02fe3ae",
                "d7be883ea0e55899"
            ]
        ]
    },
    {
        "id": "2943eb6ec6469be7",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2772,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "c0b9fd2027fa73a2",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2816,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "9fe07e0ecb0c7380",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2860,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "3bb758a9973ea49c",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2904,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "1258eb26d75df8c4",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2948,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "c59468439d186565",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 2992,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "1de3c99bfeb87444",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 3036,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "952a40b7abbfc86d",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 3080,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "ce46d9ea68de7708",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 3124,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "b9edd51eaf916d66",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 3168,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "2f38bb393c023379",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 3212,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "3c8bd1dabef7f553",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 3256,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "79e24a21934cca81",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 3300,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "f8cb13dcc78daafa",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 3344,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "fcd21d8b77c62f19",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1018,
        "y": 3388,
        "wires": [
            [
                "71d1b92bf02fe3ae"
            ]
        ]
    },
    {
        "id": "71d1b92bf02fe3ae",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Pan Level Assignments Out",
        "mode": "link",
        "links": [
            "67b4e1dda5be5e63",
            "2d5c52ccabd9222b"
        ],
        "x": 1286,
        "y": 3036,
        "wires": [],
        "l": true
    },
    {
        "id": "029dc138d81bdda0",
        "type": "comment",
        "z": "259aabf780b92836",
        "name": "Pan Level to UI Routing",
        "info": "",
        "x": 210,
        "y": 2992,
        "wires": []
    },
    {
        "id": "d7be883ea0e55899",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1214,
        "y": 2728,
        "wires": []
    },
    {
        "id": "bb50d3d023f84b7f",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Mixer Width Splitter",
        "func": "\nlet messages = []\n\nfor (let i = 37; i < 53; i+=2) {\n    messages.push({\"payload\": [msg.payload[i], msg.payload[i+1]]})\n}\n\nreturn messages;\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 3520,
        "wires": [
            [
                "dff8c5f8b64ff540"
            ],
            [
                "aca9b13116a27654"
            ],
            [
                "ac07623a0f3cf141"
            ],
            [
                "eef63a807987568b"
            ],
            [
                "3bc65d9dd32a892d"
            ],
            [
                "d8023bbfd10ce14a"
            ],
            [
                "a17d579b40f2f73c"
            ],
            [
                "15d154080dbe93a4"
            ]
        ]
    },
    {
        "id": "dff8c5f8b64ff540",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck1\")\nvar stereoCheck1 = flow.get(\"knobSetting1\")\nvar stereoCheck2 = flow.get(\"knobSetting2\")\n\nif (stereoCheck1 == 1) {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"width1\"}\n}\nelse {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"nowidth1\"}\n}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"width2\"}\n}\nelse {\n    if (stereoCheck2 == 1) {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"width2\"}\n    }\n    else {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"nowidth2\"}\n    }\n}\n\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1816,
        "y": 2882,
        "wires": [
            [
                "84500de05b528b34",
                "0cebe2399dc21371"
            ],
            [
                "47b4c0f41d6651b4",
                "a1add03063148723"
            ]
        ]
    },
    {
        "id": "aca9b13116a27654",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck2\")\nvar stereoCheck1 = flow.get(\"knobSetting3\")\nvar stereoCheck2 = flow.get(\"knobSetting4\")\n\nif (stereoCheck1 == 1) {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"width3\"}\n}\nelse {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"nowidth3\"}\n}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"width4\"}\n}\nelse {\n    if (stereoCheck2 == 1) {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"width4\"}\n    }\n    else {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"nowidth4\"}\n    }\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1816,
        "y": 3058,
        "wires": [
            [
                "8f5b0b83668c2a92",
                "0ca26659e3fa9c8d"
            ],
            [
                "25107e7e7f56e1aa",
                "68228c0f8fb36717"
            ]
        ]
    },
    {
        "id": "ac07623a0f3cf141",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck3\")\nvar stereoCheck1 = flow.get(\"knobSetting5\")\nvar stereoCheck2 = flow.get(\"knobSetting6\")\n\nif (stereoCheck1 == 1) {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"width5\"}\n}\nelse {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"nowidth5\"}\n}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"width6\"}\n}\nelse {\n    if (stereoCheck2 == 1) {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"width6\"}\n    }\n    else {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"nowidth6\"}\n    }\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1816,
        "y": 3234,
        "wires": [
            [
                "0d1e320454986eb3",
                "43d46330243e3233"
            ],
            [
                "cb2b7ef2ec58a9c7",
                "4340dbadb37b8cf6"
            ]
        ]
    },
    {
        "id": "eef63a807987568b",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck4\")\nvar stereoCheck1 = flow.get(\"knobSetting7\")\nvar stereoCheck2 = flow.get(\"knobSetting8\")\n\nif (stereoCheck1 == 1) {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"width7\"}\n}\nelse {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"nowidth7\"}\n}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"width8\"}\n}\nelse {\n    if (stereoCheck2 == 1) {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"width8\"}\n    }\n    else {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"nowidth8\"}\n    }\n}\n\nreturn messages;\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1816,
        "y": 3410,
        "wires": [
            [
                "671abd7aa73d6374",
                "75fe23ea7c3eaf43"
            ],
            [
                "7a736bd93e88a89b",
                "48d991602715bc49"
            ]
        ]
    },
    {
        "id": "3bc65d9dd32a892d",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck5\")\nvar stereoCheck1 = flow.get(\"knobSetting9\")\nvar stereoCheck2 = flow.get(\"knobSetting10\")\n\nif (stereoCheck1 == 1) {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"width9\"}\n}\nelse {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"nowidth9\"}\n}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"width10\"}\n}\nelse {\n    if (stereoCheck2 == 1) {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"width10\"}\n    }\n    else {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"nowidth10\"}\n    }\n}\n\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1816,
        "y": 3586,
        "wires": [
            [
                "b0f6b4d51cab4374",
                "447b188d3a9250be"
            ],
            [
                "28e306eb39a08f10",
                "4af8d4c1c73c94c1"
            ]
        ]
    },
    {
        "id": "d8023bbfd10ce14a",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck6\")\nvar stereoCheck1 = flow.get(\"knobSetting11\")\nvar stereoCheck2 = flow.get(\"knobSetting12\")\n\nif (stereoCheck1 == 1) {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"width11\"}\n}\nelse {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"nowidth11\"}\n}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"width12\"}\n}\nelse {\n    if (stereoCheck2 == 1) {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"width12\"}\n    }\n    else {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"nowidth12\"}\n    }\n}\n\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1816,
        "y": 3762,
        "wires": [
            [
                "543696e97514434e",
                "f3b7c0052ae37692"
            ],
            [
                "bf3d949eae2affe0",
                "2b08b4fad7805c08"
            ]
        ]
    },
    {
        "id": "a17d579b40f2f73c",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck7\")\nvar stereoCheck1 = flow.get(\"knobSetting13\")\nvar stereoCheck2 = flow.get(\"knobSetting14\")\n\nif (stereoCheck1 == 1) {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"width13\"}\n}\nelse {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"nowidth13\"}\n}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"width14\"}\n}\nelse {\n    if (stereoCheck2 == 1) {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"width14\"}\n    }\n    else {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"nowidth14\"}\n    }\n}\n\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1816,
        "y": 3938,
        "wires": [
            [
                "a984a9a6f23221ff",
                "a2e73ca6bf79fd80"
            ],
            [
                "1e941d31f6406b52",
                "54ec361b46827151"
            ]
        ]
    },
    {
        "id": "15d154080dbe93a4",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Stereo Levels Match",
        "func": "var messages = new Array(node.outputCount)\n\nvar knobCheck = flow.get(\"knobCheck8\")\nvar stereoCheck1 = flow.get(\"knobSetting15\")\nvar stereoCheck2 = flow.get(\"knobSetting16\")\n\nif (stereoCheck1 == 1) {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"width15\"}\n}\nelse {\nmessages[0] = {\"payload\": msg.payload[0], \"topic\": \"nowidth15\"}\n}\n\nif (knobCheck == 1) {\n    messages[1] = {\"payload\": msg.payload[0],\n                   \"topic\": \"width16\"}\n}\nelse {\n    if (stereoCheck2 == 1) {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"width16\"}\n    }\n    else {\n        messages[1] = {\"payload\": msg.payload[1],\n                       \"topic\": \"nowidth16\"}\n    }\n}\n\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1816,
        "y": 4114,
        "wires": [
            [
                "b6109438723fe585",
                "e92034db9f474004"
            ],
            [
                "8c80dca3325be755",
                "0c76733371b7ecde"
            ]
        ]
    },
    {
        "id": "59ceeb7e9bec812a",
        "type": "link in",
        "z": "259aabf780b92836",
        "name": "Incoming Width Level Assignments In",
        "links": [
            "c505aa8e8b89aae4"
        ],
        "x": 260,
        "y": 3520,
        "wires": [
            [
                "bb50d3d023f84b7f"
            ]
        ],
        "l": true
    },
    {
        "id": "c505aa8e8b89aae4",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Incoming Width Level Assignments Out",
        "mode": "link",
        "links": [
            "59ceeb7e9bec812a"
        ],
        "x": 270,
        "y": 2376,
        "wires": [],
        "l": true
    },
    {
        "id": "69600f0d3cb66afb",
        "type": "comment",
        "z": "259aabf780b92836",
        "name": "Width Level to UI Routing",
        "info": "",
        "x": 220,
        "y": 3454,
        "wires": []
    },
    {
        "id": "317e83cae90adc95",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 4180,
        "wires": [],
        "l": true
    },
    {
        "id": "84500de05b528b34",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 2816,
        "wires": [
            [
                "66ddce764ebe5641"
            ]
        ]
    },
    {
        "id": "47b4c0f41d6651b4",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 2948,
        "wires": [
            [
                "538eecdbcfba0a2f"
            ]
        ]
    },
    {
        "id": "b6109438723fe585",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 4048,
        "wires": [
            [
                "8e598c5d7ec1cda4"
            ]
        ]
    },
    {
        "id": "8c80dca3325be755",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 4180,
        "wires": [
            [
                "317e83cae90adc95"
            ]
        ]
    },
    {
        "id": "e92034db9f474004",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 4092,
        "wires": [
            [
                "faa15b5df0a276e6"
            ]
        ]
    },
    {
        "id": "0c76733371b7ecde",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 4136,
        "wires": [
            [
                "acdb1522b279cb0e"
            ]
        ]
    },
    {
        "id": "a1add03063148723",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 2904,
        "wires": [
            [
                "4b96ab94dee027eb"
            ]
        ]
    },
    {
        "id": "8f5b0b83668c2a92",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 2992,
        "wires": [
            [
                "d1c0a3e1268fa02e"
            ]
        ]
    },
    {
        "id": "25107e7e7f56e1aa",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 3124,
        "wires": [
            [
                "fbd118b531407937"
            ]
        ]
    },
    {
        "id": "0ca26659e3fa9c8d",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3036,
        "wires": [
            [
                "9ec7abc76fdc518d"
            ]
        ]
    },
    {
        "id": "68228c0f8fb36717",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3080,
        "wires": [
            [
                "e6800129d98f1014"
            ]
        ]
    },
    {
        "id": "acdb1522b279cb0e",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 4136,
        "wires": [],
        "l": true
    },
    {
        "id": "faa15b5df0a276e6",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 4092,
        "wires": [],
        "l": true
    },
    {
        "id": "8e598c5d7ec1cda4",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 4048,
        "wires": [],
        "l": true
    },
    {
        "id": "d1c0a3e1268fa02e",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 2992,
        "wires": [],
        "l": true
    },
    {
        "id": "9ec7abc76fdc518d",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3036,
        "wires": [],
        "l": true
    },
    {
        "id": "e6800129d98f1014",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3080,
        "wires": [],
        "l": true
    },
    {
        "id": "fbd118b531407937",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 3124,
        "wires": [],
        "l": true
    },
    {
        "id": "66ddce764ebe5641",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 2816,
        "wires": [],
        "l": true
    },
    {
        "id": "1829695e84aecb2d",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 2860,
        "wires": [],
        "l": true
    },
    {
        "id": "4b96ab94dee027eb",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 2904,
        "wires": [],
        "l": true
    },
    {
        "id": "538eecdbcfba0a2f",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 2948,
        "wires": [],
        "l": true
    },
    {
        "id": "0d1e320454986eb3",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 3168,
        "wires": [
            [
                "784a9f732824a827"
            ]
        ]
    },
    {
        "id": "4340dbadb37b8cf6",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 3300,
        "wires": [
            [
                "93a1ed659ce0d653"
            ]
        ]
    },
    {
        "id": "43d46330243e3233",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3212,
        "wires": [
            [
                "ee1a77f9ef60e76f"
            ]
        ]
    },
    {
        "id": "cb2b7ef2ec58a9c7",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3256,
        "wires": [
            [
                "e534e0dc0a4956bb"
            ]
        ]
    },
    {
        "id": "784a9f732824a827",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 3168,
        "wires": [],
        "l": true
    },
    {
        "id": "ee1a77f9ef60e76f",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3212,
        "wires": [],
        "l": true
    },
    {
        "id": "e534e0dc0a4956bb",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3256,
        "wires": [],
        "l": true
    },
    {
        "id": "93a1ed659ce0d653",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 3300,
        "wires": [],
        "l": true
    },
    {
        "id": "a984a9a6f23221ff",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 3872,
        "wires": [
            [
                "3c6f7618335fa60d"
            ]
        ]
    },
    {
        "id": "54ec361b46827151",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 4004,
        "wires": [
            [
                "b0781d49be7557c6"
            ]
        ]
    },
    {
        "id": "a2e73ca6bf79fd80",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3916,
        "wires": [
            [
                "20c094aeb36d40a3"
            ]
        ]
    },
    {
        "id": "1e941d31f6406b52",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3960,
        "wires": [
            [
                "fd86e119ca9379ab"
            ]
        ]
    },
    {
        "id": "3c6f7618335fa60d",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 3872,
        "wires": [],
        "l": true
    },
    {
        "id": "20c094aeb36d40a3",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3916,
        "wires": [],
        "l": true
    },
    {
        "id": "fd86e119ca9379ab",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3960,
        "wires": [],
        "l": true
    },
    {
        "id": "b0781d49be7557c6",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 4004,
        "wires": [],
        "l": true
    },
    {
        "id": "671abd7aa73d6374",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 3344,
        "wires": [
            [
                "a13ceec5a262820e"
            ]
        ]
    },
    {
        "id": "48d991602715bc49",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 3476,
        "wires": [
            [
                "624c48a5f73b86d2"
            ]
        ]
    },
    {
        "id": "75fe23ea7c3eaf43",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3388,
        "wires": [
            [
                "a54f5a56a7e425e9"
            ]
        ]
    },
    {
        "id": "7a736bd93e88a89b",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3432,
        "wires": [
            [
                "e597e92dc7849497"
            ]
        ]
    },
    {
        "id": "a13ceec5a262820e",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 3344,
        "wires": [],
        "l": true
    },
    {
        "id": "a54f5a56a7e425e9",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3388,
        "wires": [],
        "l": true
    },
    {
        "id": "e597e92dc7849497",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3432,
        "wires": [],
        "l": true
    },
    {
        "id": "624c48a5f73b86d2",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 3476,
        "wires": [],
        "l": true
    },
    {
        "id": "b0f6b4d51cab4374",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 3520,
        "wires": [
            [
                "ebdcee0c48786a1a"
            ]
        ]
    },
    {
        "id": "4af8d4c1c73c94c1",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 3652,
        "wires": [
            [
                "9cb8492ea8dc6525"
            ]
        ]
    },
    {
        "id": "447b188d3a9250be",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3564,
        "wires": [
            [
                "50d91b8292dd27dd"
            ]
        ]
    },
    {
        "id": "28e306eb39a08f10",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3608,
        "wires": [
            [
                "b9ac2b958bcff908"
            ]
        ]
    },
    {
        "id": "ebdcee0c48786a1a",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 3520,
        "wires": [],
        "l": true
    },
    {
        "id": "50d91b8292dd27dd",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3564,
        "wires": [],
        "l": true
    },
    {
        "id": "b9ac2b958bcff908",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3608,
        "wires": [],
        "l": true
    },
    {
        "id": "9cb8492ea8dc6525",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 3652,
        "wires": [],
        "l": true
    },
    {
        "id": "543696e97514434e",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 3696,
        "wires": [
            [
                "ce8d40f050b19f96"
            ]
        ]
    },
    {
        "id": "2b08b4fad7805c08",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2008,
        "y": 3828,
        "wires": [
            [
                "7303ab424d3ab6de"
            ]
        ]
    },
    {
        "id": "f3b7c0052ae37692",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3740,
        "wires": [
            [
                "778383717950188d"
            ]
        ]
    },
    {
        "id": "bf3d949eae2affe0",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 3784,
        "wires": [
            [
                "bac99310eb75dfd7"
            ]
        ]
    },
    {
        "id": "ce8d40f050b19f96",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 3696,
        "wires": [],
        "l": true
    },
    {
        "id": "778383717950188d",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3740,
        "wires": [],
        "l": true
    },
    {
        "id": "bac99310eb75dfd7",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2286,
        "y": 3784,
        "wires": [],
        "l": true
    },
    {
        "id": "7303ab424d3ab6de",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Width Level Assignments Out",
        "mode": "link",
        "links": [
            "55ec1072fb9f2b97",
            "5aa3a92604bf317e"
        ],
        "x": 2242,
        "y": 3828,
        "wires": [],
        "l": true
    },
    {
        "id": "b47139cf35cb745f",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Status Byte Check",
        "func": "\nlet statusByte = msg.payload[64]\nlet newMsg\n\n// Check Status Byte with \"bitwise AND\" against 192 to determine\n// Which series of status settings the Byte is returning\n\nconst pageCheck = 192\nlet statusCheck = statusByte & pageCheck\n\n// Check Status Byte with \"bitwise AND\" against 15 to see the last\n// 4 bit values in the Status Byte for Page 2 these 4 bits declare\n// What preset the mixer is currently set to\n\nlet presetCheck = statusByte & 15\n\n// If return value = 64 then the Status Byte is\n// Showing settings for Aux Mode, Logo Status, and Preset #\n\nif (statusCheck == 64) {\n    \n    // If Preset Check returns 8 then Mixer is using Preset 1\n    if (presetCheck == 8) {\n        newMsg = {\"topic\": \"bitCheck\", \"payload\": \"preset1\"}\n    }\n    // If Preset Check returns 4 then Mixer is using Preset 2\n    if (presetCheck == 4) {\n        newMsg = {\"topic\": \"bitCheck\", \"payload\": \"preset2\"}\n    }\n    // If Preset Check returns 2 then Mixer is using Preset 3\n    if (presetCheck == 2) {\n        newMsg = {\"topic\": \"bitCheck\", \"payload\": \"preset3\"}\n    }\n    // If Preset Check returns 1 then Mixer is using Preset 4\n    if (presetCheck == 1) {\n        newMsg = {\"topic\": \"bitCheck\", \"payload\": \"preset4\"}\n    }\n}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2508,
        "wires": [
            [
                "c0f3672311f6ad8f",
                "110cde642e8dbe84"
            ]
        ]
    },
    {
        "id": "8d3628b6497052f7",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 554,
        "y": 2618,
        "wires": []
    },
    {
        "id": "c0f3672311f6ad8f",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 160,
        "y": 2552,
        "wires": [
            [
                "078e68330bbd83bd"
            ]
        ]
    },
    {
        "id": "078e68330bbd83bd",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Current Preset Out",
        "mode": "link",
        "links": [
            "d2a3d333442bdd91",
            "11cefdbf4389f6c9"
        ],
        "x": 332,
        "y": 2552,
        "wires": [],
        "l": true
    },
    {
        "id": "110cde642e8dbe84",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 2508,
        "wires": [
            [
                "72655be02063af85",
                "8d3628b6497052f7"
            ]
        ]
    },
    {
        "id": "72655be02063af85",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Current Preset Out",
        "mode": "link",
        "links": [
            "d2a3d333442bdd91",
            "11cefdbf4389f6c9"
        ],
        "x": 618,
        "y": 2508,
        "wires": [],
        "l": true
    },
    {
        "id": "adf6fdafef77e15f",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 664,
        "y": 3718,
        "wires": []
    },
    {
        "id": "f6bdc381e52307f1",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "ASCII => Hex Formatter",
        "func": "\nlet newMsg\nlet fullName\n\nlet mixerAlias = global.get('mixerAlias')\n\nif (msg.topic == \"mixerName\") {\nvar pad = \"00\"\n\nvar count, padding, paddedMsg\n        \n    count = 12 - msg.payload.length\n        \n    padding = pad.repeat(count)\n\nvar hexName = []\n  \nfor (var i = 0; i < msg.payload.length; i++) {\n    var hex = Number(msg.payload.charCodeAt(i)).toString(16);\n    hexName.push(hex);\n}\n  \nfullName = hexName.join('')\n\npaddedMsg = fullName + padding\n\nnewMsg = {\"payload\": paddedMsg, \"topic\": msg.topic}\n}\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 374,
        "y": 4488,
        "wires": [
            [
                "fcbb0e1703b4eb36",
                "aede90f1790afd60"
            ]
        ]
    },
    {
        "id": "03f84abf427d5f03",
        "type": "link in",
        "z": "259aabf780b92836",
        "name": "Main Mixer In",
        "links": [
            "ce131b3af49ec5c4",
            "69110cd64ec08afd",
            "2253cb4c63cd7102"
        ],
        "x": 158,
        "y": 4488,
        "wires": [
            [
                "f6bdc381e52307f1"
            ]
        ],
        "l": true
    },
    {
        "id": "fcbb0e1703b4eb36",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 532,
        "y": 4554,
        "wires": []
    },
    {
        "id": "aede90f1790afd60",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Value",
        "func": "\nvar setValue = {\"setValue\": msg.payload}\n\nvar newMsg = {\"payload\": setValue, \"topic\": msg.topic}\n\nreturn newMsg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 588,
        "y": 4488,
        "wires": [
            [
                "60cb62dece9051de"
            ]
        ]
    },
    {
        "id": "60cb62dece9051de",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Parameter Code",
        "func": "\nif (msg.topic == \"mixerName\") {\nmsg.payload[\"setKey\"] = \"38\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 782,
        "y": 4488,
        "wires": [
            [
                "6d80063e50d88e6f"
            ]
        ]
    },
    {
        "id": "6d80063e50d88e6f",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"68\"}\n\nmsg.payload[\"messageType\"] = \"68\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1004,
        "y": 4488,
        "wires": [
            [
                "717a4971e25fd741"
            ]
        ]
    },
    {
        "id": "717a4971e25fd741",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Parameter Padding",
        "func": "\n    let padByte = \"00\"\n\n    let mixerPad = padByte.repeat(30)\n\n    msg.payload[\"packetData\"] = mixerPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1232,
        "y": 4488,
        "wires": [
            [
                "6aae0d3781ce0a1b"
            ]
        ]
    },
    {
        "id": "6aae0d3781ce0a1b",
        "type": "template",
        "z": "259aabf780b92836",
        "name": "Set Paramter Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.mixerID}}{{payload.messageType}}{{payload.setKey}}0090{{payload.setValue}}{{payload.packetData}}\"",
        "output": "json",
        "x": 1486,
        "y": 4488,
        "wires": [
            [
                "75ad46fd510e7278"
            ]
        ]
    },
    {
        "id": "75ad46fd510e7278",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Data to Mixer Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1778,
        "y": 4488,
        "wires": [
            [
                "9a1fd1a2e7a74502",
                "849a899decb99027"
            ]
        ]
    },
    {
        "id": "849a899decb99027",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Mixer Parameter Messages Out",
        "mode": "link",
        "links": [
            "6a6ecf3586193565"
        ],
        "x": 2110,
        "y": 4488,
        "wires": [],
        "l": true
    },
    {
        "id": "9a1fd1a2e7a74502",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 4554,
        "wires": []
    },
    {
        "id": "0cebe2399dc21371",
        "type": "delay",
        "z": "259aabf780b92836",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2038,
        "y": 2860,
        "wires": [
            [
                "1829695e84aecb2d"
            ]
        ]
    },
    {
        "id": "73dfa3f6d8b9f82a",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 644,
        "y": 3630,
        "wires": [
            [
                "078fc7bd6b0e0939"
            ]
        ]
    },
    {
        "id": "078fc7bd6b0e0939",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Mixer Name Out",
        "mode": "link",
        "links": [
            "b3a455d36686dc36",
            "6b03d9a3e52d24bb"
        ],
        "x": 872,
        "y": 3630,
        "wires": [],
        "l": true
    },
    {
        "id": "bebecebd7ee12ba7",
        "type": "template",
        "z": "259aabf780b92836",
        "name": "Set Paramter Packet",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\"{{flow.mixerID}}{{payload.messageType}}{{payload.setKey}}{{payload.setValue}}{{payload.packetData}}\"",
        "output": "json",
        "x": 1552,
        "y": 4686,
        "wires": [
            [
                "bf13c968b5380340",
                "bd673d197966f807"
            ]
        ]
    },
    {
        "id": "7a6f98b7788af6f0",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Value",
        "func": "\nvar setValue = {\"setValue\": msg.payload}\n\nvar newMsg = {\"payload\": setValue, \"topic\": \"00\"}\n\nreturn newMsg; \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 4686,
        "wires": [
            [
                "4f569357c20f5956",
                "84a145f2c1240ddb"
            ]
        ]
    },
    {
        "id": "0285215bf9404308",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Decimal => Hex Formatter",
        "func": "\nif (msg.topic == \"knobAssigns\") {\n    \n    var finArray = []\n    var finMsg\n    var formatMsg = msg.payload[1].slice(2)\n\n    for (let i = 1; i < 17; i++) {\n        if (msg.payload[0] == i.toString()) {\n            finArray.push(formatMsg)\n        }\n        else {\n            finArray.push(\"FD\")\n        }\n    }\n    \n    finMsg = finArray.join(\"\")\n    \n    var newMsg = {\"payload\": finMsg,\"topic\": msg.topic}\n}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 384,
        "y": 4686,
        "wires": [
            [
                "73f6699bb053304a",
                "7a6f98b7788af6f0"
            ]
        ]
    },
    {
        "id": "4f569357c20f5956",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Parameter Code",
        "func": "\nmsg.payload[\"setKey\"] = msg.topic\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 826,
        "y": 4686,
        "wires": [
            [
                "b3764bf667e17310",
                "9daf5cd4769136e5"
            ]
        ]
    },
    {
        "id": "b1f2c00af8331e86",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Set Parameter Padding",
        "func": "\n    let padByte = \"00\"\n\n    let mixerPad = padByte.repeat(28)\n\n    msg.payload[\"packetData\"] = mixerPad\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1298,
        "y": 4686,
        "wires": [
            [
                "97438bea5b4f46c9",
                "bebecebd7ee12ba7"
            ]
        ]
    },
    {
        "id": "bd673d197966f807",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Data to Mixer Message Byte Formatter",
        "func": "\nmsg.payload = new Buffer(msg.payload, \"hex\")\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1844,
        "y": 4686,
        "wires": [
            [
                "2445c7c8d61a9ac7",
                "d366e5f6a6e8e64c"
            ]
        ]
    },
    {
        "id": "b3764bf667e17310",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Message Type",
        "func": "\nvar messageType = {\"messageType\" : \"6a\"}\n\nmsg.payload[\"messageType\"] = \"6a\"\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1048,
        "y": 4686,
        "wires": [
            [
                "33c43f8625024abe",
                "b1f2c00af8331e86"
            ]
        ]
    },
    {
        "id": "73f6699bb053304a",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Post Format",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 334,
        "y": 4730,
        "wires": []
    },
    {
        "id": "84a145f2c1240ddb",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Value",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 4730,
        "wires": []
    },
    {
        "id": "9daf5cd4769136e5",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Param",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 796,
        "y": 4730,
        "wires": []
    },
    {
        "id": "33c43f8625024abe",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Type",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1028,
        "y": 4730,
        "wires": []
    },
    {
        "id": "97438bea5b4f46c9",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Pad",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1248,
        "y": 4730,
        "wires": []
    },
    {
        "id": "bf13c968b5380340",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Set Packet",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1522,
        "y": 4730,
        "wires": []
    },
    {
        "id": "2445c7c8d61a9ac7",
        "type": "debug",
        "z": "259aabf780b92836",
        "name": "Out Packet",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1786,
        "y": 4774,
        "wires": []
    },
    {
        "id": "1a4a75c3d41a2744",
        "type": "link in",
        "z": "259aabf780b92836",
        "name": "Main Mixer In",
        "links": [
            "ce131b3af49ec5c4",
            "69110cd64ec08afd",
            "2253cb4c63cd7102"
        ],
        "x": 158,
        "y": 4686,
        "wires": [
            [
                "0285215bf9404308"
            ]
        ],
        "l": true
    },
    {
        "id": "d366e5f6a6e8e64c",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Mixer Parameter Messages Out",
        "mode": "link",
        "links": [
            "6a6ecf3586193565"
        ],
        "x": 2176,
        "y": 4686,
        "wires": [],
        "l": true
    },
    {
        "id": "dee9c711f90b012d",
        "type": "inject",
        "z": "259aabf780b92836",
        "name": "Heartbeat",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "2.5",
        "topic": "Heartbeat",
        "payloadType": "date",
        "x": 180,
        "y": 4906,
        "wires": [
            [
                "0ce5a607a2535c17"
            ]
        ]
    },
    {
        "id": "0ce5a607a2535c17",
        "type": "function",
        "z": "259aabf780b92836",
        "name": "Grab Input Name List",
        "func": "\nlet messages = []\nlet newMsg\nlet list = []\n\nfor (i=1; i <= 32; i++) {\n    let name = global.get(\"asciiName\" + i.toString())\n    list.push(name)\n}\n\nnewMsg = {\"topic\": \"nameList\", \"payload\": list}\n\nif (msg.cacheControl == \"REPLAY\") {\n    messages[0] = newMsg\n}\nelse {\n    messages[1] = newMsg\n}\n\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 386,
        "y": 4862,
        "wires": [
            [
                "a062bbf2b7ebb3ed"
            ],
            [
                "93e4a79a07f651ff"
            ]
        ]
    },
    {
        "id": "93e4a79a07f651ff",
        "type": "rbe",
        "z": "259aabf780b92836",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 556,
        "y": 4906,
        "wires": [
            [
                "aa3465effb6cb777"
            ]
        ]
    },
    {
        "id": "c72578a912625c09",
        "type": "link in",
        "z": "259aabf780b92836",
        "name": "UI Start In",
        "links": [
            "ee38b0bda74276e2"
        ],
        "x": 148,
        "y": 4818,
        "wires": [
            [
                "0ce5a607a2535c17"
            ]
        ],
        "l": true
    },
    {
        "id": "aa3465effb6cb777",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Channel List Out",
        "mode": "link",
        "links": [
            "81bbf67069892ebd"
        ],
        "x": 728,
        "y": 4906,
        "wires": [],
        "l": true
    },
    {
        "id": "a062bbf2b7ebb3ed",
        "type": "link out",
        "z": "259aabf780b92836",
        "name": "Channel List Out",
        "mode": "link",
        "links": [
            "81bbf67069892ebd"
        ],
        "x": 596,
        "y": 4818,
        "wires": [],
        "l": true
    },
    {
        "id": "560d536a1c01cf2e",
        "type": "debug",
        "z": "07aa37bd8d4cfc0b",
        "name": "Pre-Format",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 576,
        "y": 198,
        "wires": []
    },
    {
        "id": "9a7f97de0623b416",
        "type": "debug",
        "z": "07aa37bd8d4cfc0b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 556,
        "y": 374,
        "wires": []
    },
    {
        "id": "8c052b4ebb9d72e8",
        "type": "uibuilder",
        "z": "07aa37bd8d4cfc0b",
        "name": "Main Mixer UI",
        "topic": "",
        "url": "main-mixer",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "useSecurity": false,
        "sessionLength": 432000,
        "tokenAutoExtend": false,
        "reload": false,
        "sourceFolder": "src",
        "x": 400,
        "y": 286,
        "wires": [
            [
                "560d536a1c01cf2e",
                "2e8dde2c55876fc6"
            ],
            [
                "9a7f97de0623b416",
                "ee38b0bda74276e2"
            ]
        ]
    },
    {
        "id": "81419ee817659c89",
        "type": "link in",
        "z": "07aa37bd8d4cfc0b",
        "name": "Knob Name In",
        "links": [
            "340e68bec6dc5f71",
            "422f7274a16185c7",
            "7a9bf1bbf694651c",
            "7add77427d350731",
            "84fd80c53fbdfdb9",
            "91f198c9ef72c685",
            "a994c74e46400714",
            "ee8d15040a07eb10",
            "f93626d02953d69d"
        ],
        "x": 180,
        "y": 242,
        "wires": [
            [
                "8c052b4ebb9d72e8"
            ]
        ],
        "l": true
    },
    {
        "id": "ee38b0bda74276e2",
        "type": "link out",
        "z": "07aa37bd8d4cfc0b",
        "name": "UI Start Out",
        "mode": "link",
        "links": [
            "2575418492d35c0b",
            "cb8d82e5ce9c1757",
            "36d2dce80ffbf47a",
            "c72578a912625c09"
        ],
        "x": 576,
        "y": 330,
        "wires": [],
        "l": true
    },
    {
        "id": "230a854251ec4fa5",
        "type": "link in",
        "z": "07aa37bd8d4cfc0b",
        "name": "Level Messages In",
        "links": [
            "0a96b61cb8bf0d6d"
        ],
        "x": 200,
        "y": 154,
        "wires": [
            [
                "8c052b4ebb9d72e8"
            ]
        ],
        "l": true
    },
    {
        "id": "69110cd64ec08afd",
        "type": "link out",
        "z": "07aa37bd8d4cfc0b",
        "name": "Main Mixer Out",
        "mode": "link",
        "links": [
            "63d3fc3635bef396",
            "03f84abf427d5f03",
            "1a4a75c3d41a2744"
        ],
        "x": 806,
        "y": 264,
        "wires": [],
        "l": true
    },
    {
        "id": "243214a513773aa1",
        "type": "comment",
        "z": "07aa37bd8d4cfc0b",
        "name": "Main Mixer UI Node",
        "info": "",
        "x": 200,
        "y": 88,
        "wires": []
    },
    {
        "id": "6a0c89594d87f55b",
        "type": "link in",
        "z": "07aa37bd8d4cfc0b",
        "name": "Master Level In",
        "links": [
            "538716bd0dee7693"
        ],
        "x": 190,
        "y": 462,
        "wires": [
            [
                "8c052b4ebb9d72e8"
            ]
        ],
        "l": true
    },
    {
        "id": "f0dde1b2ae2e8f24",
        "type": "link in",
        "z": "07aa37bd8d4cfc0b",
        "name": "Aux Level In",
        "links": [
            "17ba16af27cb44d0"
        ],
        "x": 180,
        "y": 330,
        "wires": [
            [
                "8c052b4ebb9d72e8"
            ]
        ],
        "l": true
    },
    {
        "id": "6b03d9a3e52d24bb",
        "type": "link in",
        "z": "07aa37bd8d4cfc0b",
        "name": "Mixer Name In",
        "links": [
            "38f521b757b0c1d1",
            "078fc7bd6b0e0939"
        ],
        "x": 190,
        "y": 198,
        "wires": [
            [
                "8c052b4ebb9d72e8"
            ]
        ],
        "l": true
    },
    {
        "id": "2d5c52ccabd9222b",
        "type": "link in",
        "z": "07aa37bd8d4cfc0b",
        "name": "Pan Level In",
        "links": [
            "71d1b92bf02fe3ae"
        ],
        "x": 180,
        "y": 374,
        "wires": [
            [
                "8c052b4ebb9d72e8"
            ]
        ],
        "l": true
    },
    {
        "id": "5aa3a92604bf317e",
        "type": "link in",
        "z": "07aa37bd8d4cfc0b",
        "name": "Width Level In",
        "links": [
            "1829695e84aecb2d",
            "20c094aeb36d40a3",
            "317e83cae90adc95",
            "3c6f7618335fa60d",
            "4b96ab94dee027eb",
            "50d91b8292dd27dd",
            "538eecdbcfba0a2f",
            "624c48a5f73b86d2",
            "66ddce764ebe5641",
            "7303ab424d3ab6de",
            "778383717950188d",
            "784a9f732824a827",
            "8e598c5d7ec1cda4",
            "93a1ed659ce0d653",
            "9cb8492ea8dc6525",
            "9ec7abc76fdc518d",
            "a13ceec5a262820e",
            "a54f5a56a7e425e9",
            "acdb1522b279cb0e",
            "b0781d49be7557c6",
            "b9ac2b958bcff908",
            "bac99310eb75dfd7",
            "ce8d40f050b19f96",
            "d1c0a3e1268fa02e",
            "e534e0dc0a4956bb",
            "e597e92dc7849497",
            "e6800129d98f1014",
            "ebdcee0c48786a1a",
            "ee1a77f9ef60e76f",
            "faa15b5df0a276e6",
            "fbd118b531407937",
            "fd86e119ca9379ab"
        ],
        "x": 180,
        "y": 286,
        "wires": [
            [
                "8c052b4ebb9d72e8"
            ]
        ],
        "l": true
    },
    {
        "id": "11cefdbf4389f6c9",
        "type": "link in",
        "z": "07aa37bd8d4cfc0b",
        "name": "Current Preset In",
        "links": [
            "078e68330bbd83bd",
            "72655be02063af85"
        ],
        "x": 190,
        "y": 418,
        "wires": [
            [
                "8c052b4ebb9d72e8"
            ]
        ],
        "l": true
    },
    {
        "id": "2e8dde2c55876fc6",
        "type": "function",
        "z": "07aa37bd8d4cfc0b",
        "name": "Message Type Routing",
        "func": "let messages = new Array (node.outputCount)\n\nlet levelCheck = msg.topic.includes(\"level\")\n\nif (levelCheck) {\n    messages[0] = msg\n}\nelse {\n    messages[1] = msg\n}\nreturn messages;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 606,
        "y": 242,
        "wires": [
            [
                "3a496c2e68a3f2c5"
            ],
            [
                "69110cd64ec08afd"
            ]
        ]
    },
    {
        "id": "4f6eb2cf4a1aa18b",
        "type": "debug",
        "z": "07aa37bd8d4cfc0b",
        "name": "Level Msg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 994,
        "y": 176,
        "wires": []
    },
    {
        "id": "3a496c2e68a3f2c5",
        "type": "delay",
        "z": "07aa37bd8d4cfc0b",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 806,
        "y": 220,
        "wires": [
            [
                "4f6eb2cf4a1aa18b",
                "2253cb4c63cd7102"
            ]
        ]
    },
    {
        "id": "2253cb4c63cd7102",
        "type": "link out",
        "z": "07aa37bd8d4cfc0b",
        "name": "Main Mixer Out",
        "mode": "link",
        "links": [
            "63d3fc3635bef396",
            "03f84abf427d5f03",
            "1a4a75c3d41a2744"
        ],
        "x": 1004,
        "y": 220,
        "wires": [],
        "l": true
    },
    {
        "id": "81bbf67069892ebd",
        "type": "link in",
        "z": "07aa37bd8d4cfc0b",
        "name": "Channel List In",
        "links": [
            "a062bbf2b7ebb3ed",
            "aa3465effb6cb777"
        ],
        "x": 190,
        "y": 506,
        "wires": [
            [
                "8c052b4ebb9d72e8",
                "c05d67e532dd20f4"
            ]
        ],
        "l": true
    },
    {
        "id": "c05d67e532dd20f4",
        "type": "debug",
        "z": "07aa37bd8d4cfc0b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 378,
        "y": 550,
        "wires": []
    }
]